openapi: 3.0.1
info:
  description: vRealize Network Insight API Reference
  title: vRealize Network Insight API Reference
  version: 1.1.8
servers:
- url: https://vrni.example.com/api/ni
tags:
- description: Authentication APIs
  name: Authentication
- description: Data Source APIs
  name: Data Sources
- description: Entities APIs
  name: Entities
- description: Search APIs
  name: Search
- description: Infra APIs
  name: Infrastructure
- description: Applications APIs
  name: Applications
- description: Micro-Segmentation APIs
  name: Microsegmentation
- description: Info APIs
  name: Info
- description: Settings APIs
  name: Settings
- description: Schema APIs
  name: Schema
- description: Metrics APIs
  name: Metrics
- description: Path Related APIs
  name: Path
- description: Logs APIs
  name: Logs
paths:
  /auth/token:
    delete:
      description: |-
        Deletes the auth token provided in Authorization header.
        Deleting an expired or invalid token will result in 401 Unauthorized error.
      operationId: delete
      responses:
        "204":
          content: {}
          description: Success
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an auth token.
      tags:
      - Authentication
    post:
      description: <html><body> vRealize Network Insight supports token based authentication.
        Tokens are non-modifiable identifiers returned by the system when the user
        has successfully authenticated using valid credentials. Token expires after
        expiry time returned in the response. All API requests must provide the auth
        token in Authorization header in following format:<br> Authorization &#58;
        NetworkInsight {token} <br> If a token is invalid or expired, 401-Unauthorized
        error gets returned in the response of the API request. <br> There is limit
        of 100 valid tokens per user and further requests will return 401-Unauthorized.
        So, users are advised to delete the tokens after use <br> Expired tokens are
        cleaned periodically by the system. </body></html>
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCredential'
        description: User Credentials
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
            token:
              example: 1rT7tm4riiACSfxrO2BvkA==
            expiry:
              example: 1509332642427
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      summary: Create an auth token
      tags:
      - Authentication
      x-codegen-request-body-name: body
  /auth/token/vidm:
    post:
      description: <html><body> vRealize Network Insight supports token based authentication.
        Tokens are non-modifiable identifiers returned by the system when the user
        has been successfully authenticated using valid access token provided by configured
        VMware Identity Manager appliance. Token expires after expiry time (returned
        in the response). All API requests must provide the auth token in Authorization
        header in following format:<br> Authorization &#58; NetworkInsight {token}
        <br> If a token is invalid or expired, 401-Unauthorized error gets returned
        in the response of the API request. </body></html>
      operationId: createVidmUserToken
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VidmToken'
        description: User access token provided by VMware Identity Manager.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Precondition Failed
        "500":
          content: {}
          description: Internal Error
      summary: Create an auth token for user mapped through VMware Identity Manager
      tags:
      - Authentication
      x-codegen-request-body-name: body
  /auth/vidm/client-id:
    get:
      description: |-
        Get client-id of password grant OAuth client registered at VMware Identity Manager.
        This client-id along with user credentials is required while making an access token request to VMware Identity Manager.
      operationId: getVidmOauthClienId
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VidmOauthClientResponse'
          description: Success
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      summary: Get the client-id for making user access-token request to VMware Identity
        Manager
      tags:
      - Authentication
  /infra/nodes:
    get:
      description: Get list of infrastructure nodes. Only admin users can retrieve
        this information.
      operationId: listNodes
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NodeListResult'
            results:
              example:
              - id: 18230:901:1585583463
                entity_type: NODE
              - id: 18230:901:1706494033
                entity_type: NODE
            total_count:
              example: 2
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List nodes
      tags:
      - Infrastructure
  /infra/nodes/{id}:
    get:
      description: |-
        Get details of infrastructure nodes. Only admin users can get this information. The proxy id is
        required for adding a data source for selecting appropriate proxy node to add the data source.
      operationId: getNode
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node'
            id:
              example: 18230:901:1585583463
            entity_type:
              example: NODE
            node_type:
              example: PROXY_VM
            node_id:
              example: IOYHU2J
            ip_address:
              example: 10.126.103.156
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show node details
      tags:
      - Infrastructure
  /info/version:
    get:
      description: Show version info
      operationId: getVersion
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VersionResponse'
            api_version:
              example: 1.1.7
          description: OK
        "401":
          content: {}
          description: Unauthorized
      security:
      - ApiKeyAuth: []
      summary: Show version info
      tags:
      - Info
  /data-sources/vcenters:
    get:
      description: List vCenter data sources
      operationId: listVcenters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:902:993642895
                entity_type: VCenterDataSource
              - entity_id: 18230:902:627340998
                entity_type: VCenterDataSource
            total_count:
              example: 2
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List vCenter data sources
      tags:
      - Data Sources
    post:
      description: |-
        Add a vCenter data source. You must provide one of IP or FQDN field in the request body.
        Appropriate proxy id is retrieved from /infra/nodes URL to select the proxy node.
      operationId: addVcenterDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VCenterDataSourceRequest'
        description: vCenter Credentials
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenterDataSource'
            entity_id:
              example: 18230:902:993642895
            entity_type:
              example: VCenterDataSource
            ip:
              example: 10.197.17.68
            fqdn: {}
            proxy_id:
              example: 18230:901:1585583463
            nickname:
              example: My vCenter
            enabled:
              example: true
            notes:
              example: Located in DC1
            credentials:
              example:
                username: administrator@vsphere.local
                password: ""
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a vCenter data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/vcenters/{id}:
    delete:
      description: Delete a data source
      operationId: deleteVcenter
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a vCenter data source
      tags:
      - Data Sources
    get:
      description: Show vCenter data source details
      operationId: getVcenter
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenterDataSource'
            entity_id:
              example: 18230:902:993642895
            entity_type:
              example: VCenterDataSource
            ip:
              example: 10.197.17.68
            fqdn: {}
            proxy_id:
              example: 18230:901:1585583463
            nickname:
              example: My vCenter
            enabled:
              example: true
            notes:
              example: Located in DC2
            credentials:
              example:
                username: administrator@vsphere.local
                password: ""
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show vCenter data source details
      tags:
      - Data Sources
    put:
      description: Update a vcenter data source. Only nickname, notes and credentials
        can be updated.
      operationId: updateVcenter
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VCenterDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenterDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a vCenter data source.
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/vcenters/{id}/enable:
    post:
      description: Enable a vCenter data source
      operationId: enableVcenter
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a vCenter data source
      tags:
      - Data Sources
  /data-sources/vcenters/{id}/disable:
    post:
      description: Disable a vCenter data source
      operationId: disableVcenter
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a vCenter data source
      tags:
      - Data Sources
  /data-sources/f5-bigip:
    get:
      description: List F5 BIG-IP data sources
      operationId: listF5BIGIP
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:952:993642895
                entity_type: F5BIGIPDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List F5 BIG-IP data sources
      tags:
      - Data Sources
    post:
      description: Add a F5 BIG-IP Load Balancer as a data source
      operationId: addF5BIGIP
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/F5BIGIPDataSourceRequest'
        description: Add a F5 BIG-IP as datasource
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/F5BIGIPDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add a F5 BIG-IP as data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/f5-bigip/{id}:
    delete:
      description: Delete a F5 BIG-IP data source
      operationId: deleteF5BIGIP
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a F5 BIG-IP data source
      tags:
      - Data Sources
    get:
      description: Show F5 BIG-IP data source details
      operationId: getF5BIGIP
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/F5BIGIPDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show F5 BIG-IP data source details
      tags:
      - Data Sources
    put:
      description: Update a F5 BIG-IP data source
      operationId: updateF5BIGIP
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/F5BIGIPDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/F5BIGIPDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a F5 BIG-IP data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/f5-bigip/{id}/enable:
    post:
      description: Enable a F5 BIG-IP data source
      operationId: enableF5BIGIP
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a F5 BIG-IP data source
      tags:
      - Data Sources
  /data-sources/f5-bigip/{id}/disable:
    post:
      description: Disable a F5 BIG-IP data source
      operationId: disableF5BIGIP
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a F5 BIG-IP data source
      tags:
      - Data Sources
  /data-sources/f5-bigip/{id}/snmp-config:
    get:
      description: Show SNMP config for F5 BIG-IP data source
      operationId: getF5BIGIPSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for F5 BIG-IP data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for a F5 BIG-IP data source
      operationId: updateF5BIGIPSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for a F5 BIG-IP data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/huawei:
    get:
      description: List Huawei data sources
      operationId: listHuawei
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:960:993642895
                entity_type: HuaweiSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Huawei data sources
      tags:
      - Data Sources
    post:
      description: Add switch Datasource
      operationId: addHuawei
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HuaweiSwitchDataSourceRequest'
        description: Add a Huawei as datasource
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HuaweiSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add a Huawei as data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/huawei/{id}:
    delete:
      description: Delete a Huawei data source
      operationId: deleteHuawei
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Huawei data source
      tags:
      - Data Sources
    get:
      description: Show Huawei data source details
      operationId: getHuawei
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HuaweiSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Huawei data source details
      tags:
      - Data Sources
    put:
      description: Update a Huawei data source
      operationId: updateHuawei
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HuaweiSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HuaweiSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Huawei data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/huawei/{id}/enable:
    post:
      description: Enable a Huawei data source
      operationId: enableHuawei
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Huawei data source
      tags:
      - Data Sources
  /data-sources/huawei/{id}/disable:
    post:
      description: Disable a Huawei data source
      operationId: disableHuawei
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Huawei data source
      tags:
      - Data Sources
  /data-sources/huawei/{id}/snmp-config:
    get:
      description: Show SNMP config for Huawei data source
      operationId: getHuaweiSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Huawei data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for a Huawei data source
      operationId: updateHuaweiSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for a Huawei data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/generic-switches:
    get:
      description: List generic switch data sources
      operationId: listGenericSwitch
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:963:993642895
                entity_type: GenericSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List generic switch data sources
      tags:
      - Data Sources
    post:
      description: Add generic switch as data source.
      operationId: addGenericSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericSwitchDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create generic switch as data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/generic-switches/{id}:
    delete:
      description: Delete generic switch data source
      operationId: deleteGenericSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete generic switch data source
      tags:
      - Data Sources
    get:
      description: Show generic switch data source details
      operationId: getGenericSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show generic switch data source details
      tags:
      - Data Sources
    put:
      description: Update generic switch data source
      operationId: updateGenericSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GenericSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GenericSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update generic switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/generic-switches/{id}/data:
    put:
      description: Upload configuration of the generic data source in .zip format
      operationId: fileUpload
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          multipart/form-data:
            schema:
              properties:
                file:
                  description: The file to upload.
                  format: binary
                  type: string
              required:
              - file
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: File Upload
      tags:
      - Data Sources
  /data-sources/generic-switches/{id}/enable:
    post:
      description: Enable generic switch data source
      operationId: enableGenericSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable generic switch data source
      tags:
      - Data Sources
  /data-sources/generic-switches/{id}/disable:
    post:
      description: Disable generic switch data source
      operationId: disableGenericSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable generic switch data source
      tags:
      - Data Sources
  /data-sources/hpe-switches:
    get:
      description: List HPE switch data sources
      operationId: listHPESwitches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:1960:993642895
                entity_type: HPESwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List HPE switch data sources
      tags:
      - Data Sources
    post:
      description: Add a HPE switch as data source
      operationId: addHPESwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HPESwitchDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPESwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a HPE switch as data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hpe-switches/{id}:
    delete:
      description: Delete a HPE switch data source
      operationId: deleteHPESwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a HPE switch data source
      tags:
      - Data Sources
    get:
      description: Show HPE switch data source details
      operationId: getHPESwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPESwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show HPE switch data source details
      tags:
      - Data Sources
    put:
      description: Update a HPE switch data source
      operationId: updateHPESwitchManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HPESwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPESwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a HPE switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hpe-switches/{id}/enable:
    post:
      description: Enable a HPE switch data source
      operationId: enableHPESwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a HPE switch data source
      tags:
      - Data Sources
  /data-sources/hpe-switches/{id}/disable:
    post:
      description: Disable a HPE switch data source
      operationId: disableHPESwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a HPE switch data source
      tags:
      - Data Sources
  /data-sources/hpe-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for HPE switch data source
      operationId: getHPESwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for HPE switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for HPE switch data source
      operationId: updateHPESwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for HPE switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/mellanox-switches:
    get:
      description: List Mellanox switch data sources
      operationId: listMellanoxSwitches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:985:993642895
                entity_type: MellanoxSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Mellanox switch data sources
      tags:
      - Data Sources
    post:
      description: Add a Mellanox switch as data source
      operationId: addMellanoxSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MellanoxSwitchDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MellanoxSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Mellanox switch as data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/mellanox-switches/{id}:
    delete:
      description: Delete a Mellanox switch data source
      operationId: deleteMellanoxSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Mellanox switch data source
      tags:
      - Data Sources
    get:
      description: Show Mellanox switch data source details
      operationId: getMellanoxSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPESwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Mellanox switch data source details
      tags:
      - Data Sources
    put:
      description: Update a Mellanox switch data source
      operationId: updateMellanoxSwitchManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MellanoxSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MellanoxSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Mellanox switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/mellanox-switches/{id}/enable:
    post:
      description: Enable a Mellanox switch data source
      operationId: enableMellanoxSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Mellanox switch data source
      tags:
      - Data Sources
  /data-sources/mellanox-switches/{id}/disable:
    post:
      description: Disable a Mellanox switch data source
      operationId: disableMellanoxSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Mellanox switch data source
      tags:
      - Data Sources
  /data-sources/mellanox-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for Mellanox switch data source
      operationId: getMellanoxSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Mellanox switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Mellanox switch data source
      operationId: updateMellanoxSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Mellanox switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-asrxr-switches:
    get:
      description: List Cisco ASR XR switch data sources
      operationId: listCiscoASRXRSwitches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:985:993642895
                entity_type: CiscoASRXRSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Cisco ASR XR switch data sources
      tags:
      - Data Sources
    post:
      description: Add a Cisco ASR XR switch as data source
      operationId: addCiscoASRXRSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiscoASRXRSwitchDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoASRXRSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Cisco ASR XR switch as data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-asrxr-switches/{id}:
    delete:
      description: Delete a Cisco ASR XR switch data source
      operationId: deleteCiscoASRXRSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Cisco ASR XR switch data source
      tags:
      - Data Sources
    get:
      description: Show Cisco ASR XR switch data source details
      operationId: getCiscoASRXRSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoASRXRSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Cisco ASR XR switch data source details
      tags:
      - Data Sources
    put:
      description: Update a Cisco ASR XR switch data source
      operationId: updateCiscoASRXRSwitchManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiscoASRXRSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoASRXRSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Cisco ASR XR switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-asr-xr-switches/{id}/enable:
    post:
      description: Enable a Cisco ASR XR switch data source
      operationId: enableCiscoASRXRSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Cisco ASR XR switch data source
      tags:
      - Data Sources
  /data-sources/cisco-asrxr-switches/{id}/disable:
    post:
      description: Disable a Cisco ASR XR switch data source
      operationId: disableCiscoASRXRSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Cisco ASR XR switch data source
      tags:
      - Data Sources
  /data-sources/cisco-asr-xr-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for Cisco ASR XR switch data source
      operationId: getCiscoASRXRSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Cisco ASR XR switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Cisco ASR XR switch data source
      operationId: updateCiscoASRXRSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Cisco ASR XR switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-switches:
    get:
      description: List Cisco switch data sources
      operationId: listCiscoSwitches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Cisco switch data sources
      tags:
      - Data Sources
    post:
      description: |-
        Add Cisco switch as data source. You must provide one of IP or FQDN field in the request body.
        Appropriate proxy id is retrieved from infra/nodes URL to select the proxy node.
      operationId: addCiscoSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiscoSwitchDataSourceRequest'
        description: Add a Cisco switch as datasource.
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "412":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Precondition Failed
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Cisco switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-switches/{id}:
    delete:
      description: Delete a Cisco switch data source
      operationId: deleteCiscoSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Cisco switch data source
      tags:
      - Data Sources
    get:
      description: Show Cisco switch data source details
      operationId: getCiscoSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Cisco switch data source details
      tags:
      - Data Sources
    put:
      description: Update a Cisco switch data source. Only credentials, nickname and
        notes can be updated.
      operationId: updateCiscoSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiscoSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Cisco switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-switches/{id}/enable:
    post:
      description: Enable a Cisco switch data source
      operationId: enableCiscoSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Cisco switch data source
      tags:
      - Data Sources
  /data-sources/cisco-switches/{id}/disable:
    post:
      description: Disable a Cisco switch data source
      operationId: disableCiscoSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Cisco switch data source
      tags:
      - Data Sources
  /data-sources/cisco-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for Cisco switch data source
      operationId: getCiscoSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Cisco switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Cisco switch data source
      operationId: updateCiscoSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Cisco switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-switches/{id}/wan-config:
    get:
      description: Show WAN config for Cisco switch data source. This will only work
        for Cisco ASR and ISR data sources.
      operationId: getCiscoSwitchWANConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show WAN config for Cisco switch data source
      tags:
      - Data Sources
    put:
      description: Update WAN config for Cisco switch data source. This will only
        work for Cisco ASR and ISR data sources.
      operationId: updateCiscoSwitchWANConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WANConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WANConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update WAN config for Cisco switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/dell-switches:
    get:
      description: List Dell switch data sources
      operationId: listDellSwitches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:902:993642895
                entity_type: DellSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Dell switch data sources
      tags:
      - Data Sources
    post:
      description: Add a Dell switch as data source
      operationId: addDellSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DellSwitchDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DellSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Dell switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/dell-switches/{id}:
    delete:
      description: Delete a data source
      operationId: deleteDellSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Dell switch data source
      tags:
      - Data Sources
    get:
      description: Get a Dell switch data source details
      operationId: getDellSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DellSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Dell switch data source details
      tags:
      - Data Sources
    put:
      description: Update a Dell switch data source. Only credentials, nickname and
        notes can be updated
      operationId: updateDellSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DellSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DellSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Dell switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/dell-switches/{id}/enable:
    post:
      description: Enable a Dell switch data source
      operationId: enableDellSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Dell switch data source
      tags:
      - Data Sources
  /data-sources/dell-switches/{id}/disable:
    post:
      description: Disable a Dell switch data source
      operationId: disableDellSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Dell switch data source
      tags:
      - Data Sources
  /data-sources/dell-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for Dell switch data source
      operationId: getDellSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Dell switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Dell switch data source
      operationId: updateDellSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Dell switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/dell-os10-switches:
    get:
      description: List Dell os10 switch data sources
      operationId: listDellOs10Switches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:902:993642895
                entity_type: DellSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Dell os10 switch data sources
      tags:
      - Data Sources
    post:
      description: Add a Dell OS10 switch as data source
      operationId: addDellOs10Switch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DellOs10SwitchDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DellSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Dell OS10 switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/dell-os10-switches/{id}:
    delete:
      description: Delete a data source
      operationId: deleteDellOs10Switch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Dell os10 switch data source
      tags:
      - Data Sources
    get:
      description: Get a Dell os10 switch data source details
      operationId: getDellOs10Switch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DellSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Dell os10 switch data source details
      tags:
      - Data Sources
    put:
      description: Update a Dell os10 switch data source. Only credentials, nickname
        and notes can be updated
      operationId: updateDellOs10Switch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DellSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DellSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Dell os10 switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/dell-os10-switches/{id}/enable:
    post:
      description: Enable a Dell os10 switch data source
      operationId: enableDellOs10Switch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Dell os10 switch data source
      tags:
      - Data Sources
  /data-sources/dell-os10-switches/{id}/disable:
    post:
      description: Disable a Dell os10 switch data source
      operationId: disableDellOs10Switch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Dell os10 switch data source
      tags:
      - Data Sources
  /data-sources/dell-os10-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for Dell os10 switch data source
      operationId: getDellOs10SwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Dell os10 switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Dell os10 switch data source
      operationId: updateDellOs10SwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Dell os10 switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/brocade-switches:
    get:
      description: List Brocade switch data sources
      operationId: listBrocadeSwitches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:908:993642895
                entity_type: BrocadeSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Brocade switch data sources
      tags:
      - Data Sources
    post:
      description: Add Brocade switch as a data source
      operationId: addBrocadeSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrocadeSwitchDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrocadeSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Brocade switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/brocade-switches/{id}:
    delete:
      description: Delete a Brocade switch data source
      operationId: deleteBrocadeSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Brocade switch data source
      tags:
      - Data Sources
    get:
      description: Show Brocade switch data source details
      operationId: getBrocadeSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrocadeSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Brocade switch data source details
      tags:
      - Data Sources
    put:
      description: Update a Brocade switch data source. Only credentials, nickname
        and notes can be updated.
      operationId: updateBrocadeSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BrocadeSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BrocadeSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Brocade switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/brocade-switches/{id}/enable:
    post:
      operationId: enableBrocadeSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Brocade switch data source
      tags:
      - Data Sources
  /data-sources/brocade-switches/{id}/disable:
    post:
      operationId: disableBrocadeSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Brocade switch data source
      tags:
      - Data Sources
  /data-sources/brocade-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for Brocade switch data source
      operationId: getBrocadeSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Brocade switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Brocade switch data source
      operationId: updateBrocadeSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Brocade switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/juniper-switches:
    get:
      description: List Juniper switch data sources
      operationId: listJuniperSwitches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:909:993642895
                entity_type: JuniperSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Juniper switch data sources
      tags:
      - Data Sources
    post:
      description: Add a Juniper switch Datasource
      operationId: addJuniperSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JuniperSwitchDataSourceRequest'
        description: Add a Cisco switch as datasource
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuniperSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add a Juniper switch as data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/juniper-switches/{id}:
    delete:
      description: Delete a Juniper switch data source
      operationId: deleteJuniperSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Juniper switch data source
      tags:
      - Data Sources
    get:
      description: Show Juniper switch data source details
      operationId: getJuniperSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuniperSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Juniper switch data source details
      tags:
      - Data Sources
    put:
      description: Update a Juniper switch data source
      operationId: updateJuniperSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/JuniperSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/JuniperSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Juniper switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/juniper-switches/{id}/enable:
    post:
      description: Enable a Juniper switch data source
      operationId: enableJuniperSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Juniper switch data source
      tags:
      - Data Sources
  /data-sources/juniper-switches/{id}/disable:
    post:
      description: Disable a Juniper switch data source
      operationId: disableJuniperSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Juniper switch data source
      tags:
      - Data Sources
  /data-sources/juniper-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for Juniper switch data source
      operationId: getJuniperSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Juniper switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for a Juniper switch data source
      operationId: updateJuniperSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for a Juniper switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/arista-switches:
    get:
      description: List Arista switch data sources
      operationId: listAristaSwitches
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:906:993642895
                entity_type: AristaSwitchDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Arista switch data sources
      tags:
      - Data Sources
    post:
      description: Add Arista switch data source
      operationId: addAristaSwitch
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AristaSwitchDataSourceRequest'
        description: Add a Cisco switch as datasource
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AristaSwitchDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an Arista switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/arista-switches/{id}:
    delete:
      description: Delete an Arista switch data source
      operationId: deleteAristaSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an Arista switch data source
      tags:
      - Data Sources
    get:
      description: Show Arista switch data source details
      operationId: getAristaSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AristaSwitchDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Arista switch data source details
      tags:
      - Data Sources
    put:
      description: Update an switch data source
      operationId: updateAristaSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AristaSwitchDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AristaSwitchDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an Arista switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/arista-switches/{id}/enable:
    post:
      description: Enable an Arista switch data source
      operationId: enableAristaSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an Arista switch data source
      tags:
      - Data Sources
  /data-sources/arista-switches/{id}/disable:
    post:
      description: Disable an Arista switch data source
      operationId: disableAristaSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an Arista switch data source
      tags:
      - Data Sources
  /data-sources/arista-switches/{id}/snmp-config:
    get:
      description: Show SNMP config for Arista switch data source
      operationId: getAristaSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Arista switch data source
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Arista switch data source
      operationId: updateAristaSwitchSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Arista switch data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/checkpoint-firewalls:
    get:
      description: List Check Point firewall data sources
      operationId: listCheckpointFirewalls
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:910:993642895
                entity_type: CheckpointFirewallDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Check Point firewall data sources
      tags:
      - Data Sources
    post:
      description: Add Check Point firewall as data source
      operationId: addCheckpointFirewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckpointFirewallDataSourceRequest'
        description: Add a Check Point firewall as data source
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointFirewallDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Check Point firewall
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/checkpoint-firewalls/{id}:
    delete:
      description: Delete a Check Point firewall data source
      operationId: deleteCheckpointFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Check Point firewall data source
      tags:
      - Data Sources
    get:
      description: Show Check Point firewall data source details
      operationId: getCheckpointFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointFirewallDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Check Point firewall data source details
      tags:
      - Data Sources
    put:
      description: Update a Check Point firewall data source
      operationId: updateCheckpointFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CheckpointFirewallDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CheckpointFirewallDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Check Point firewall data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/checkpoint-firewalls/{id}/enable:
    post:
      description: Enable a Check Point firewall data source
      operationId: enableCheckpointFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Check Point firewall data source
      tags:
      - Data Sources
  /data-sources/checkpoint-firewalls/{id}/disable:
    post:
      description: Disable a Check Point firewall data source
      operationId: disableCheckpointFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Check Point firewall data source
      tags:
      - Data Sources
  /data-sources/panorama-firewalls:
    get:
      description: List Palo Alto Networks Panorama firewall data sources
      operationId: listPanoramaFirewalls
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:911:993642895
                entity_type: PanFirewallDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Palo Alto Networks Panorama firewall data sources
      tags:
      - Data Sources
    post:
      description: Add Palo Alto Networks Panorama firewall as data source
      operationId: addPanoramaFirewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PanFirewallDataSourceRequest'
        description: Add a Palo Alto Networks Panorama firewall as datasource
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PanFirewallDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create Palo Alto Networks Panorama firewall data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/panorama-firewalls/{id}:
    delete:
      description: Delete a Palo Alto Networks Panorama firewall data source
      operationId: deletePanoramaFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Palo Alto Networks Panorama firewall data source
      tags:
      - Data Sources
    get:
      description: Show Palo Alto Networks Panorama firewall data source details
      operationId: getPanoramaFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PanFirewallDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Palo Alto Networks Panorama firewall data source details
      tags:
      - Data Sources
    put:
      description: Update a Palo Alto Networks Panorama firewall data source
      operationId: updatePanoramaFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PanFirewallDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PanFirewallDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Palo Alto Networks Panorama firewall data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/panorama-firewalls/{id}/enable:
    post:
      description: Enable a Palo Alto Networks Panorama firewall data source
      operationId: enablePanoramaFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Palo Alto Networks Panorama firewall data source
      tags:
      - Data Sources
  /data-sources/panorama-firewalls/{id}/disable:
    post:
      description: Disable a Palo Alto Networks Panorama firewall data source
      operationId: disablePanoramaFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Palo Alto Networks Panorama firewall data source
      tags:
      - Data Sources
  /data-sources/fortinet-firewalls:
    get:
      description: List Fortinet firewall data sources
      operationId: listFortinetFirewalls
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:910:993642895
                entity_type: FortinetFirewallDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Fortinet firewall data sources
      tags:
      - Data Sources
    post:
      description: Add Fortinet firewall as data source
      operationId: addFortinetFirewall
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FortinetFirewallDataSourceRequest'
        description: Add a Fortinet firewall as data source
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FortinetFirewallDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add Fortinet firewall as data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/fortinet-firewalls/{id}:
    delete:
      description: Delete a Fortinet firewall data source
      operationId: deleteFortinetFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Fortinet firewall data source
      tags:
      - Data Sources
    get:
      description: Show Fortinet firewall data source details
      operationId: getFortinetFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FortinetFirewallDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Fortinet firewall data source details
      tags:
      - Data Sources
    put:
      description: Update a Fortinet firewall data source
      operationId: updateFortinetFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FortinetFirewallDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FortinetFirewallDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Fortinet firewall data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/fortinet-firewalls/{id}/enable:
    post:
      description: Enable a Fortinet firewall data source
      operationId: enableFortinetFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Fortinet firewall data source
      tags:
      - Data Sources
  /data-sources/fortinet-firewalls/{id}/disable:
    post:
      description: Disable a Fortinet firewall data source
      operationId: disableFortinetFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Fortinet firewall data source
      tags:
      - Data Sources
  /data-sources/ucs-managers:
    get:
      description: List Cisco UCS Manager data sources
      operationId: listUcsManagers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:912:993642895
                entity_type: UCSManagerDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Cisco UCS Manager data sources
      tags:
      - Data Sources
    post:
      description: Add a Cisco UCS Manager as data source
      operationId: addUcsManager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UCSManagerDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UCSManagerDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Cisco UCS Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/ucs-managers/{id}:
    delete:
      description: Delete a Cisco UCS Manager data source
      operationId: deleteUcsManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Cisco UCS Manager data source
      tags:
      - Data Sources
    get:
      description: Show Cisco UCS Manager data source details
      operationId: getUcsManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UCSManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Cisco UCS Manager data source details
      tags:
      - Data Sources
    put:
      description: Update a Cisco UCS Manager data source
      operationId: updateUcsManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UCSManagerDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UCSManagerDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Cisco UCS Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/ucs-managers/{id}/enable:
    post:
      description: Enable a Cisco UCS Manager data source
      operationId: enableUcsManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Cisco UCS Manager data source
      tags:
      - Data Sources
  /data-sources/ucs-managers/{id}/disable:
    post:
      description: Disable a Cisco UCS Manager data source
      operationId: disableUcsManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Cisco UCS Manager data source
      tags:
      - Data Sources
  /data-sources/ucs-managers/{id}/snmp-config:
    get:
      description: Show SNMP config for Cisco UCS Manager
      operationId: getUcsSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Cisco UCS Manager
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Cisco UCS Manager
      operationId: updateUcsSnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Cisco UCS Manager
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-aci:
    get:
      description: List Cisco ACI data sources
      operationId: listCiscoACI
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:912:993642895
                entity_type: CiscoACIDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Cisco ACI data sources
      tags:
      - Data Sources
    post:
      description: Add a Cisco ACI as data source
      operationId: addCiscoACI
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiscoACIDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoACIDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a Cisco ACI data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-aci/{id}:
    delete:
      description: Delete a Cisco ACI data source
      operationId: deleteCiscoACI
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a Cisco ACI data source
      tags:
      - Data Sources
    get:
      description: Show Cisco ACI data source details
      operationId: getCiscoACI
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoACIDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Cisco ACI data source details
      tags:
      - Data Sources
    put:
      description: Update a Cisco ACI data source
      operationId: updateCiscoACIManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CiscoACIDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CiscoACIDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a Cisco ACI data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/cisco-aci/{id}/enable:
    post:
      description: Enable a Cisco ACI data source
      operationId: enableCiscoACI
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a Cisco ACI data source
      tags:
      - Data Sources
  /data-sources/cisco-aci/{id}/disable:
    post:
      description: Disable a Cisco ACI data source
      operationId: disableCiscoACI
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a Cisco ACI data source
      tags:
      - Data Sources
  /data-sources/cisco-aci/{id}/snmp-config:
    get:
      description: Show SNMP config for Cisco ACI
      operationId: getCiscoACISnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show SNMP config for Cisco ACI
      tags:
      - Data Sources
    put:
      description: Update SNMP config for Cisco ACI
      operationId: updateCiscoACISnmpConfig
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SNMPConfig'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SNMPConfig'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update SNMP config for Cisco ACI
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hpvc-managers:
    get:
      description: List HPVC manager data sources
      operationId: listHpvcManagers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:914:993642895
                entity_type: HPVCManagerDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List HPVC manager data sources
      tags:
      - Data Sources
    post:
      description: Add HPVC manager data source
      operationId: addHpvcManager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HPVCManagerDataSourceRequest'
        description: Add HPVC manager data source
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPVCManagerDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a HPVC manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hpvc-managers/{id}:
    delete:
      description: Delete a HPVC manager data source
      operationId: deleteHpvcManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a HPVC manager data source
      tags:
      - Data Sources
    get:
      description: Show HPVC data source details
      operationId: getHpvcManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPVCManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show HPVC data source details
      tags:
      - Data Sources
    put:
      description: Update a HPVC manager data source
      operationId: updateHpvcManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HPVCManagerDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPVCManagerDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a HPVC manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hpvc-managers/{id}/enable:
    post:
      description: Enable a HPVC manager data source
      operationId: enableHpvcManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a HPVC manager data source
      tags:
      - Data Sources
  /data-sources/hpvc-managers/{id}/disable:
    post:
      description: Disable a HPVC manager data source
      operationId: disableHpvcManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a HPVC manager data source
      tags:
      - Data Sources
  /data-sources/hpov-managers:
    get:
      description: List HP OneView manager data sources
      operationId: listHpovManagers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:915:993642895
                entity_type: HPOneViewManagerDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List HP OneView manager data sources
      tags:
      - Data Sources
    post:
      description: Add a HP OneView manager data source
      operationId: addHpovManager
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HPOneViewManagerDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPOneViewManagerDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a HP OneView manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hpov-managers/{id}:
    delete:
      description: Delete a HP OneView data source
      operationId: deleteHpovManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a HP OneView data source
      tags:
      - Data Sources
    get:
      description: Show HP OneView data source details
      operationId: getHpovManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPOneViewManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show HP OneView data source details
      tags:
      - Data Sources
    put:
      description: Update a HP OneView data source
      operationId: updateHpovManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HPOneViewManagerDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HPOneViewManagerDataSource'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a HP OneView data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hpov-managers/{id}/enable:
    post:
      description: Enable a HP OneView data source
      operationId: enableHpovManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a HP OneView data source
      tags:
      - Data Sources
  /data-sources/hpov-managers/{id}/disable:
    post:
      description: Disable a HP OneView data source
      operationId: disableHpovManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a HP OneView data source
      tags:
      - Data Sources
  /data-sources/nsxt-managers:
    get:
      description: List NSX-T Manager data sources
      operationId: listNsxtManagers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:903:993642895
                entity_type: NSXTManagerDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List NSX-T Manager data sources
      tags:
      - Data Sources
    post:
      description: Add an NSX-T Manager data source
      operationId: addNsxtManagerDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NSXTManagerDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXTManagerDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an NSX-T Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/nsxt-managers/{id}:
    delete:
      description: Delete an NSX-T Manager data source
      operationId: deleteNsxtManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an NSX-T Manager data source
      tags:
      - Data Sources
    get:
      description: Show NSX-T Manager data source details
      operationId: getNsxtManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXTManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show NSX-T Manager data source details
      tags:
      - Data Sources
    put:
      description: Update an NSX-T Manager data source
      operationId: updateNsxtManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NSXTManagerDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXTManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an NSX-T Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/nsxt-managers/{id}/enable:
    post:
      description: Enable an NSX-T Manager data source
      operationId: enableNsxtManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an NSX-T Manager data source
      tags:
      - Data Sources
  /data-sources/nsxt-managers/{id}/disable:
    post:
      description: Disable an NSX-T Manager data source
      operationId: disableNsxtManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an NSX-T Manager data source
      tags:
      - Data Sources
  /data-sources/nsxalb:
    get:
      description: List NSX Advanced Load Balancer data sources
      operationId: listNSXALB
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:955:993642567
                entity_type: NSXALBDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List NSX Advanced Load Balancer data sources
      tags:
      - Data Sources
    post:
      description: Add an NSX Advanced Load Balancer data source
      operationId: addNSXALBDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NSXALBDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXALBDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an NSX Advanced Load Balancer data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/nsxalb/{id}:
    delete:
      description: Delete an NSX Advanced Load Balancer data source
      operationId: deleteNSXALB
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an NSX Advanced Load Balancer data source
      tags:
      - Data Sources
    get:
      description: Show NSX Advanced Load Balancer data source details
      operationId: getNSXALB
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXALBDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show NSX Advanced Load Balancer data source details
      tags:
      - Data Sources
    put:
      description: Update an NSX Advanced Load Balancer data source
      operationId: updateNSXALB
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NSXALBDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXALBDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an NSX Advanced Load Balancer data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/nsxalb/{id}/enable:
    post:
      description: Enable an NSX Advanced Load Balancer data source
      operationId: enableNSXALB
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an NSX Advanced Load Balancer data source
      tags:
      - Data Sources
  /data-sources/nsxalb/{id}/disable:
    post:
      description: Disable an NSX Advanced Load Balancer data source
      operationId: disableNSXALB
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an NSX Advanced Load Balancer data source
      tags:
      - Data Sources
  /data-sources/pks:
    get:
      description: List VMware Tanzu Kubernetes Grid Integrated data sources
      operationId: listPKS
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:903:993642895
                entity_type: PKSDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List VMware Tanzu Kubernetes Grid Integrated data sources
      tags:
      - Data Sources
    post:
      description: Add an VMware Tanzu Kubernetes Grid Integrated data source
      operationId: addPKSDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PKSDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PKSDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an VMware Tanzu Kubernetes Grid Integrated data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/pks/{id}:
    delete:
      description: Delete an VMware Tanzu Kubernetes Grid Integrated data source
      operationId: deletePKS
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an VMware Tanzu Kubernetes Grid Integrated data source
      tags:
      - Data Sources
    get:
      description: Show VMware Tanzu Kubernetes Grid Integrated data source details
      operationId: getPKS
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PKSDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show VMware Tanzu Kubernetes Grid Integrated data source details
      tags:
      - Data Sources
    put:
      description: Update an VMware Tanzu Kubernetes Grid Integrated data source
      operationId: updatePKS
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PKSDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PKSDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an VMware Tanzu Kubernetes Grid Integrated data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/pks/{id}/enable:
    post:
      description: Enable an VMware Tanzu Kubernetes Grid Integrated data source
      operationId: enablePKS
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an VMware Tanzu Kubernetes Grid Integrated data source
      tags:
      - Data Sources
  /data-sources/pks/{id}/disable:
    post:
      description: Disable an VMware Tanzu Kubernetes Grid Integrated data source
      operationId: disablePKS
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an VMware Tanzu Kubernetes Grid Integrated data source
      tags:
      - Data Sources
  /data-sources/nsxv-managers:
    get:
      description: List NSX-v Manager data sources
      operationId: listNsxvManagers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:903:993642895
                entity_type: NSXVManagerDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List NSX-v Manager data sources
      tags:
      - Data Sources
    post:
      description: Add an NSX-v Manager data source
      operationId: addNsxvManagerDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NSXVManagerDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXVManagerDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an NSX-v Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/nsxv-managers/{id}:
    delete:
      description: Delete an NSX-v Manager data source
      operationId: deleteNsxvManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an NSX-v Manager data source
      tags:
      - Data Sources
    get:
      description: Show NSX-v Manager data source details
      operationId: getNsxvManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXVManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show NSX-v Manager data source details
      tags:
      - Data Sources
    put:
      description: Update an NSX-v Manager data source
      operationId: updateNsxvManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NSXVManagerDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXVManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an NSX-v Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/nsxv-managers/{id}/enable:
    post:
      description: Enable an NSX-v Manager data source
      operationId: enableNsxvManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an NSX-v Manager data source
      tags:
      - Data Sources
  /data-sources/nsxv-managers/{id}/disable:
    post:
      description: Disable an NSX-v Manager data source
      operationId: disableNsxvManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an NSX-v Manager data source
      tags:
      - Data Sources
  /data-sources/nsxv-managers/{id}/controller-cluster:
    get:
      description: Show NSX-v Controller Cluster details
      operationId: getNsxvControllerCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXControllerDataCollection'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show NSX-v Controller Cluster details
      tags:
      - Data Sources
    put:
      description: Update NSX-v Controller Cluster details
      operationId: updateNsxvControllerCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NSXControllerDataCollection'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NSXControllerDataCollection'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update NSX-v Controller Cluster details
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/kubernetes-clusters:
    get:
      description: List Kubernetes cluster data sources
      operationId: listKubernetesClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:903:993642895
                entity_type: KubernetesDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Kubernetes cluster data sources
      tags:
      - Data Sources
    post:
      description: Add an Kubernetes cluster data source
      operationId: addKubernetesDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an Kubernetes cluster data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/kubernetes-clusters/{id}:
    delete:
      description: Delete an Kubernetes cluster data source
      operationId: deleteKubernetesCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an Kubernetes cluster data source
      tags:
      - Data Sources
    get:
      description: Show Kubernetes cluster data source details
      operationId: getKubernetesCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Kubernetes cluster data source details
      tags:
      - Data Sources
    put:
      description: Update an Kubernetes cluster data source
      operationId: updateKubernetesCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an Kubernetes cluster data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/kubernetes-clusters/{id}/enable:
    post:
      description: Enable an Kubernetes cluster data source
      operationId: enableKubernetesCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an Kubernetes cluster data source
      tags:
      - Data Sources
  /data-sources/kubernetes-clusters/{id}/disable:
    post:
      description: Disable an Kubernetes cluster data source
      operationId: disableKubernetesCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an Kubernetes cluster data source
      tags:
      - Data Sources
  /data-sources/openshift-clusters:
    get:
      description: List OpenShift data sources
      operationId: listOpenshiftClusters
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:903:993642895
                entity_type: KubernetesDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List OpenShift data sources
      tags:
      - Data Sources
    post:
      description: Add an OpenShift data source
      operationId: addOpenshiftDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an OpenShift data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/openshift-clusters/{id}:
    delete:
      description: Delete an OpenShift data source
      operationId: deleteOpenshiftCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an OpenShift data source
      tags:
      - Data Sources
    get:
      description: Show OpenShift data source details
      operationId: getOpenshiftCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show OpenShift cluster data source details
      tags:
      - Data Sources
    put:
      description: Update an OpenShift data source
      operationId: updateOpenshiftCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/KubernetesDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an OpenShift data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/openshift-clusters/{id}/enable:
    post:
      description: Enable an OpenShift data source
      operationId: enableOpenshiftCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an OpenShift data source
      tags:
      - Data Sources
  /data-sources/openshift-clusters/{id}/disable:
    post:
      description: Disable an OpenShift data source
      operationId: disableOpenshiftCluster
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an OpenShift data source
      tags:
      - Data Sources
  /data-sources/servicenow-instances:
    get:
      description: List ServiceNow instance data sources
      operationId: listServiceNowInstances
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:903:993642895
                entity_type: ServiceNowDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List ServiceNow instance data sources
      tags:
      - Data Sources
    post:
      description: Add an ServiceNow instance data source
      operationId: addServiceNowDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceNowDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an ServiceNow instance data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/servicenow-instances/{id}:
    delete:
      description: Delete an ServiceNow instance data source
      operationId: deleteServiceNowInstance
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an ServiceNow instance data source
      tags:
      - Data Sources
    get:
      description: Show ServiceNow instance data source details
      operationId: getServiceNowInstance
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show ServiceNow instance data source details
      tags:
      - Data Sources
    put:
      description: Update an ServiceNow instance data source
      operationId: updateServiceNowInstance
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ServiceNowDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ServiceNowDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an ServiceNow instance data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/servicenow-instances/{id}/enable:
    post:
      description: Enable an ServiceNow instance data source
      operationId: enableServiceNowInstance
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an ServiceNow instance data source
      tags:
      - Data Sources
  /data-sources/servicenow-instances/{id}/disable:
    post:
      description: Disable an ServiceNow instance data source
      operationId: disableServiceNowInstance
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an ServiceNow instance data source
      tags:
      - Data Sources
  /data-sources/infoblox-managers:
    get:
      description: List Infoblox DNS Manager data sources
      operationId: listInfobloxManagers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:903:993642895
                entity_type: InfobloxManagerDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Infoblox DNS Manager data sources
      tags:
      - Data Sources
    post:
      description: Add an Infoblox DNS Manager data source
      operationId: addInfobloxManagerDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfobloxManagerDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfobloxManagerDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an Infoblox DNS Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/infoblox-managers/{id}:
    delete:
      description: Delete an Infoblox DNS Manager data source
      operationId: deleteInfobloxManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an Infoblox DNS Manager data source
      tags:
      - Data Sources
    get:
      description: Show Infoblox DNS Manager data source details
      operationId: getInfobloxManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfobloxManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Infoblox DNS Manager data source details
      tags:
      - Data Sources
    put:
      description: Update an Infoblox DNS Manager data source
      operationId: updateInfobloxManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InfobloxManagerDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/InfobloxManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an Infoblox DNS Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/infoblox-managers/{id}/enable:
    post:
      description: Enable an Infoblox DNS Manager data source
      operationId: enableInfobloxManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an Infoblox DNS Manager data source
      tags:
      - Data Sources
  /data-sources/infoblox-managers/{id}/disable:
    post:
      description: Disable an Infoblox DNS Manager data source
      operationId: disableInfobloxManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an Infoblox DNS Manager data source
      tags:
      - Data Sources
  /data-sources/vmc-nsxmanagers:
    get:
      description: List VMC on AWS NSX Manager data sources
      operationId: listPolicyManagers
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:928:993642895
                entity_type: PolicyManagerDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List VMC on AWS NSX Manager data sources
      tags:
      - Data Sources
    post:
      description: Add a VMC on AWS NSX Manager data source
      operationId: addPolicyManagerDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyManagerDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyManagerDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a VMC on AWS NSX Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/vmc-nsxmanagers/{id}:
    delete:
      description: Delete a VMC on AWS NSX Manager data source
      operationId: deletePolicyManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a VMC on AWS NSX Manager data source
      tags:
      - Data Sources
    get:
      description: Show VMC on AWS NSX Manager data source details
      operationId: getPolicyManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show VMC on AWS NSX Manager data source details
      tags:
      - Data Sources
    put:
      description: Update a VMC on AWS NSX Manager data source
      operationId: updatePolicyManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PolicyManagerDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PolicyManagerDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a VMC on AWS NSX Manager data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/vmc-nsxmanagers/{id}/enable:
    post:
      description: Enable a VMC on AWS NSX Manager data source
      operationId: enablePolicyManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a VMC on AWS NSX Manager data source
      tags:
      - Data Sources
  /data-sources/vmc-nsxmanagers/{id}/disable:
    post:
      description: Disable a VMC on AWS NSX Manager data source
      operationId: disablePolicyManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a VMC on AWS NSX Manager data source
      tags:
      - Data Sources
  /data-sources/azure-subscriptions:
    get:
      description: List Azure Cloud data sources
      operationId: listAzureSubscriptions
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:966:993642895
                entity_type: AzureDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Azure Cloud data sources
      tags:
      - Data Sources
    post:
      description: Add an Azure Cloud data source
      operationId: addAzureDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an Azure Cloud data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/azure-subscriptions/{id}:
    delete:
      description: Delete an Azure Cloud data source
      operationId: deleteAzureSubscription
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an Azure Cloud data source
      tags:
      - Data Sources
    get:
      description: Show Azure Cloud data source details
      operationId: getAzureSubscriptions
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Azure Cloud data source details
      tags:
      - Data Sources
    put:
      description: Update an Azure Cloud data source
      operationId: updateAzureSubscription
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AzureDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an Azure Cloud data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/azure-subscriptions/{id}/enable:
    post:
      description: Enable an Azure Cloud data source
      operationId: enableAzureSubscription
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an Azure Cloud data source
      tags:
      - Data Sources
  /data-sources/azure-subscriptions/{id}/disable:
    post:
      description: Disable an Azure Cloud data source
      operationId: disableAzureSubscription
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an Azure Cloud data source
      tags:
      - Data Sources
  /data-sources/hcx-connectors:
    get:
      description: List VMware HCX data sources
      operationId: listHcxs
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:1310:993642895
                entity_type: HcxDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List VMware HCX data sources
      tags:
      - Data Sources
    post:
      description: Add an VMware HCX data source
      operationId: addHcxDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HcxDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HcxDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an VMware HCX data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hcx-connectors/{id}:
    delete:
      description: Delete an VMware HCX data source
      operationId: deleteHcx
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an VMware HCX data source
      tags:
      - Data Sources
    get:
      description: Show VMware HCX data source details
      operationId: getHcx
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HcxDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show VMware HCX data source details
      tags:
      - Data Sources
    put:
      description: Update an VMware HCX data source
      operationId: updateHcx
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/HcxDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/HcxDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an VMware HCX data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/hcx-connectors/{id}/enable:
    post:
      description: Enable an VMware HCX data source
      operationId: enableHcx
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an VMware HCX data source
      tags:
      - Data Sources
  /data-sources/hcx-connectors/{id}/disable:
    post:
      description: Disable an VMware HCX data source
      operationId: disableHcx
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an VMware HCX data source
      tags:
      - Data Sources
  /data-sources/velocloud:
    get:
      description: List VMware SD-WAN by VeloCloud data sources
      operationId: listVeloCloud
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 18230:962:993642895
                entity_type: VeloCloudDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List VMware SD-WAN by VeloCloud data sources
      tags:
      - Data Sources
    post:
      description: Add a VMware SD-WAN by VeloCloud data source
      operationId: addVeloCloudDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VeloCloudDataSourceRequest'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VeloCloudDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create a VMware SD-WAN by VeloCloud data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/velocloud/{id}:
    delete:
      description: Delete a VMware SD-WAN by VeloCloud data source
      operationId: deleteVeloCloud
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete a VMware SD-WAN by VeloCloud data source
      tags:
      - Data Sources
    get:
      description: Show VMware SD-WAN by VeloCloud data source details
      operationId: getVeloCloud
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VeloCloudDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show VMware SD-WAN by VeloCloud data source details
      tags:
      - Data Sources
    put:
      description: Update a VMware SD-WAN by VeloCloud data source
      operationId: updateVeloCloud
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VeloCloudDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VeloCloudDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update a VMware SD-WAN by VeloCloud data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/velocloud/{id}/enable:
    post:
      description: Enable a VMware SD-WAN by VeloCloud data source
      operationId: enableVeloCloud
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable a VMware SD-WAN by VeloCloud data source
      tags:
      - Data Sources
  /data-sources/velocloud/{id}/disable:
    post:
      description: Disable a VMware SD-WAN by VeloCloud data source
      operationId: disableVeloCloud
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable a VMware SD-WAN by VeloCloud data source
      tags:
      - Data Sources
  /data-sources/aws-accounts:
    get:
      description: List AWS data sources
      operationId: listAWSDataSources
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataSourceListResponse'
            results:
              example:
              - entity_id: 10000:916:993642895
                entity_type: AWSDataSource
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List AWS data sources
      tags:
      - Data Sources
    post:
      description: Create an AWS data source
      operationId: addAWSDatasource
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSDataSource'
        required: false
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSDataSource'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "409":
          content: {}
          description: Already Exists
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an AWS data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/aws-accounts/{id}:
    delete:
      description: Delete an AWS data source
      operationId: deleteAWSDataSource
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an AWS data source
      tags:
      - Data Sources
    get:
      description: Show AWS data source details
      operationId: getAWSDataSource
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show AWS data source details
      tags:
      - Data Sources
    put:
      description: Update an AWS data source
      operationId: updateAWSDataSource
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AWSDataSource'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSDataSource'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an AWS data source
      tags:
      - Data Sources
      x-codegen-request-body-name: body
  /data-sources/aws-accounts/{id}/enable:
    post:
      description: Enable an AWS data source
      operationId: enableAWSDataSource
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an AWS data source
      tags:
      - Data Sources
  /data-sources/aws-accounts/{id}/disable:
    post:
      description: Disable an AWS data source
      operationId: disableAWSDataSource
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an AWS data source
      tags:
      - Data Sources
  /entities/problems:
    get:
      description: List problem events.
      operationId: listProblemEvents
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      - description: Type of event, e.g UserDefinedProblemEvent
        in: query
        name: event_type
        schema:
          type: string
      - description: Event tags
        explode: true
        in: query
        name: event_tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Status of event open or closed
        in: query
        name: event_status
        schema:
          default: all
          enum:
          - open
          - closed
          - all
          type: string
      - description: Events that were created or updated or closed between this time
          and update_time_to, in seconds
        in: query
        name: update_time_from
        schema:
          type: number
      - description: Events that were created or updated or closed between update_time_from
          and this time, in seconds
        in: query
        name: update_time_to
        schema:
          type: number
      - description: Event severity filter
        explode: true
        in: query
        name: event_severity
        schema:
          items:
            enum:
            - Critical
            - Warning
            - Moderate
            - Info
            type: string
          type: array
        style: form
      - description: The entity ID of the manager of entity on which event is raised
        explode: true
        in: query
        name: managers
        schema:
          items:
            type: string
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:35230:1233393386
                entity_type: ProblemEvent
                time: 1509283820
              - entity_id: 18230:35228:1832167524
                entity_type: ProblemEvent
                time: 1509285022
            cursor:
              example: MTA=
            total_count:
              example: 15
            start_time:
              example: 1509231996
            end_time:
              example: 1509318396
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List problems
      tags:
      - Entities
  /entities/problems/fetch:
    post:
      description: Bulk fetch of problems. Max batch size is 1000.
      operationId: bulkFetchProblemEvents
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkProblemFetchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of problem events
      tags:
      - Entities
      x-codegen-request-body-name: body
  /entities/problems/{id}:
    get:
      description: Show problem event details.
      operationId: getProblemEvent
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProblemEvent'
            entity_id:
              example: 18230:36050:1583312594
            name:
              example: NSXFirewallDefaultAllowAllRulesEvent
            entity_type:
              example: ProblemEvent
            anchor_entities:
              example:
              - entity_id: 18230:39:660899929
                entity_type: NSXDistributedFirewall
            related_entities:
              example:
              - entity_id: 18230:7:824494449
                entity_type: NSXVManager
              - entity_id: 18230:87:367271162
                entity_type: NSXFirewallRule
              - entity_id: 18230:39:660899929
                entity_type: NSXDistributedFirewall
            message:
              example: The distributed firewall is configured to allow all traffic
                by default, which increases the potential attack surface of the network
            event_tags:
              example:
              - Best Practices
              - Firewall
            admin_state:
              example: ENABLED
            archived:
              example: false
            event_time_epoch_ms:
              example: 1509283819834
            severity:
              example: INFO
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show problem details
      tags:
      - Entities
  /entities/vms:
    get:
      description: List vms
      operationId: listVms
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:1:1158969162
                entity_type: VirtualMachine
                time: 1509283414
              - entity_id: 18230:1:875338851
                entity_type: VirtualMachine
                time: 1509283476
            cursor:
              example: MTA=
            total_count:
              example: 39
            start_time:
              example: 1509335034
            end_time:
              example: 1509335034
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List vms
      tags:
      - Entities
  /entities/vms/{id}:
    get:
      description: Show VM details
      operationId: getVm
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseVirtualMachine'
            entity_id:
              example: 18230:1:1158969162
            name:
              example: NSX_Controller_9e80ec74-57ce-4671-8fd7-b5884a997535
            entity_type:
              example: VirtualMachine
            ip_addresses:
              example:
              - ip_address: 10.197.17.74
                netmask: 255.255.255.0
                network_address: 10.197.17.0/24
            default_gateway:
              example: ""
            vnics:
              example:
              - entity_id: 18230:18:863301374
                entity_type: Vnic
            security_groups:
              example: []
            source_firewall_rules:
              example: []
            destination_firewall_rules:
              example: []
            ip_sets:
              example: []
            cluster:
              example:
                entity_id: 18230:66:1293137396
                entity_type: Cluster
            resource_pool:
              example:
                entity_id: 18230:79:313158344
                entity_type: ResourcePool
            security_tags:
              example: []
            layer2_networks:
              example: []
            host:
              example:
                entity_id: 18230:4:652218965
                entity_type: Host
            vlans:
              example: []
            vendor_id:
              example: vm-181
            vcenter_manager:
              example:
                entity_id: 18230:8:2048038620
                entity_type: VCenterManager
            folders:
              example:
              - entity_id: 18230:81:520432789
                entity_type: Folder
            datastores:
              example:
              - entity_id: 18230:80:682061552
                entity_type: Datastore
            datacenter:
              example:
                entity_id: 18230:105:1663983066
                entity_type: VCDatacenter
            nsx_manager: {}
            source_inversion_rules:
              example: []
            destination_inversion_rules:
              example: []
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show VM details
      tags:
      - Entities
  /entities/fetch:
    post:
      description: Bulk fetch of entity details using a list of entity IDs. Max batch
        size is 1000.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BulkFetchResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of entities
      tags:
      - Entities
      x-codegen-request-body-name: body
  /entities/vnics:
    get:
      description: List vnics attached to virtual machines
      operationId: listVnics
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:18:1158969162
                entity_type: Vnic
                time: 1509283414
              - entity_id: 18230:18:875338851
                entity_type: Vnic
                time: 1509283476
            cursor:
              example: MTA=
            total_count:
              example: 39
            start_time:
              example: 1509335034
            end_time:
              example: 1509335034
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List vnics
      tags:
      - Entities
  /entities/vnics/{id}:
    get:
      description: Show vNIC details
      operationId: getVnic
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseVnic'
            entity_id:
              example: 18230:18:1285494944
            name:
              example: '[USA  Edge-0]-[Network adapter 8]'
            entity_type:
              example: Vnic
            ip_addresses:
              example: []
            layer2_network: {}
            vlan:
              example:
                begin: 0
                end: 0
            vm:
              example:
                entity_id: 18230:1:1158972882
                entity_type: VirtualMachine
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show vNIC details
      tags:
      - Entities
  /entities/hosts:
    get:
      description: List vSphere hosts
      operationId: listHosts
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:4:652218965
                entity_type: Host
                time: 1509283414
              - entity_id: 18230:4:1256074202
                entity_type: Host
                time: 1509283414
            cursor: {}
            total_count:
              example: 6
            start_time:
              example: 1509336095
            end_time:
              example: 1509336095
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List hosts
      tags:
      - Entities
  /entities/hosts/{id}:
    get:
      description: Show vSphere host details
      operationId: getHost
      parameters:
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Host'
            entity_id:
              example: 18230:4:1256074202
            name:
              example: 10.197.17.228
            entity_type:
              example: Host
            vmknics:
              example:
              - entity_id: 18230:17:1776349286
                entity_type: Vmknic
            cluster:
              example:
                entity_id: 18230:66:1293137396
                entity_type: Cluster
            vcenter_manager:
              example:
                entity_id: 18230:8:2048038620
                entity_type: VCenterManager
            vm_count:
              example: 0
            datastores:
              example:
              - entity_id: 18230:80:330903629
                entity_type: Datastore
            service_tag:
              example: VMware-42 14 cd 9f f0 c8 0f 77-6a 53 71 8c 6d d6 e3 ff
            vendor_id:
              example: host-202
            nsx_manager: {}
            maintenance_mode:
              example: NOTINMAINTENANCEMODE
            connection_state:
              example: CONNECTED
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show host details
      tags:
      - Entities
  /entities/clusters:
    get:
      description: List vSphere clusters
      operationId: listClusters
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:66:1293137396
                entity_type: Cluster
                time: 1509282803
              - entity_id: 18230:66:670818039
                entity_type: Cluster
                time: 1509284911
            cursor: {}
            total_count:
              example: 4
            start_time:
              example: 1509337200
            end_time:
              example: 1509337200
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List clusters
      tags:
      - Entities
  /entities/clusters/{id}:
    get:
      description: Show vSphere cluster details
      operationId: getCluster
      parameters:
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cluster'
            entity_id:
              example: 18230:66:1293137396
            name:
              example: Cluster1
            entity_type:
              example: Cluster
            total_cpus:
              example: 88400
            total_memory:
              example: 68717867008
            num_cpu_cores:
              example: 34
            vendor_id:
              example: domain-c7
            num_hosts:
              example: 3
            num_datastores:
              example: 3
            nsx_manager: {}
            vcenter_manager:
              example:
                entity_id: 18230:8:2048038620
                entity_type: VCenterManager
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show cluster details
      tags:
      - Entities
  /entities/vc-datacenters:
    get:
      description: List vCenter datacenters
      operationId: listDatacenters
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:105:192022336
                entity_type: VCDatacenter
                time: 1509282871
              - entity_id: 18230:105:1663983066
                entity_type: VCDatacenter
                time: 1509282803
            cursor: {}
            total_count:
              example: 2
            start_time:
              example: 1509337402
            end_time:
              example: 1509337402
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List vCenter datacenters
      tags:
      - Entities
  /entities/vc-datacenters/{id}:
    get:
      description: Show vCenter datacenter details
      operationId: getDatacenter
      parameters:
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCDatacenter'
            entity_id:
              example: 18230:105:192022336
            name:
              example: DataCenter
            entity_type:
              example: VCDatacenter
            vendor_id:
              example: datacenter-2
            vcenter_manager:
              example:
                entity_id: 18230:8:824494514
                entity_type: VCenterManager
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show vCenter datacenter details
      tags:
      - Entities
  /entities/folders:
    get:
      description: List vCenter folders
      operationId: listFolders
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:81:591055243
                entity_type: Folder
                time: 1509282871
              - entity_id: 18230:81:520432789
                entity_type: Folder
                time: 1509282804
            cursor:
              example: MTA=
            total_count:
              example: 14
            start_time:
              example: 1509337459
            end_time:
              example: 1509337459
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List folders
      tags:
      - Entities
  /entities/folders/{id}:
    get:
      description: Show vCenter folder details
      operationId: getFolder
      parameters:
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Folder'
            entity_id:
              example: 18230:81:591055243
            name:
              example: datastore
            entity_type:
              example: Folder
            vendor_id:
              example: group-s5
            vcenter_manager:
              example:
                entity_id: 18230:8:824494514
                entity_type: VCenterManager
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show folder details
      tags:
      - Entities
  /entities/datastores:
    get:
      description: List vSphere datastores
      operationId: listDatastores
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:80:1756900216
                entity_type: Datastore
                time: 1509282874
              - entity_id: 18230:80:682061552
                entity_type: Datastore
                time: 1509282819
            cursor: {}
            total_count:
              example: 6
            start_time:
              example: 1509337523
            end_time:
              example: 1509337523
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List datastores
      tags:
      - Entities
  /entities/datastores/{id}:
    get:
      description: Show vSphere datastore details
      operationId: getDatastore
      parameters:
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Datastore'
            entity_id:
              example: 18230:80:1756898449
            name:
              example: datastore1 (2)
            entity_type:
              example: Datastore
            vendor_id:
              example: datastore-33
            vcenter_manager:
              example:
                entity_id: 18230:8:824494514
                entity_type: VCenterManager
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show datastore details
      tags:
      - Entities
  /entities/vmknics:
    get:
      description: List ESXi host vmknics
      operationId: listVmknics
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:17:1928372608
                entity_type: Vmknic
                time: 1509283321
              - entity_id: 18230:17:695819318
                entity_type: Vmknic
                time: 1509282819
            cursor:
              example: MTA=
            total_count:
              example: 11
            start_time:
              example: 1509337586
            end_time:
              example: 1509337586
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List vmknics
      tags:
      - Entities
  /entities/vmknics/{id}:
    get:
      description: Show ESXi host vmknic details
      operationId: getVmknic
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vmknic'
            entity_id:
              example: 18230:17:695819318
            name:
              example: '[10.197.17.64]-[vmk0]'
            entity_type:
              example: Vmknic
            ip_addresses:
              example:
              - ip_address: 10.197.17.64
                netmask: 255.255.252.0
                network_address: 10.197.16.0/22
            vlan:
              example:
                begin: 0
                end: 0
            host:
              example:
                entity_id: 18230:4:652218965
                entity_type: Host
            layer2_network: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show vmknic details
      tags:
      - Entities
  /entities/layer2-networks:
    get:
      description: List layer2 networks (VLANs, VXLANs)
      operationId: listLayer2Networks
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:11:2095237606
                entity_type: VxlanLayer2Network
                time: 1509284850
              - entity_id: 18230:11:2095237668
                entity_type: VxlanLayer2Network
                time: 1509284850
            cursor:
              example: MTA=
            total_count:
              example: 38
            start_time:
              example: 1509339711
            end_time:
              example: 1509339711
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List layer2 networks
      tags:
      - Entities
  /entities/layer2-networks/{id}:
    get:
      description: Show layer2 network details
      operationId: getLayer2Network
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseL2Network'
            entity_id:
              example: 18230:11:2095237606
            name:
              example: Deccan-uplink-vxlan
            entity_type:
              example: VxlanLayer2Network
            network_addresses:
              example:
              - 192.168.13.0/24
            gateways:
              example: []
            segment_id:
              example: 5004
            vteps:
              example:
              - entity_id: 18230:17:695819287
                entity_type: Vmknic
              - entity_id: 18230:17:431576805
                entity_type: Vmknic
            scope:
              example: GLOBAL
            nsx_managers:
              example: []
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show layer2 network details
      tags:
      - Entities
  /entities/ip-sets:
    get:
      description: List NSX IP Sets
      operationId: listIPSets
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:84:347816011
                entity_type: NSXIPSet
                time: 1509283320
            cursor: {}
            total_count:
              example: 3
            start_time:
              example: 1509339942
            end_time:
              example: 1509339942
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List NSX IP Sets
      tags:
      - Entities
  /entities/ip-sets/{id}:
    get:
      description: Show NSX IP Set details
      operationId: getIPSet
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseIPSet'
            entity_id:
              example: 18230:84:347816011
            name:
              example: IPSET_ford
            entity_type:
              example: NSXIPSet
            ip_addresses:
              example: []
            ip_ranges:
              example:
              - start_ip: 192.168.78.21
                end_ip: 192.168.78.30
            ip_numeric_ranges:
              example:
              - start: 3232255509
                end: 3232255518
            parent_security_groups:
              example: []
            direct_source_rules:
              example: []
            direct_destination_rules:
              example: []
            indirect_source_rules:
              example: []
            indirect_destination_rules:
              example: []
            vendor_id:
              example: ipset-3
            vendor:
              example: ""
            nsx_managers:
              example:
              - entity_id: 18230:7:824494449
                entity_type: NSXVManager
            scope:
              example: GLOBAL
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show NSX IP Set details
      tags:
      - Entities
  /entities/flows:
    get:
      description: List network traffic flows
      operationId: getFlows
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 10000:515:1491521924
                entity_type: Flow
                time: 1509283320
            cursor: {}
            total_count:
              example: 3
            start_time:
              example: 1509339942
            end_time:
              example: 1509339942
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List flows
      tags:
      - Entities
  /entities/flows/{id}:
    get:
      description: Show network traffic flow details
      operationId: getFlow
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Flow'
            entity_id:
              example: 10000:515:1491521924
            name:
              example: 10.197.53.40 -> 10.197.53.38 [port:500]
            entity_type:
              example: Flow
            source_ip:
              example:
                ip_address: 10.197.53.40
                netmask: 255.255.255.255
                network_address: 10.197.53.40
            destination_ip:
              example:
                ip_address: 10.197.53.38
                netmask: 255.255.255.255
                network_address: 10.197.53.38
            port:
              example:
                start: 500
                end: 500
                display: "500"
                iana_name: isakmp
                iana_port_display: 500 [isakmp]
            source_folders:
              example: []
            destination_folders:
              example: []
            protocol:
              example: UDP
            source_ip_sets:
              example: []
            destination_ip_sets:
              example: []
            source_security_groups:
              example: []
            destination_security_groups:
              example: []
            traffic_type:
              example: EAST_WEST_TRAFFIC
            source_security_tags:
              example: []
            destination_security_tags:
              example: []
            source_vm_tags:
              example: []
            destination_vm_tags:
              example: []
            within_host:
              example: false
            firewall_action:
              example: ALLOW
            firewall_rule_id:
              example: []
            flow_tag:
              example:
              - EAST_WEST_TRAFFIC
              - PHY_PHY_TRAFFIC
              - SRC_IP_PHYSICAL
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show flow details
      tags:
      - Entities
  /entities/security-groups:
    get:
      description: List security groups (NSX, AWS, all security groups)
      operationId: listSecurityGroups
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:82:1504518253
                entity_type: NSXSecurityGroup
                time: 1509283316
              - entity_id: 18230:82:604574196
                entity_type: NSXSecurityGroup
                time: 1509284912
            cursor: {}
            total_count:
              example: 9
            start_time:
              example: 1509340012
            end_time:
              example: 1509340012
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List security groups
      tags:
      - Entities
  /entities/security-groups/{id}:
    get:
      description: Show security group details
      operationId: getSecurityGroup
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseSecurityGroup'
            entity_id:
              example: 18230:82:604574196
            name:
              example: SG-TestApp-Web
            entity_type:
              example: NSXSecurityGroup
            members:
              example:
              - entity_id: 18230:99:922343691
                entity_type: SecurityTag
            direct_source_rules:
              example: []
            direct_destination_rules:
              example: []
            indirect_source_rules:
              example: []
            indirect_destination_rules:
              example: []
            parents:
              example: []
            direct_members:
              example:
              - entity_id: 18230:99:922343691
                entity_type: SecurityTag
            vendor_id:
              example: securitygroup-25
            excluded_members:
              example: []
            nsx_managers:
              example:
              - entity_id: 18230:7:824494449
                entity_type: NSXVManager
            scope:
              example: GLOBAL
            ip_sets:
              example: []
            security_tags:
              example:
              - entity_id: 18230:99:922343691
                entity_type: SecurityTag
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show security group details
      tags:
      - Entities
  /entities/security-tags:
    get:
      description: List security tags
      operationId: listSecurityTags
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:99:922344652
                entity_type: SecurityTag
                time: 1509283319
              - entity_id: 18230:99:1830868297
                entity_type: SecurityTag
                time: 1509283318
            cursor:
              example: MTA=
            total_count:
              example: 14
            start_time:
              example: 1509340096
            end_time:
              example: 1509340096
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List security tags
      tags:
      - Entities
  /entities/security-tags/{id}:
    get:
      description: Show security tag details
      operationId: getSecurityTag
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SecurityTag'
            entity_id:
              example: 18230:99:922344652
            name:
              example: IDS_IPS.threat=medium
            entity_type:
              example: SecurityTag
            description:
              example: Tag indicates that the data violation detected has a medium
                threat level
            direct_security_groups:
              example: []
            security_groups:
              example: []
            vendor_id:
              example: securitytag-10
            nsx_manager:
              example:
                entity_id: 18230:7:824494449
                entity_type: NSXVManager
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show security tag details
      tags:
      - Entities
  /entities/firewall-rules:
    get:
      description: List firewall rules for NSX, AWS, Azure, physical firewalls, anything
        that has firewall rules
      operationId: listFirewallRules
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:87:367271162
                entity_type: NSXFirewallRule
                time: 1509283319
              - entity_id: 18230:87:367270232
                entity_type: NSXFirewallRule
                time: 1509283319
            cursor: {}
            total_count:
              example: 7
            start_time:
              example: 1509344618
            end_time:
              example: 1509344618
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List firewall rules
      tags:
      - Entities
  /entities/firewall-rules/{id}:
    get:
      description: Show firewall rule details
      operationId: getFirewallRule
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseFirewallRule'
            entity_id:
              example: 18230:87:367271162
            name:
              example: Default Rule
            entity_type:
              example: NSXFirewallRule
            rule_id:
              example: "1001"
            section_id:
              example: "1003"
            section_name:
              example: Default Section Layer3
            sequence_number:
              example: 6
            source_any:
              example: true
            destination_any:
              example: true
            service_any:
              example: true
            sources:
              example: []
            destinations:
              example: []
            services:
              example: []
            action:
              example: ALLOW
            disabled:
              example: false
            source_inversion:
              example: false
            destination_inversion:
              example: false
            port_ranges:
              example:
              - start: 0
                end: 65535
                display: 0-65535 (ANY)
                iana_name: ""
                iana_port_display: ""
            logging_enabled:
              example: false
            direction:
              example: INOUT
            scope:
              example: GLOBAL
            nsx_managers:
              example:
              - entity_id: 18230:7:824494449
                entity_type: NSXVManager
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show firewall rule details
      tags:
      - Entities
  /entities/firewalls:
    get:
      description: List firewalls
      operationId: listFirewalls
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:39:660899929
                entity_type: NSXDistributedFirewall
                time: 1509283319
            cursor: {}
            total_count:
              example: 1
            start_time:
              example: 1509344618
            end_time:
              example: 1509344618
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List firewalls
      tags:
      - Entities
  /entities/firewalls/{id}:
    get:
      description: Show firewall details
      operationId: getFirewall
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseFirewallRule'
            entity_id:
              example: 18230:39:660899929
            name:
              example: NSX Firewall
            entity_type:
              example: NSXDistributedFirewall
            firewall_rules:
              example:
              - rules: []
                rule_set_type: NSX_STANDARD
              - rules: []
            exclusions:
              example:
              - entity_id: 18230:1:875338882
                entity_type: VirtualMachine
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show firewall details
      tags:
      - Entities
  /entities/services:
    get:
      description: List services (used in firewall rules)
      operationId: listServices
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:85:503995168
                entity_type: NSXService
                time: 1509283319
            cursor: {}
            total_count:
              example: 1
            start_time:
              example: 1509344618
            end_time:
              example: 1509344618
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List services
      tags:
      - Entities
  /entities/services/{id}:
    get:
      description: Show service details
      operationId: getService
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseService'
            entity_id:
              example: 18230:85:503995168
            name:
              example: PostgresSQL
            entity_type:
              example: NSXService
            protocol:
              example: TCP
            port_ranges:
              example:
              - start: 5432
                end: 5432
                display: "5432"
                iana_name: ""
                iana_port_display: ""
            nsx_managers:
              example:
              - entity_id: 18230:7:824494449
                entity_type: NSXVManager
            scope:
              example: GLOBAL
            vendor_id:
              example: application-211
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show service details
      tags:
      - Entities
  /entities/service-groups:
    get:
      description: List service groups (used in firewall rules)
      operationId: listServiceGroups
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:86:1504518253
                entity_type: NSXServiceGroup
                time: 1509283319
            cursor: {}
            total_count:
              example: 1
            start_time:
              example: 1509344618
            end_time:
              example: 1509344618
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List service groups
      tags:
      - Entities
  /entities/service-groups/{id}:
    get:
      description: Show service group details (used in firewall rules)
      operationId: getServiceGroup
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseServiceGroup'
            entity_id:
              example: 18230:86:505347433
            name:
              example: Oracle Enterprise Manager
            entity_type:
              example: NSXServiceGroup
            members:
              example:
              - entity_id: 18230:85:676477656
                entity_type: NSXService
              - entity_id: 18230:85:503998082
                entity_type: NSXService
              - entity_id: 18230:85:504027904
                entity_type: NSXService
              - entity_id: 18230:85:676474897
                entity_type: NSXService
            scope:
              example: GLOBAL
            nsx_managers:
              example:
              - entity_id: 18230:7:824494449
                entity_type: NSXVManager
            vendor_id:
              example: applicationgroup-23
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show service group details
      tags:
      - Entities
  /entities/vcenter-managers:
    get:
      description: List vCenter managers
      operationId: listVcenterManagers
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:8:2048038620
                entity_type: VCenterManager
                time: 1509282805
              - entity_id: 18230:8:824494514
                entity_type: VCenterManager
                time: 1509283017
            cursor: {}
            total_count:
              example: 2
            start_time:
              example: 1509344794
            end_time:
              example: 1509344794
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List vCenter managers
      tags:
      - Entities
  /entities/vcenter-managers/{id}:
    get:
      description: Show vCenter manager details
      operationId: getVcenterManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VCenterManager'
            entity_id:
              example: 18230:8:2048038620
            name:
              example: 10.197.17.68
            entity_type:
              example: VCenterManager
            ip_address:
              example:
                ip_address: 10.197.17.68
                netmask: 255.255.255.255
                network_address: 10.197.17.68/32
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show vCenter manager details
      tags:
      - Entities
  /entities/nsx-managers:
    get:
      description: List NSX managers
      operationId: listNSXManagers
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:7:824494449
                entity_type: NSXVManager
                time: 1509339744
            cursor: {}
            total_count:
              example: 1
            start_time:
              example: 1509345346
            end_time:
              example: 1509345346
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List NSX managers
      tags:
      - Entities
  /entities/nsx-managers/{id}:
    get:
      description: Show NSX manager details
      operationId: getNSXManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseNSXManager'
            entity_id:
              example: 18230:7:824494449
            name:
              example: 10.197.53.187
            entity_type:
              example: NSXVManager
            ip_address:
              example:
                ip_address: 10.197.53.187
                netmask: 255.255.255.255
                network_address: 10.197.53.187/32
            version:
              example: 6.2.8
            role:
              example: STANDALONE
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show NSX manager details
      tags:
      - Entities
  /entities/firewall-managers:
    get:
      description: List firewall managers
      operationId: listFirewallManagers
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:313:173836586
                entity_type: CheckpointManager
                time: 1509339744
            cursor: {}
            total_count:
              example: 1
            start_time:
              example: 1509345346
            end_time:
              example: 1509345346
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List firewall managers
      tags:
      - Entities
  /entities/firewall-managers/{id}:
    get:
      description: Show firewall manager details
      operationId: getFirewallManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BaseFirewallManager'
            entity_id:
              example: 18230:313:824494449
            name:
              example: 10.197.53.187
            entity_type:
              example: CheckpointManager
            ip_address:
              example:
                ip_address: 10.197.53.187
                netmask: 255.255.255.255
                network_address: 10.197.53.187/32
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show firewall manager details
      tags:
      - Entities
  /entities/distributed-virtual-switches:
    get:
      description: List distributed virtual switches
      operationId: listDistributedVirtualSwitches
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:2:161257049
                entity_type: DistributedVirtualSwitch
                time: 1509282885
              - entity_id: 18230:2:368016825
                entity_type: DistributedVirtualSwitch
                time: 1509282854
            cursor: {}
            total_count:
              example: 2
            start_time:
              example: 1509345426
            end_time:
              example: 1509345426
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List distributed virtual switches
      tags:
      - Entities
  /entities/distributed-virtual-switches/{id}:
    get:
      description: Show distributed virtual switch details
      operationId: getDistributedVirtualSwitch
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributedVirtualSwitch'
            entity_id:
              example: 18230:2:161257049
            name:
              example: dvSwitch
            entity_type:
              example: DistributedVirtualSwitch
            vendor_id:
              example: dvs-21
            vcenter_manager:
              example:
                entity_id: 18230:8:824494514
                entity_type: VCenterManager
            hosts:
              example:
              - entity_id: 18230:4:1528136654
                entity_type: Host
              - entity_id: 18230:4:1528138514
                entity_type: Host
              - entity_id: 18230:4:1528136747
                entity_type: Host
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show distributed virtual switch details
      tags:
      - Entities
  /entities/distributed-virtual-portgroups:
    get:
      description: List distributed virtual portgroups
      operationId: listDistributedVirtualPortgroups
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:3:187309184
                entity_type: DistributedVirtualPortgroup
                time: 1509282847
              - entity_id: 18230:3:1603334983
                entity_type: DistributedVirtualPortgroup
                time: 1509282885
            cursor:
              example: MTA=
            total_count:
              example: 46
            start_time:
              example: 1509345514
            end_time:
              example: 1509345514
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List distributed virtual portgroups
      tags:
      - Entities
  /entities/distributed-virtual-portgroups/{id}:
    get:
      description: Show distributed virtual portgroup details
      operationId: getDistributedVirtualPortgroup
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributedVirtualPortgroup'
            entity_id:
              example: 18230:3:187309184
            name:
              example: vxw-dvs-15-virtualwire-18-sid-5017-swargate end VM vxlan
            entity_type:
              example: DistributedVirtualPortgroup
            vendor_id:
              example: dvportgroup-92
            vcenter_manager:
              example:
                entity_id: 18230:8:2048038620
                entity_type: VCenterManager
            distributed_virtual_switch:
              example:
                entity_id: 18230:2:368016825
                entity_type: DistributedVirtualSwitch
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show distributed virtual portgroup details
      tags:
      - Entities
  /entities/names:
    post:
      description: Get names for entities.Limit of 1000 entities in a single request.
      operationId: getNames
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NamesRequest'
        description: Names Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NamesResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get names for entities
      tags:
      - Entities
      x-codegen-request-body-name: body
  /entities/names/{id}:
    get:
      description: Get name of an entity
      operationId: getName
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityName'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get name of an entity
      tags:
      - Entities
  /entities/azure-subscriptions:
    get:
      description: List Microsoft Azure Subscriptions
      operationId: listAzureSubscription
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:1708:824494449
                entity_type: AzureSubscription
                time: 1509339744
            cursor: {}
            total_count:
              example: 1
            start_time:
              example: 1509345346
            end_time:
              example: 1509345346
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Microsoft Azure Subscriptions
      tags:
      - Entities
  /entities/azure-subscriptions/{id}:
    get:
      description: Show Microsoft Azure Subscription details
      operationId: getAzureSubscription
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AzureSubscription'
            entity_id:
              example: 18230:1708:824494449
            name:
              example: 10.197.53.187
            entity_type:
              example: AzureSubscription
            manager: {}
            vendor_id:
              example: 12344
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Microsoft Azure Subscription details
      tags:
      - Entities
  /entities/aws-account-managers:
    get:
      description: List AWS Account managers
      operationId: listAWSAccountManagers
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:612:824494449
                entity_type: AWSAccountManager
                time: 1509339744
            cursor: {}
            total_count:
              example: 1
            start_time:
              example: 1509345346
            end_time:
              example: 1509345346
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List AWS Account managers
      tags:
      - Entities
  /entities/aws-account-managers/{id}:
    get:
      description: Show AWS Account manager details
      operationId: getAWSAccountManager
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AWSAccountManager'
            entity_id:
              example: 18230:612:824494449
            name:
              example: 10.197.53.187
            entity_type:
              example: AWSAccountManager
            manager: {}
            vendor_id:
              example: 12344
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show AWS Account manager details
      tags:
      - Entities
  /metrics:
    get:
      description: Get metric points for an entity for an entity id and metric for
        a given time interval. Maximum number of metrics point returned by API is
        300. In case the interval and time period combination have more than 300 metrics
        points, client should break the time period to multiple batches to get all
        the metrics points. These metric points are the points inside the metric charts
        (CPU, network rate, etc.)
      operationId: getMetrics
      parameters:
      - description: entity type
        in: query
        name: entity_id
        required: true
        schema:
          type: string
      - description: metric name
        in: query
        name: metric
        required: true
        schema:
          type: string
      - description: metric points interval
        in: query
        name: interval
        required: true
        schema:
          type: integer
      - description: start time for query in epoch seconds
        in: query
        name: start
        required: true
        schema:
          format: int64
          type: integer
      - description: end time for query in epoch seconds
        in: query
        name: end
        required: true
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetricResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get metric points for an entity
      tags:
      - Metrics
  /schema/{entity-type}/metrics:
    get:
      description: Get details of metrics available for entity type
      operationId: getMetricsSchema
      parameters:
      - description: entity type
        in: path
        name: entity-type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityMetricsSchema'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get metrics schema for an entity type
      tags:
      - Schema
  /groups/applications:
    get:
      description: List applications in vRealize Network Insight
      operationId: listApplications
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: timestamp after which apps has been modified
        in: query
        name: modifiedAfter
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponse'
            results:
              example:
              - entity_id: 18230:561:271275765
                entity_type: Application
            total_count:
              example: 1
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List applications
      tags:
      - Applications
    post:
      description: |-
        Application is a group of tiers. A tier is a group of virtual machines or IP addresses based on membership criteria. Tiers are bound to a single
        application. An application name is unique and should not conflict with another application name.
      operationId: addApplication
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            entity_id:
              example: 18230:561:271275765
            name:
              example: App-1
            entity_type:
              example: Application
            create_time:
              example: 1509410056733
            created_by:
              example: admin@local
            last_modified_time:
              example: 0
            last_modified_by:
              example: ""
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create an application
      tags:
      - Applications
      x-codegen-request-body-name: body
  /groups/applications/{id}:
    delete:
      description: Deleting an application deletes all the tiers of the application
        along with the application
      operationId: deleteApplication
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Success
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an application
      tags:
      - Applications
    get:
      description: Show application details for an entity ID. This returns the application
        name.
      operationId: getApplication
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Application'
            entity_id:
              example: 18230:561:271275765
            name:
              example: App-1
            entity_type:
              example: Application
            create_time:
              example: 1509410056733
            created_by:
              example: admin@local
            last_modified_time:
              example: 0
            last_modified_by:
              example: ""
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show application details
      tags:
      - Applications
  /groups/applications/{id}/problems:
    get:
      description: List Application problem events.
      operationId: getAppProblems
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      - description: Type of event, e.g UserDefinedProblemEvent
        in: query
        name: event_type
        schema:
          type: string
      - description: Event tags
        explode: true
        in: query
        name: event_tags
        schema:
          items:
            type: string
          type: array
        style: form
      - description: Status of event open or closed
        in: query
        name: event_status
        schema:
          default: all
          enum:
          - open
          - closed
          - all
          type: string
      - description: Events that were created or updated or closed between this time
          and update_time_to, in seconds
        in: query
        name: update_time_from
        schema:
          type: number
      - description: Events that were created or updated or closed between update_time_from
          and this time, in seconds
        in: query
        name: update_time_to
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:35230:1233393386
                entity_type: ProblemEvent
                time: 1509283820
              - entity_id: 18230:35228:1832167524
                entity_type: ProblemEvent
                time: 1509285022
            cursor:
              example: MTA=
            total_count:
              example: 15
            start_time:
              example: 1509231996
            end_time:
              example: 1509318396
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Application problems
      tags:
      - Applications
  /groups/applications/{id}/members/vms:
    get:
      description: Show application members
      operationId: getApplicationVms
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationMembers'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show application members
      tags:
      - Applications
  /groups/applications/members:
    post:
      description: Get member details of applications
      operationId: getApplicationsMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsMembersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationsMembersResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get member details of applications
      tags:
      - Applications
      x-codegen-request-body-name: body
  /groups/tiers/members:
    post:
      description: Get member details of tiers
      operationId: getTiersMembers
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupsMembersRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TiersMembersResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get member details of tiers
      tags:
      - Applications
      x-codegen-request-body-name: body
  /groups/applications/{id}/flow-summary:
    get:
      description: Show application details
      operationId: getApplicationFlowSummary
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFlowSummary'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show application flow summary
      tags:
      - Applications
  /groups/applications/{id}/flow-props:
    get:
      description: Get application flow properties e.g flow count, count of interent
        flows etc
      operationId: getAppFlowProperties
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      - description: List of properties to include
        explode: false
        in: query
        name: props
        required: true
        schema:
          items:
            $ref: '#/components/schemas/AppFlowPropEnum'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFlowData'
            results:
              example:
                application_id: 10000:561:1234567890
                flow_data:
                - name: COUNT
                  value: 100
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get application flow properties
      tags:
      - Applications
  /groups/applications/{id}/flow-metrics:
    get:
      description: Get application flow properties sum of bytes of incoming and outgoing
        flows
      operationId: getAppFlowMetrics
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      - description: List of metrics to include
        explode: false
        in: query
        name: metrics
        required: true
        schema:
          items:
            $ref: '#/components/schemas/AppFlowMetricEnum'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationFlowData'
            results:
              example:
                application_id: 10000:561:1234567890
                flow_data:
                - name: INCOMING_BYTES
                  value: 100
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get application flow metrics
      tags:
      - Applications
  /groups/applications/{id}/top-talking-member:
    get:
      description: List Application top talking members based on provided criteria
      operationId: getAppTopTalkingMembers
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      - description: Sorting criteria
        explode: false
        in: query
        name: sort_criteria
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TopTalkerSortEnum'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTopTalkingMemberData'
            results:
              example:
              - entity_id: 18230:1702:1233393386
                entity_type: AzureVM
              - entity_id: 18230:601:1832167524
                entity_type: EC2Instance
            cursor:
              example: MTA=
            total_count:
              example: 15
            start_time:
              example: 1509231996
            end_time:
              example: 1509318396
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Application top talking members
      tags:
      - Applications
  /groups/applications/{id}/top-talking-pair:
    get:
      description: List Application top talking pairs based on provided criteria
      operationId: getAppTopTalkingPairs
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      - description: Sorting criteria
        explode: false
        in: query
        name: sort_criteria
        required: true
        schema:
          items:
            $ref: '#/components/schemas/TopTalkerSortEnum'
          type: array
        style: form
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationTopTalkingPairData'
            results:
              example:
              - src_entity_id: 18230:1702:123456
                src_entity_type: AzureVM
                dst_entity_id: 18230:601:1233393386
                dst_entity_type: EC2Instance
              - src_entity_id: 18230:601:1832167524
                src_entity_type: EC2Instance
                dst_entity_id: 18230:1702:9876543
                dst_entity_type: AzureVM
            cursor:
              example: MTA=
            total_count:
              example: 15
            start_time:
              example: 1509231996
            end_time:
              example: 1509318396
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Application top talking pairs
      tags:
      - Applications
  /groups/applications/fetch:
    get:
      description: Get the details of applications in bulk, by providing a list of
        entity IDs.
      operationId: listApplicationsDetails
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: timestamp after which apps has been modified
        in: query
        name: modifiedAfter
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedApplicationListResponse'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get application details in bulk
      tags:
      - Applications
  /groups/applications/{id}/tiers:
    get:
      description: List tiers of an application
      operationId: listApplicationTiers
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TierListResponse'
            results:
              example:
              - entity_id: 18230:562:1266458745
                name: tier-1
                entity_type: Tier
                group_membership_criteria:
                - membership_type: SearchMembershipCriteria
                  search_membership_criteria:
                    entity_type: VirtualMachine
                    filter: security_groups.entity_id = '18230:82:604573173'
                application:
                  entity_id: 18230:561:271275765
                  entity_type: Application
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List tiers of an application
      tags:
      - Applications
    post:
      description: |-
        Create a tier of an application by with specified membership criteria. The membership criteria id defined in terms of
        virtual machines or IP addresses/subnet. Please refer to API Guide on how to construct membership criteria.
      operationId: addTier
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TierRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tier'
            entity_id:
              example: 18230:562:1266458745
            name:
              example: tier-1
            entity_type:
              example: Tier
            group_membership_criteria:
              example:
              - membership_type: SearchMembershipCriteria
                search_membership_criteria:
                  entity_type: VirtualMachine
                  filter: security_groups.entity_id = '18230:82:604573173'
            application:
              example:
                entity_id: 18230:561:271275765
                entity_type: Application
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create tier in application
      tags:
      - Applications
      x-codegen-request-body-name: body
  /groups/applications/{id}/tiers/{tier-id}:
    delete:
      description: Delete application tier of an application
      operationId: deleteTier
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: tier-id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete application tier
      tags:
      - Applications
    get:
      description: Show application tier details
      operationId: getApplicationTier
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: tier-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tier'
            entity_id:
              example: 18230:562:1266458745
            name:
              example: tier-1
            entity_type:
              example: Tier
            group_membership_criteria:
              example:
              - membership_type: SearchMembershipCriteria
                search_membership_criteria:
                  entity_type: VirtualMachine
                  filter: security_groups.entity_id = '18230:82:604573173'
            application:
              example:
                entity_id: 18230:561:271275765
                entity_type: Application
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show application tier details
      tags:
      - Applications
    put:
      description: |-
        Edit a tier of an application with specified membership criteria. The membership criteria id defined in terms of
        virtual machines or IP addresses/subnet. Please refer to API Guide on how to construct membership criteria.
      operationId: editApplicationTier
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - in: path
        name: tier-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TierRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tier'
            entity_id:
              example: 18230:562:1266458745
            name:
              example: tier-1
            entity_type:
              example: Tier
            group_membership_criteria:
              example:
              - membership_type: SearchMembershipCriteria
                search_membership_criteria:
                  entity_type: VirtualMachine
                  filter: security_groups.entity_id = '18230:82:604573173'
            application:
              example:
                entity_id: 18230:561:271275765
                entity_type: Application
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Edit tier in application
      tags:
      - Applications
      x-codegen-request-body-name: body
  /groups/tiers/{tier-id}:
    get:
      description: Show application tier details
      operationId: getTier
      parameters:
      - in: path
        name: tier-id
        required: true
        schema:
          type: string
      - description: Authorization Header
        in: header
        name: Authorization
        required: true
        schema:
          format: NetworkInsight <token>
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Tier'
            entity_id:
              example: 18230:562:1266458745
            name:
              example: tier-1
            entity_type:
              example: Tier
            group_membership_criteria:
              example:
              - membership_type: SearchMembershipCriteria
                search_membership_criteria:
                  entity_type: VirtualMachine
                  filter: security_groups.entity_id = '18230:82:604573173'
            application:
              example:
                entity_id: 18230:561:271275765
                entity_type: Application
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show application tier details
      tags:
      - Applications
  /entities/kubernetes-services:
    get:
      description: List Kubernetes services
      operationId: getKubernetesServices
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Start time for query in epoch seconds
        in: query
        name: start_time
        schema:
          type: number
      - description: End time for query in epoch seconds
        in: query
        name: end_time
        schema:
          type: number
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
            results:
              example:
              - entity_id: 18230:1504:115896
                entity_type: KubernetesService
                time: 1509283414
              - entity_id: 18230:1504:87533
                entity_type: KubernetesService
                time: 1509283476
            cursor:
              example: MTA=
            total_count:
              example: 39
            start_time:
              example: 1509335034
            end_time:
              example: 1509335034
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List Kubernetes Services
      tags:
      - Entities
  /entities/kubernetes-services/{id}:
    get:
      description: Show Kubernetes service details
      operationId: getKubernetesServiceById
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Time in epoch seconds
        in: query
        name: time
        schema:
          format: int64
          type: integer
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/KubernetesService'
            entity_id:
              example: 1234:1504:13522
            vendorId:
              example: 9902d9fa-c563-11e8-aa7a-005056869748
            name:
              example: carts
            entity_type:
              example: KubernetesService
            type:
              example: ClusterIP
            clusterip:
              example:
              - ip_address: 10.197.17.74
                netmask: 255.255.255.0
                network_address: 10.197.17.0/24
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show Kubernetes service details
      tags:
      - Entities
  /micro-seg/recommended-rules:
    post:
      description: |-
        Get recommended firewall rules based on the flow data gathered by vRealize Network Insight.
        This API provides service to retrieve recommended rules based on flow traffic that is observed between
        two groups OR for a single group based on all the inbound and outboud traffic for that group.
        In case two groups are provided, both the groups should be of same type.
        Currently supported groups are Application, Tier, NSXSecurityGroup, EC2SecurityGroup.
      operationId: listRecommendedRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendedRulesRequest'
        description: Recommended Rules Request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RecommendedRules'
            results:
              example:
              - sources:
                - entity_id: 10000:562:1904698621
                  entity_type: Tier
                destinations:
                - entity_id: 10000:562:1780351215
                  entity_type: Tier
                protocols:
                - UDP
                port_ranges:
                - start: 53
                  end: 53
                - start: 1025
                  end: 1025
                action: ALLOW
            time_range:
              example:
                start_time_epoch: 1508996919391
                end_time_epoch: 1509083319391
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get logical recommended firewall rules
      tags:
      - Microsegmentation
      x-codegen-request-body-name: body
  /micro-seg/recommended-rules/nsx:
    post:
      description: |-
        Export recommended firewall rules based on the flow data gathered by vRealize Network Insight in NSX-V compatible
        format. The output will be a .zip file download.
      operationId: exportNsxRecommendedRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RecommendedRulesRequest'
        description: NSX Recommended Firewall Rules Request
        required: false
      responses:
        "200":
          content:
            application/octet-stream:
              schema:
                format: binary
                type: string
          description: Success
        "400":
          content:
            application/octet-stream:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Export recommended firewall rules for NSX-v
      tags:
      - Microsegmentation
      x-codegen-request-body-name: body
  /search:
    post:
      description: |-
        Using search API you can search vRealize Network Insight entities by specifying entity type and filter expression.
        A filter expression is a predicate expression (similar to SQL where clause) used to define the search criteria.
        Please refer to API Guide on details of how to construct filter expression. A successful search request will return a
        list of entity ids that matches the search criteria.
      operationId: searchEntities
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequest'
        description: Search Request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedListResponseWithTime'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Search entities
      tags:
      - Search
      x-codegen-request-body-name: body
  /search/aggregation:
    post:
      description: |-
        Using aggregate API you can aggregate search results for vRealize Network Insight entities by specifying
        entity type, filter expression and aggregate clause. Please refer to API Guide on details of how to construct
        filter expression and aggregate clause. A successful search request will return a list of aggregations.
      operationId: aggregateSearchResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AggregationRequest'
        description: Aggregation Request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AggregationResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Search Aggregation API
      tags:
      - Search
      x-codegen-request-body-name: body
  /search/groupby:
    post:
      description: |-
        Using groupby search API you can group search results for vRealize Network Insight entities by specifying
        entity type, filter expression, aggregate clause and groupby clause. Please refer to API Guide on details
        of how to construct filter expression, aggregate clause and groupby clause. A successful search request will
        return a list of groups.
      operationId: groupSearchResults
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchGroupByRequest'
        description: GroupBy Request
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SearchGroupByResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Search Group By API
      tags:
      - Search
      x-codegen-request-body-name: body
  /settings/ip-tags/tag-ids:
    get:
      description: Get all tag IDs e.g. EAST_WEST, INTERNET etc. These are used in
        the flow tags.
      operationId: getIpTagIds
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpTagIdList'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show IP tag IDs
      tags:
      - Settings
  /settings/ip-tags/{tag-id}:
    get:
      description: Show IP tag details with member IP addresses and subnets
      operationId: getIpTag
      parameters:
      - in: path
        name: tag-id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IpTag'
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Show IP tag details
      tags:
      - Settings
  /settings/ip-tags/{tag-id}/add:
    post:
      description: Tag IP addresses with tag-id
      operationId: addIpTag
      parameters:
      - in: path
        name: tag-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpTag'
        description: Ip Tag
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Tag IP addresses with tag-id
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/ip-tags/{tag-id}/remove:
    post:
      description: Remove tag from IP addresses
      operationId: removeIpTag
      parameters:
      - in: path
        name: tag-id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/IpTag'
        description: Ip Tag
        required: true
      responses:
        "200":
          content: {}
          description: OK
        "401":
          content: {}
          description: Unauthorized
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Remove tag from IP addresses
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/subnet-mappings:
    get:
      description: Get all subnet mappings (CIDR to VLAN ID).
      operationId: getSubnetMappings
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetMappingList'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get all subnet mappings
      tags:
      - Settings
    post:
      description: Create a new subnet mapping (CIDR to VLAN ID). Physical to physical
        flows (without the switches added as a data source) can be linked to a VLAN
        ID with to these mappings.
      operationId: createSubnetMapping
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetMappingRequest'
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetMapping'
          description: Created
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Create subnet mapping
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/subnet-mappings/{id}:
    delete:
      description: Delete an existing subnet mapping (CIDR to VLAN ID).
      operationId: deleteSubnetMapping
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete subnet mapping
      tags:
      - Settings
    put:
      description: Update an existing subnet mapping (VLAN ID for the given CIDR).
      operationId: updateSubnetMapping
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubnetMappingRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubnetMapping'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update subnet mapping
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/vidm/certificate:
    get:
      description: Get certificate for given url
      operationId: getCertificate
      parameters:
      - description: Complete URL path to fetch certificate
        in: query
        name: url
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VidmCertificate'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get certificate for given url
      tags:
      - Settings
  /settings/vidm:
    delete:
      description: Delete the existing VMware Identity Manager configuration. Only
        admin users can perform this action.
      operationId: deleteVidmConfiguration
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete VMware Identity Manager configuration
      tags:
      - Settings
    get:
      description: Retrieve the saved configuration of VMware Identity Manager in
        Network Insight. Only admin users can retrieve this information.
      operationId: getVidmConfiguration
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VidmConfigResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get configuration details of VMware Identity Manager
      tags:
      - Settings
    post:
      description: |-
        vRealize Network Insight supports SSO authentication through VMware Identity Manager.
        To authenticate against a particular VMware Identity Manager appliance, it must be configured and enabled in vRealize Network Insight. Only admin users can perform this action.
      operationId: saveVidmConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VidmConfiguration'
        description: VMware Identity Manager configuration details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VidmConfigResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Already Exists
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Configure VMware Identity Manager
      tags:
      - Settings
      x-codegen-request-body-name: body
    put:
      description: Update the existing VMware Identity Manager configuration. Only
        admin users can perform this action.
      operationId: updateVidmConfiguration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VidmConfiguration'
        description: VMware Identity Manager configuration details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VidmConfigResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update VMware Identity Manager configuration
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/vidm/enable:
    post:
      description: Enable VMware Identity Manager integration. Only admin users can
        perform this action.
      operationId: enableVidm
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable VMware Identity Manager integration
      tags:
      - Settings
  /settings/vidm/disable:
    post:
      description: Disable VMware Identity Manager integration, although it will not
        delete the configuration. Only admin users can perform this action.
      operationId: disableVidm
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable VMware Identity Manager integration
      tags:
      - Settings
  /settings/user-groups/vidm:
    post:
      description: |-
        Add a new VMware Identity Manager user-group to vRealize Network Insight. Only admin users can perform this action.
        VMware Identity Manager must be configured prior to this action.
      operationId: addVidmUserGroup
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VidmUserGroupRequest'
        description: User-group details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Already Exists
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add a VMware Identity Manager user-group to vRealize Network Insight
      tags:
      - Settings
      x-codegen-request-body-name: body
    put:
      description: Update role for user-group mapped through VMware Identity Manager.
        Only admin users can perform this action.
      operationId: updateVidmUserGroupRole
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VidmUserGroupRequest'
        description: User-group details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Already Exists
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update role for user-group mapped through VMware Identity Manager
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/user-groups:
    get:
      description: |-
        Retrieve the list of existing user-groups. Only admin users can retrieve this information.
        This action is currently restricted to user-groups mapped through VMware Identity Manager.
      operationId: getUserGroups
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Type of user-group
        in: query
        name: type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedUserGroupListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List user-groups
      tags:
      - Settings
  /settings/user-groups/{id}:
    delete:
      description: |-
        Delete an existing user-group. Only admin users can perform this action.
        This action is currently restricted to user-group mapped through VMware Identity Manager
      operationId: deleteUserGroup
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an existing user-group
      tags:
      - Settings
    get:
      description: |-
        Get details of a user-group. Only admin users can perform this action.
        This action is currently restricted to user-group mapped through VMware Identity Manager.
      operationId: getUserGroup
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserGroupResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of a user-group
      tags:
      - Settings
  /settings/users/vidm:
    post:
      description: |-
        Add a new VMware Identity manager user to vRealize Network Insight. Only admin users can perform this action.
        VMware Identity Manager must be configured prior to this action.
      operationId: addVidmUser
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VidmUserRequest'
        description: User details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Already Exists
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add a VMware Identity manager user to vRealize Network Insight
      tags:
      - Settings
      x-codegen-request-body-name: body
    put:
      description: Update role for user mapped through VMware Identity Manager. Only
        admin users can perform this action.
      operationId: updateVidmUserRole
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VidmUserRequest'
        description: User details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Already Exists
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update role for user mapped through VMware Identity Manager
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/users:
    get:
      description: |-
        List the existing users. Only admin users can retrieve this information.
        This action is currently restricted to users mapped through VMware Identity Manager
      operationId: getUsers
      parameters:
      - description: Page size of results
        in: query
        name: size
        schema:
          default: 10.0
          type: number
      - description: Cursor from previous response
        in: query
        name: cursor
        schema:
          type: string
      - description: Type of user
        in: query
        name: type
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PagedUserListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List the users
      tags:
      - Settings
  /settings/users/{id}:
    delete:
      description: |-
        Delete an existing user. Only admin users can perform this action.
        This action is currently restricted to user mapped through VMware Identity Manager
      operationId: deleteUser
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an existing user.
      tags:
      - Settings
    get:
      description: |-
        Get details of a user. Only admin users can perform this action.
        This action is currently restricted to user mapped through VMware Identity Manager
      operationId: getUser
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of a user
      tags:
      - Settings
  /settings/users/password:
    put:
      description: |-
        Update password of a local user. Any user can change his own password. Admin has permission to change any user
        password.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateRequest'
        description: User details
        required: true
      responses:
        "200":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update user password
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/proxy-servers:
    get:
      description: List of configured web proxy servers. Only admin and audit users
        can retrieve this information.
      operationId: getWebProxies
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List of configured web proxy servers
      tags:
      - Settings
    post:
      description: Add new Web Proxy server. By Default, maximum of 10 web proxy servers
        can be configured. Only admin users can perform this action.
      operationId: addWebProxy
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebProxyRequest'
        description: Web Proxy Details
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyProfileIdResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add new Web Proxy in the system
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/proxy-servers/{id}:
    delete:
      description: Delete an existing existing Web Proxy Server. Only admin user can
        perform this action.
      operationId: deleteWebProxy
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      - description: Identifier of web proxy to which all the existing connections
          will be migrated to
        in: query
        name: migrationWebProxyId
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an existing Web Proxy server
      tags:
      - Settings
    get:
      description: Get details of an existing Web Proxy Server. Only admin and audit
        users can perform this action.
      operationId: getWebProxy
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProxyResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of an existing Web Proxy Server
      tags:
      - Settings
    put:
      description: Update the details of an existing Web Proxy Server. Only admin
        can perform this action.
      operationId: updateWebProxy
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebProxyRequest'
        description: Updated Web Proxy Details
        required: true
      responses:
        "204":
          content: {}
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "409":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Conflict
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update the existing web proxy server
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/proxy-servers/{id}/validate-entities:
    post:
      description: Validate the connections with the updated web proxy settings. Only
        admin users can perform this action.
      operationId: validateConnectionsViaWebProxy
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebProxyRequest'
        description: Web Proxy Details to be updated
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConnectionViaWebProxyResponseList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Validate the connections via web proxy
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/proxy-servers/validate-migration:
    post:
      description: Validate the connections when migrating from one web proxy to another.
        Only admin users can perform this action.
      operationId: validateWebProxyMigration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebProxyMigrationRequest'
        description: Web Proxy Details for migration
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidateConnectionViaWebProxyResponseList'
          description: Success
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Validate the connections when migrating from one web proxy to another
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/proxy-servers/{id}/connected-clients:
    get:
      description: Get details of connected clients to Web Proxy Server. Only admin
        and audit users can perform this action.
      operationId: getConnectedClientsToWebProxy
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EntityUsingOrBehindWebProxyList'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of connected clients to Web Proxy Server
      tags:
      - Settings
  /settings/proxy-servers/infra:
    get:
      description: Get web proxy for infra nodes. Only admin and audit users can perform
        this action.
      operationId: getInfraNodesWebProxy
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WebProxyConfigListForNodes'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of web proxy config associated with infra nodes
      tags:
      - Settings
  /settings/snmp/profiles:
    get:
      description: List the configured SNMP Trap destination profiles. Only admin
        users can retrieve this information.
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpProfileListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List the configured SNMP Trap destination profiles
      tags:
      - Settings
    post:
      description: Add a new SNMP destination profile. By Default, maximum of 4 SNMP
        Trap profiles can be configured. Only admin users can perform this action.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnmpProfileRequest'
        description: SNMP Trap destination profile
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpProfileResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add new SNMP Trap destination profile
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/snmp/profiles/send-test-trap:
    post:
      description: Send Test trap to SNMP destination profile. Only admin users can
        perform this action.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnmpProfileRequest'
        description: SNMP destination profile
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TestSnmpProfileResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Send Test trap to SNMP destination profile
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/snmp/profiles/{id}:
    delete:
      description: Delete an existing SNMP destination profile. Only admin users can
        perform this action.
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an existing SNMP Trap destination profile
      tags:
      - Settings
    get:
      description: Get details of an existing SNMP Trap destination profile. Only
        admin users can perform this action.
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpProfileResponse'
          description: OK
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of an existing SNMP destination profile
      tags:
      - Settings
    put:
      description: Update an existing SNMP Trap destination profile. Only admin users
        can perform this action.
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnmpProfileRequest'
        description: SNMP destination profile
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SnmpProfileResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an existing SNMP destination profile
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/snmp/profiles/{id}/migrate-events:
    post:
      description: Migrate event subscriptions from given SNMP profile to multiple
        other SNMP Trap destination profiles.
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SnmpProfileIds'
        description: SNMP Trap destination profiles list
        required: true
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Migrate event subscriptions to other SNMP Trap destination profiles
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/events/user-defined-events:
    get:
      description: List the created User Defined Event defintions.
      operationId: getAllUserDefinedEvents
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionListResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: List the created User Defined Event defintions.
      tags:
      - Settings
    post:
      description: Add new User-Defined event.
      operationId: createUserDefinedEvent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        description: Add new User-Defined events
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Add new User-Defined event
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/events/user-defined-events/{id}/enable:
    post:
      description: Enable an existing User-Defined event.
      operationId: enableUserDefinedEvent
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Enable an existing User-Defined event
      tags:
      - Settings
  /settings/events/user-defined-events/{id}/disable:
    post:
      description: Disable an existing User-Defined event.
      operationId: disableUserDefinedEvent
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Disable an existing User-Defined event
      tags:
      - Settings
  /settings/events/user-defined-events/{id}:
    delete:
      description: Delete an existing User-Defined event.
      operationId: deleteUserDefinedEvent
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "204":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete an existing User-Defined event
      tags:
      - Settings
    get:
      description: Get details of an existing User-Defined event.
      operationId: getUserDefinedEvent
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get details of an existing User-Defined event.
      tags:
      - Settings
    put:
      description: Update an existing User-Defined event.
      operationId: updateUserDefinedEvent
      parameters:
      - description: The Entity ID of object requestion information on
        in: path
        name: id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SubscriptionRequest'
        description: Update an existing User-Defined event.
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubscriptionResponse'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update an existing User-Defined event.
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/backup:
    delete:
      description: Delete existing Backup configuration.
      operationId: deleteBackupConfig
      responses:
        "204":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete existing Backup configuration
      tags:
      - Settings
    get:
      description: Get Backup configuration
      operationId: getBackupConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreRequest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get Backup configuration
      tags:
      - Settings
    post:
      description: |-
        Configure backup of platform configuration; system settings, data sources, SMTP and
        SNMP settings, and more. This can be sent to a local filesystem, or a remove SSH
        or FTP server.
      operationId: addBackupConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreRequest'
        description: Backup configuration
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreRequest'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Configure backup of configuration
      tags:
      - Settings
      x-codegen-request-body-name: body
    put:
      description: Update Backup configuration
      operationId: updateBackupConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreRequest'
        description: Updated Backup configuration
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreRequest'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Update Backup configuration
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/backup/status:
    get:
      description: Get currently running or last Backup job status
      operationId: getBackupStatusReport
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get currently running or last Backup job status
      tags:
      - Settings
  /settings/restore:
    delete:
      description: Delete existing restore configuration.
      operationId: deleteRestoreConfig
      responses:
        "204":
          content: {}
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "403":
          content: {}
          description: Forbidden
        "404":
          content: {}
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Delete existing restore configuration
      tags:
      - Settings
    get:
      description: Get Restore configuration
      operationId: getRestoreConfig
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreRequest'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get Restore configuration
      tags:
      - Settings
    post:
      description: Configure restore of platform configuration and triggers restore
        operation. Must be done on a clean platform deployment.
      operationId: addRestoreConfig
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BackupRestoreRequest'
        description: Restore configuration
        required: true
      responses:
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreRequest'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "403":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Forbidden
        "500":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Configure restore of configuration and triggers restore operation
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/restore/status:
    get:
      description: Get currently running or last Restore job status
      operationId: getRestoreStatusReport
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BackupRestoreStatusResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get currently running or last Restore job status
      tags:
      - Settings
  /settings/licensing/:
    get:
      description: Get information for current licenses and license usage
      operationId: getLicenses
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicensingResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get current licensing and license usage information
      tags:
      - Settings
  /settings/licensing/validate:
    post:
      description: Validates license key, makes sure it can be applied.
      operationId: validateSerialNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicensingKeyRequest'
        description: Licensing Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicensingActivate'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Validates license key
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/licensing/activate:
    post:
      description: Activates a valid license key to an existing deployment. For example,
        adding a SD-WAN license key.
      operationId: activateSerialNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicensingKeyRequest'
        description: Licensing Request
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LicensingActivate'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Activates a valid license key. This API is not applicable for on-boarding.
      tags:
      - Settings
      x-codegen-request-body-name: body
  /settings/licensing/deactivate:
    delete:
      description: Deactivates an existing license key
      operationId: deactivateSerialNumber
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LicensingKeyRequest'
        description: Licensing Request
        required: true
      responses:
        "204":
          content: {}
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Unauthorized
        "404":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Not Found
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Deactivates an existing license key
      tags:
      - Settings
      x-codegen-request-body-name: body
  /path/firewall-rules:
    post:
      description: Get firewall rules applicable in path for a client IP and server
        IP for specified port/protocol.
      operationId: pathFirewallRules
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PathFirewallRulesRequest'
        description: VMware Identity Manager configuration details
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PathFirewallRules'
          description: Success
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get firewall rules for specified client server ips and port/protocol
      tags:
      - Path
      x-codegen-request-body-name: body
  /logs/audit:
    post:
      description: get audit logs based on filters specified in query
      operationId: getAuditLogs
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuditRequest'
        description: Query Filters
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditListResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      summary: Get Audit logs
      tags:
      - Logs
      x-codegen-request-body-name: body
  /schema/problems:
    get:
      description: Bulk fetch of event meta info. Max batch size is 1000.
      operationId: bulkFetchEventMetaInfo
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EventMetaInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get Event meta Information
      tags:
      - Schema
  /entities/vendor-infos/fetch:
    post:
      description: Bulk fetch of vendor info. Max batch size is 1000.
      operationId: bulkFetchVendorInfo
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FetchRequest'
        required: false
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DetailedVendorInfoResponse'
          description: OK
        "400":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApiError'
          description: Bad Request
        "401":
          content: {}
          description: Unauthorized
        "500":
          content: {}
          description: Internal Error
      security:
      - ApiKeyAuth: []
      summary: Get Vendor Information of entities
      tags:
      - Entities
      x-codegen-request-body-name: body
components:
  parameters:
    Identifier:
      description: The Entity ID of object requestion information on
      in: path
      name: id
      required: true
      schema:
        type: string
    Time:
      description: Time in epoch seconds
      in: query
      name: time
      schema:
        format: int64
        type: integer
    Size:
      description: Page size of results
      in: query
      name: size
      schema:
        default: 10.0
        type: number
    Cursor:
      description: Cursor from previous response
      in: query
      name: cursor
      schema:
        type: string
    StartTime:
      description: Start time for query in epoch seconds
      in: query
      name: start_time
      schema:
        type: number
    EndTime:
      description: End time for query in epoch seconds
      in: query
      name: end_time
      schema:
        type: number
    UserType:
      description: Type of user
      in: query
      name: type
      required: true
      schema:
        type: string
    UserGroupType:
      description: Type of user-group
      in: query
      name: type
      required: true
      schema:
        type: string
    EventTags:
      description: Event tags
      explode: true
      in: query
      name: event_tags
      schema:
        items:
          type: string
        type: array
      style: form
    EventStatus:
      description: Status of event open or closed
      in: query
      name: event_status
      schema:
        default: all
        enum:
        - open
        - closed
        - all
        type: string
    EventType:
      description: Type of event, e.g UserDefinedProblemEvent
      in: query
      name: event_type
      schema:
        type: string
    UpdateTimeFrom:
      description: Events that were created or updated or closed between this time
        and update_time_to, in seconds
      in: query
      name: update_time_from
      schema:
        type: number
    UpdateTimeTo:
      description: Events that were created or updated or closed between update_time_from
        and this time, in seconds
      in: query
      name: update_time_to
      schema:
        type: number
    EventSeverityList:
      description: Event severity filter
      explode: true
      in: query
      name: event_severity
      schema:
        items:
          enum:
          - Critical
          - Warning
          - Moderate
          - Info
          type: string
        type: array
      style: form
    EventManagers:
      description: The entity ID of the manager of entity on which event is raised
      explode: true
      in: query
      name: managers
      schema:
        items:
          type: string
        type: array
      style: form
  schemas:
    UserCredential:
      example:
        password: password
        domain:
          domain_type: LDAP
          value: example.com
        username: admin@vrni.com
      properties:
        username:
          example: admin@vrni.com
          type: string
        password:
          example: password
          type: string
        domain:
          $ref: '#/components/schemas/Domain'
      type: object
    Domain:
      example:
        domain_type: LDAP
        value: example.com
      properties:
        domain_type:
          enum:
          - LDAP
          - LOCAL
          example: LDAP
          type: string
        value:
          description: domain value, not required for LOCAL domain
          example: example.com
          type: string
      type: object
    Token:
      example:
        expiry: 1605201960327
        token: Mgs2YX0ZSY+gHW6RYypeeA==
      properties:
        token:
          example: Mgs2YX0ZSY+gHW6RYypeeA==
          type: string
        expiry:
          description: expiry epoch time in secs.
          example: 1605201960327
          format: int64
          type: integer
      type: object
    VidmToken:
      example:
        vidm_token: vidm_token
      properties:
        vidm_token:
          description: User access token provided by VMware Identity Manager.
          type: string
      type: object
    VidmConfiguration:
      example:
        vidm_appliance: identity.domain.com
        sha_thumbprint: 15:37:48:1E:DB:70:65:80:B2:74:E5:78:25:E5:AD:39:14:53:69:19
        enable: true
        client_secret: T2zRetc2f242KhelfoO6Qzw9
        rootCA_certificate: '-----BEGIN CERTIFICATE----- ..etc..'
        client_id: vRealize Network Insight Client-ID
      properties:
        vidm_appliance:
          description: Provide fully quallified domain name of VMware Identity Manager
          example: identity.domain.com
          type: string
        rootCA_certificate:
          description: Provide rootCA certificate to trust. Can be generated using
            /vidm/licence
          example: '-----BEGIN CERTIFICATE----- ..etc..'
          type: string
        client_id:
          description: Register VMware vRealize Network Insight as an OAuth client
            to VMware Identity Manager and provide client-id
          example: vRealize Network Insight Client-ID
          type: string
        client_secret:
          description: Provide the registered OAuth client secret
          example: T2zRetc2f242KhelfoO6Qzw9
          type: string
        sha_thumbprint:
          description: Optionally, provide SHA thumbprint to validate VMware Identity
            Manager appliance that is being configured
          example: 15:37:48:1E:DB:70:65:80:B2:74:E5:78:25:E5:AD:39:14:53:69:19
          type: string
        enable:
          description: True, to enable the VMware Identity Manager integration in
            vRealize Network Insight
          example: true
          type: boolean
      type: object
    VidmCertificate:
      example:
        vidm_root_certificate: '-----BEGIN CERTIFICATE----- ..etc..'
      properties:
        vidm_root_certificate:
          description: Root certificate of the VIDM server
          example: '-----BEGIN CERTIFICATE----- ..etc..'
          type: string
      type: object
    VidmConfigResponse:
      example:
        vidm_appliance: identity.domain.com
        enable: true
        certificate_validation_enabled: false
        client_id: vRealize Network Insight Client-ID
      properties:
        vidm_appliance:
          description: Fully quallified domain name of VMware Identity Manager
          example: identity.domain.com
          type: string
        client_id:
          description: Client-id of the configured OAuth client
          example: vRealize Network Insight Client-ID
          type: string
        enable:
          description: True, if VMware Identity Manager integration is enabled
          example: true
          type: boolean
        certificate_validation_enabled:
          default: false
          description: True, if SSL certificate check is enabled.
          example: false
          type: boolean
      type: object
    VidmOauthClientResponse:
      example:
        vidm_appliance: identity.domain.com
        client_id: vRealize Network Insight Client-ID
      properties:
        vidm_appliance:
          description: Fully quallified domain name of VMware Identity Manager configured
            in vRealize Network Insight
          example: identity.domain.com
          type: string
        client_id:
          description: Client-id of the password grant OAuth client
          example: vRealize Network Insight Client-ID
          type: string
      type: object
    UserType:
      description: The type of user.
      enum:
      - LDAP
      - LOCAL
      - VIDM
      example: VIDM
      type: string
    UserGroupType:
      description: The type of user-group.
      enum:
      - LDAP
      - LOCAL
      - VIDM
      example: VIDM
      type: string
    Role:
      description: Role assigned the user/group.
      enum:
      - MEMBER
      - ADMIN
      - AUDITOR
      example: ADMIN
      type: string
    VidmUserRequest:
      example:
        username: alleymartin123
        domain: vidmlabs.com
        display_name: alley martin
        role: ADMIN
      properties:
        username:
          description: Provide username (domain should not be part of username).
          example: alleyMartin123
          type: string
        domain:
          description: Provide domain name to which user belongs to.
          example: vidmlabs.com
          type: string
        display_name:
          description: Provide user's display name (could be "givenName familyName")
          example: alley martin
          type: string
        role:
          $ref: '#/components/schemas/Role'
      type: object
    UserResponse:
      example:
        id: alleymartin123@vidmlabs.com
        user_type: VIDM
        username: alleymartin123
        domain: vidmlabs.com
        display_name: alley martin
        role: ADMIN
      properties:
        user_type:
          $ref: '#/components/schemas/UserType'
        id:
          description: Unique identifier assigned to user.
          example: alleymartin123@vidmlabs.com
          type: string
        role:
          $ref: '#/components/schemas/Role'
        username:
          description: Username of the user
          example: alleyMartin123
          type: string
        domain:
          description: Domain name to which group belongs to.
          example: vidmlabs.com
          type: string
        display_name:
          description: User's display name
          example: alley martin
          type: string
      type: object
    PagedUserListResponse:
      example:
        cursor: MTA=
        total_count: 101
        results:
        - id: alleymartin123@vidmlabs.com
          user_type: VIDM
          username: alleymartin123
          domain: vidmlabs.com
          display_name: alley martin
          role: ADMIN
        - id: alleymartin123@vidmlabs.com
          user_type: VIDM
          username: alleymartin123
          domain: vidmlabs.com
          display_name: alley martin
          role: ADMIN
      properties:
        results:
          items:
            $ref: '#/components/schemas/UserResponse'
          type: array
        cursor:
          example: MTA=
          type: string
        total_count:
          example: 101
          type: integer
      type: object
    VidmUserGroupRequest:
      example:
        group_name: testgroup
        domain: vidmlabs.com
        role: ADMIN
      properties:
        group_name:
          description: Specify group name (domain should not be part of group name).
          example: superAdmins
          type: string
        domain:
          description: Provide domain name to which user-group belongs to.
          example: vidmlabs.com
          type: string
        role:
          $ref: '#/components/schemas/Role'
      type: object
    UserGroupResponse:
      example:
        id: testgroup@vidmlabs.com
        group_type: VIDM
        group_name: testgroup
        domain: vidmlabs.com
        role: ADMIN
      properties:
        group_type:
          $ref: '#/components/schemas/UserGroupType'
        id:
          description: Unique identifier assigned to user-group.
          example: testgroup@vidmlabs.com
          type: string
        group_name:
          description: Group-name of the user-group.
          example: vrniAdmins
          type: string
        domain:
          description: Domain name to which user-group belongs to.
          example: vidmlabs.com
          type: string
        role:
          $ref: '#/components/schemas/Role'
      type: object
    PagedUserGroupListResponse:
      example:
        cursor: MTA=
        total_count: 1000
        results:
        - id: testgroup@vidmlabs.com
          group_type: VIDM
          group_name: testgroup
          domain: vidmlabs.com
          role: ADMIN
        - id: testgroup@vidmlabs.com
          group_type: VIDM
          group_name: testgroup
          domain: vidmlabs.com
          role: ADMIN
      properties:
        results:
          items:
            $ref: '#/components/schemas/UserGroupResponse'
          type: array
        cursor:
          example: MTA=
          type: string
        total_count:
          example: 1000
          type: integer
      type: object
    FileServerType:
      description: File Server type.
      enum:
      - LOCAL
      - SSH
      - FTP
      example: SSH
      type: string
    LocalFileServer:
      example:
        backup_directory: /home/testuser
        backup_file_name: vrni-backup-12-4-5.tar
      properties:
        backup_directory:
          description: Directory on file server to store/fetch backups
          example: /home/testuser
          type: string
        backup_file_name:
          description: filename of the backup to be restored (used during restore
            only)
          example: vrni-backup-12-4-5.tar
          type: string
      type: object
    SshFileServer:
      example:
        password: password
        backup_directory: /home/testuser
        port: 22
        server_address: 10.234.12.134
        backup_file_name: vrni-backup-12-4-5.tar
        username: testuser
      properties:
        server_address:
          description: IP address or hostname of destination SSH file server
          example: 10.234.12.134
          type: string
        port:
          description: File transfer port
          example: 22
          type: integer
        username:
          description: username to login ssh server
          example: testuser
          type: string
        password:
          description: password for the user to login ssh server
          example: password
          type: string
        backup_directory:
          description: directory on file server to store/fetch backups
          example: /home/testuser
          type: string
        backup_file_name:
          description: filename of the backup to be restored (used during restore
            only)
          example: vrni-backup-12-4-5.tar
          type: string
      type: object
    FtpFileServer:
      example:
        password: password
        backup_directory: /home/testuser
        port: 21
        server_address: 10.234.12.134
        backup_file_name: vrni-backup-12-4-5.tar
        username: testuser
      properties:
        server_address:
          description: IP address or hostname of destination FTP file server
          example: 10.234.12.134
          type: string
        port:
          description: File transfer port
          example: 21
          type: integer
        username:
          description: username to login FTP server
          example: testuser
          type: string
        password:
          description: password for the user to login FTP server
          example: password
          type: string
        backup_directory:
          description: directory on file server to store/fetch backups
          example: /home/testuser
          type: string
        backup_file_name:
          description: filename of the backup to be restored (used during restore
            only)
          example: vrni-backup-12-4-5.tar
          type: string
      type: object
    BackupSchedulePeriod:
      description: Backup Schedule period.
      enum:
      - DAILY
      - WEEKLY
      example: DAILY
      type: string
    BackupSchedule:
      example:
        hour: 12
        enable: true
        schedule_period: DAILY
        minute: 30
        day_of_week: 1
      properties:
        enable:
          default: true
          description: True, to enable scheduled backup
          type: boolean
        schedule_period:
          $ref: '#/components/schemas/BackupSchedulePeriod'
        minute:
          description: The minute at which backup needs to run (permitted values 0
            - 59)
          example: 30
          type: integer
        hour:
          description: The hour at which backup needs to run (permitted values 0 -
            23)
          example: 12
          type: integer
        day_of_week:
          description: The day of the week when backup to be scheduled (permitted
            values 1{Sunday} - 7{Saturday})
          example: 1
          type: integer
      type: object
    ConfigDataFilter:
      example:
        east_west_ip: true
        smtp: true
        web_proxy: true
        snmp: true
        syslog: true
        vidm: true
        user_data: true
        data_sources: true
        physical_subnet_vlan: true
        system_configuration: true
        physical_ip_dns_mapping: true
        ldap: true
        ceip_status: true
        audit_logs_pii_status: true
        north_south_ip: true
        data_management: true
        online_update_status: true
        events: true
      properties:
        snmp:
          default: true
          example: true
          type: boolean
        smtp:
          default: true
          example: true
          type: boolean
        web_proxy:
          default: true
          example: true
          type: boolean
        data_sources:
          default: true
          example: true
          type: boolean
        events:
          default: true
          example: true
          type: boolean
        syslog:
          default: true
          example: true
          type: boolean
        ldap:
          default: true
          example: true
          type: boolean
        vidm:
          default: true
          example: true
          type: boolean
        user_data:
          default: true
          example: true
          type: boolean
        physical_subnet_vlan:
          default: true
          example: true
          type: boolean
        physical_ip_dns_mapping:
          default: true
          example: true
          type: boolean
        system_configuration:
          default: true
          example: true
          type: boolean
        east_west_ip:
          default: true
          example: true
          type: boolean
        north_south_ip:
          default: true
          example: true
          type: boolean
        data_management:
          default: true
          example: true
          type: boolean
        online_update_status:
          default: true
          example: true
          type: boolean
        ceip_status:
          default: true
          example: true
          type: boolean
        audit_logs_pii_status:
          default: true
          example: true
          type: boolean
      type: object
    CollectorMapping:
      description: Mappings for source collector (backup setup) to destination collector
        (restore setup)
      example:
        mappings:
        - destination: 10.78.89.126
          source: 10.78.89.125
        - destination: 10.78.89.126
          source: 10.78.89.125
        default_collector: 10.78.89.125
      properties:
        default_collector:
          description: Default collector_VM ip-address for mapping data sources, if
            no other collector mapping provided explicitly
          example: 10.78.89.125
          type: string
        mappings:
          items:
            $ref: '#/components/schemas/ObjectMapping'
          type: array
      type: object
    ObjectMapping:
      example:
        destination: 10.78.89.126
        source: 10.78.89.125
      properties:
        source:
          description: Source object value
          example: 10.78.89.125
          type: string
        destination:
          description: Destination mapped value
          example: 10.78.89.126
          type: string
      type: object
    BackupRestoreRequest:
      example:
        ssh_file_server:
          password: password
          backup_directory: /home/testuser
          port: 22
          server_address: 10.234.12.134
          backup_file_name: vrni-backup-12-4-5.tar
          username: testuser
        backup_schedule:
          hour: 12
          enable: true
          schedule_period: DAILY
          minute: 30
          day_of_week: 1
        backup_file_server_type: SSH
        schedule_now: true
        local_file_server:
          backup_directory: /home/testuser
          backup_file_name: vrni-backup-12-4-5.tar
        ftp_file_server:
          password: password
          backup_directory: /home/testuser
          port: 21
          server_address: 10.234.12.134
          backup_file_name: vrni-backup-12-4-5.tar
          username: testuser
        collector_mapping:
          mappings:
          - destination: 10.78.89.126
            source: 10.78.89.125
          - destination: 10.78.89.126
            source: 10.78.89.125
          default_collector: 10.78.89.125
        data_filter:
          east_west_ip: true
          smtp: true
          web_proxy: true
          snmp: true
          syslog: true
          vidm: true
          user_data: true
          data_sources: true
          physical_subnet_vlan: true
          system_configuration: true
          physical_ip_dns_mapping: true
          ldap: true
          ceip_status: true
          audit_logs_pii_status: true
          north_south_ip: true
          data_management: true
          online_update_status: true
          events: true
      properties:
        data_filter:
          $ref: '#/components/schemas/ConfigDataFilter'
        backup_schedule:
          $ref: '#/components/schemas/BackupSchedule'
        backup_file_server_type:
          $ref: '#/components/schemas/FileServerType'
        local_file_server:
          $ref: '#/components/schemas/LocalFileServer'
        ssh_file_server:
          $ref: '#/components/schemas/SshFileServer'
        ftp_file_server:
          $ref: '#/components/schemas/FtpFileServer'
        schedule_now:
          default: false
          description: True, to run backup now (on demand)
          example: true
          type: boolean
        collector_mapping:
          $ref: '#/components/schemas/CollectorMapping'
      type: object
    BackupRestoreStatusResponse:
      example:
        failed_components:
        - failed_components
        - failed_components
        status_updated_timestamp: vrni_backup-10000-2020-12-15-13-00-40.tar
        backup_file_name: vrni_backup-10000-2020-12-15-13-00-40.tar
        status: IN_PROGRESS
      properties:
        status:
          description: Status of currently executing or last backup-restore job
          example: IN_PROGRESS
          type: string
        backup_file_name:
          description: File name of backup tar file
          example: vrni_backup-10000-2020-12-15-13-00-40.tar
          type: string
        status_updated_timestamp:
          description: TimeStamp of the last status update
          example: vrni_backup-10000-2020-12-15-13-00-40.tar
          type: string
        failed_components:
          description: List of components failed to backup or restore
          items:
            type: string
          type: array
      type: object
    WebProxyRequest:
      example:
        target_port: 161
        auth_type: Basic/NTLM
        password: admin
        use_credentials: true
        target_ip: 10.11.11.102
        user_name: admin
        nick_name: AWS web Proxy
        proxy_type: HTTP
      properties:
        nick_name:
          description: Descriptor or identifier for particular web proxy. It should
            be unique
          example: AWS web Proxy
          type: string
        target_ip:
          description: IP address of web Proxy server
          example: 10.11.11.102
          type: string
        target_port:
          description: Port number of web Proxy server
          example: 161
          type: integer
        proxy_type:
          description: Type of web Proxy being configured. [Permitted Values - HTTP/HTTPS]
          example: HTTP
          type: string
        auth_type:
          description: Type of authentication. [Permitted Values - Basic/NTLM]
          example: Basic/NTLM
          type: string
        use_credentials:
          description: Credentials required for this web proxy
          example: true
          type: boolean
        user_name:
          description: Username for web proxy authentication
          example: admin
          type: string
        password:
          description: Password for web proxy authentication
          example: admin
          type: string
      type: object
    WebProxyMigrationRequest:
      example:
        target_webproxy_id: web-proxy-er67ght8kn68
        source_webproxy_id: web-proxy-er67ght8kn67
      properties:
        source_webproxy_id:
          description: Identifier of web proxy which needs migration
          example: web-proxy-er67ght8kn67
          type: string
        target_webproxy_id:
          description: Identifier of web proxy to which entities connected to source_webproxy_id
            will be migrated
          example: web-proxy-er67ght8kn68
          type: string
      type: object
    ProxyListResponse:
      example:
        results:
        - target_port: 161
          connected_entities: 3
          auth_type: Basic/NTLM
          use_credentials: false
          target_ip: 10.11.11.102
          user_name: admin
          nick_name: AWS web Proxy
          is_modifiable: false
          proxy_id: web-proxy-er67ght8kn67
          proxy_type: HTTPS/HTTP
        - target_port: 161
          connected_entities: 3
          auth_type: Basic/NTLM
          use_credentials: false
          target_ip: 10.11.11.102
          user_name: admin
          nick_name: AWS web Proxy
          is_modifiable: false
          proxy_id: web-proxy-er67ght8kn67
          proxy_type: HTTPS/HTTP
      properties:
        results:
          items:
            $ref: '#/components/schemas/ProxyResponse'
          type: array
      type: object
    WebProxyConfigListForNodes:
      example:
        results:
        - web_nick_name: AWS web Proxy
          node_id: IGHYRTROOHNAMA123
          web_proxy_id: web-proxy-er67ght8kn67
        - web_nick_name: AWS web Proxy
          node_id: IGHYRTROOHNAMA123
          web_proxy_id: web-proxy-er67ght8kn67
      properties:
        results:
          items:
            $ref: '#/components/schemas/WebProxyConfigForNode'
          type: array
      type: object
    ProxyResponse:
      example:
        target_port: 161
        connected_entities: 3
        auth_type: Basic/NTLM
        use_credentials: false
        target_ip: 10.11.11.102
        user_name: admin
        nick_name: AWS web Proxy
        is_modifiable: false
        proxy_id: web-proxy-er67ght8kn67
        proxy_type: HTTPS/HTTP
      properties:
        proxy_id:
          description: Entity Identifier for a web proxy server
          example: web-proxy-er67ght8kn67
          type: string
        nick_name:
          description: Descriptor or identifier for particular web proxy.
          example: AWS web Proxy
          type: string
        target_ip:
          description: IP address of web Proxy server
          example: 10.11.11.102
          type: string
        target_port:
          description: Port number of web Proxy server
          example: 161
          type: integer
        connected_entities:
          description: Number of connected entities to a web proxy
          example: 3
          type: integer
        proxy_type:
          description: Type of web proxy
          example: HTTPS/HTTP
          type: string
        auth_type:
          description: Type of authentication
          example: Basic/NTLM
          type: string
        use_credentials:
          description: Whether credentials were used earlier when web proxy was configured
          example: false
          type: boolean
        user_name:
          description: Username of the authenticated web proxy
          example: admin
          type: string
        is_modifiable:
          description: Can the web proxy be edited or deleted from the UI
          example: false
          type: boolean
      type: object
    EntityUsingOrBehindWebProxyList:
      example:
        results:
        - identifier: 10.98.101.59
          entity_type: DataSource
          name: vcenter
          entity_id: 10000:1:15332641552
        - identifier: 10.98.101.59
          entity_type: DataSource
          name: vcenter
          entity_id: 10000:1:15332641552
      properties:
        results:
          items:
            $ref: '#/components/schemas/EntityUsingOrBehindWebProxyResponse'
          type: array
      type: object
    EntityUsingOrBehindWebProxyResponse:
      example:
        identifier: 10.98.101.59
        entity_type: DataSource
        name: vcenter
        entity_id: 10000:1:15332641552
      properties:
        entity_id:
          description: Entity ID for a connected client
          example: 10000:1:15332641552
          type: string
        entity_type:
          description: Type of Entity
          example: DataSource
          type: string
        name:
          description: Name of connected client
          example: vcenter
          type: string
        identifier:
          description: Identifier/AccessKey/IP Adress of connected client
          example: 10.98.101.59
          type: string
      type: object
    ValidateConnectionViaWebProxyResponseList:
      example:
        results:
        - null
        - null
      properties:
        results:
          items:
            $ref: '#/components/schemas/ValidateConnectionViaWebProxyResponse'
          type: array
      type: object
    ValidateConnectionViaWebProxyResponse:
      allOf:
      - $ref: '#/components/schemas/EntityUsingOrBehindWebProxyResponse'
      - $ref: '#/components/schemas/ValidateConnectionViaWebProxyResponse_allOf'
    ProxyProfileIdResponse:
      example:
        proxy_id: web-proxy-er67ght8kn67
      properties:
        proxy_id:
          description: Entity Identifier created for the newly configured web proxy
            server
          example: web-proxy-er67ght8kn67
          type: string
      type: object
    WebProxyConfigForNode:
      example:
        web_nick_name: AWS web Proxy
        node_id: IGHYRTROOHNAMA123
        web_proxy_id: web-proxy-er67ght8kn67
      properties:
        node_id:
          description: vRNI Node Identifier (Collector or Platform)
          example: IGHYRTROOHNAMA123
          type: string
        web_proxy_id:
          description: Entity Identifier for a web proxy server
          example: web-proxy-er67ght8kn67
          type: string
        web_nick_name:
          description: Descriptor or identifier for particular web proxy.
          example: AWS web Proxy
          type: string
      type: object
    SnmpProfileRequest:
      example:
        target_port: 161
        target_ip: 10.11.11.102
        nick_name: AWS SNMP collector profile
        snmp_v3:
          authentication_password: VMware1!
          privacy_type: AES256
          context_name: default
          privacy_password: VMware1!
          authentication_type: MD5
          username: readonly
        snmp_v2c:
          community_string: public
        snmp_version: v2c
      properties:
        nick_name:
          description: Descriptor or identifier for particular SNMP profile.
          example: AWS SNMP collector profile
          type: string
        target_ip:
          description: IP address of SNMP target destination
          example: 10.11.11.102
          type: string
        target_port:
          description: Receiving port number of SNMP target destination
          example: 161
          type: integer
        snmp_version:
          enum:
          - v2c
          - v3
          type: string
        snmp_v2c:
          $ref: '#/components/schemas/SNMP2cConfig'
        snmp_v3:
          $ref: '#/components/schemas/SNMP3Config'
      type: object
    TestSnmpProfileResponse:
      example:
        message: Failed sending SNMP trap
        status: true
      properties:
        status:
          description: Test trap sent successfully or not
          example: true
          type: boolean
        message:
          description: Test SNMP trap status message
          example: Failed sending SNMP trap
          type: string
      type: object
    SnmpProfileResponse:
      example:
        target_port: 161
        target_ip: 10.11.11.102
        nick_name: AWS SNMP collector profile
        snmp_v3:
          authentication_password: VMware1!
          privacy_type: AES256
          context_name: default
          privacy_password: VMware1!
          authentication_type: MD5
          username: readonly
        snmp_v2c:
          community_string: public
        snmp_version: v2c
        entity_id: snmp-er67ght8kn67
      properties:
        entity_id:
          description: Entity Identifier for SNMP profile.
          example: snmp-er67ght8kn67
          type: string
        nick_name:
          description: User defined descriptor or identifier for particular SNMP profile.
          example: AWS SNMP collector profile
          type: string
        target_ip:
          description: IP address of SNMP target destination
          example: 10.11.11.102
          type: string
        target_port:
          description: Receiving port number of SNMP target destination
          example: 161
          type: integer
        snmp_version:
          enum:
          - v2c
          - v3
          type: string
        snmp_v2c:
          $ref: '#/components/schemas/SNMP2cConfig'
        snmp_v3:
          $ref: '#/components/schemas/SNMP3Config'
      type: object
    SnmpProfileListResponse:
      example:
        total_count: 5
        results:
        - target_port: 161
          target_ip: 10.11.11.102
          nick_name: AWS SNMP collector profile
          snmp_v3:
            authentication_password: VMware1!
            privacy_type: AES256
            context_name: default
            privacy_password: VMware1!
            authentication_type: MD5
            username: readonly
          snmp_v2c:
            community_string: public
          snmp_version: v2c
          entity_id: snmp-er67ght8kn67
        - target_port: 161
          target_ip: 10.11.11.102
          nick_name: AWS SNMP collector profile
          snmp_v3:
            authentication_password: VMware1!
            privacy_type: AES256
            context_name: default
            privacy_password: VMware1!
            authentication_type: MD5
            username: readonly
          snmp_v2c:
            community_string: public
          snmp_version: v2c
          entity_id: snmp-er67ght8kn67
      properties:
        results:
          items:
            $ref: '#/components/schemas/SnmpProfileResponse'
          type: array
        total_count:
          example: 5
          type: integer
      type: object
    SnmpProfileIds:
      example:
        snmp_profiles:
        - snmp_profiles
        - snmp_profiles
      properties:
        snmp_profiles:
          items:
            type: string
          type: array
      type: object
    VCenterDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/VCenterDataSource_allOf'
    BaseDataSource:
      discriminator:
        propertyName: entity_type
      properties:
        entity_id:
          description: Internal ID of data source, to be used in subsequent API calls
          type: string
        entity_type:
          $ref: '#/components/schemas/DataSourceType'
        ip:
          description: IP address of data source (use either IP or FQDN, not both)
          example: 192.168.10.1
          type: string
        fqdn:
          description: Hostname of data source (use either IP or FQDN, not both)
          example: your.domain.com
          type: string
        proxy_id:
          description: ID of Collector VM which should register this vcenter
          example: 1000:104:12313412
          type: string
        nickname:
          description: A friendly nickname for the data source
          example: vc1
          type: string
        enabled:
          default: true
          description: Whether or not data collection is enabled
          type: boolean
        notes:
          description: Room for notes or comments about the data source
          example: Located in DC1
          type: string
      type: object
    ContainerBaseDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/ContainerBaseDataSource_allOf'
    BaseDataSourceRequest:
      properties:
        ip:
          description: IP address of data source (use either IP or FQDN, not both)
          example: 192.168.10.1
          type: string
        fqdn:
          description: Hostname of data source (use either IP or FQDN, not both)
          example: your.domain.com
          type: string
        proxy_id:
          description: ID of Collector VM which should register this vcenter
          example: 1000:104:12313412
          type: string
        nickname:
          description: A friendly nickname for the data source
          example: vc1
          type: string
        enabled:
          default: true
          description: Whether or not data collection is enabled
          type: boolean
        notes:
          description: Room for notes or comments about the data source
          example: Located in DC1
          type: string
      required:
      - nickname
      - proxy_id
      type: object
    PKSSourceRequest:
      properties:
        ip:
          description: IP address of data source (use either IP or FQDN, not both)
          example: 192.168.10.1
          type: string
        fqdn:
          description: Hostname of data source (use either IP or FQDN, not both)
          example: your.domain.com
          type: string
        proxy_id:
          description: ID of Collector VM which should register this vcenter
          example: 1000:104:12313412
          type: string
        nickname:
          description: A friendly nickname for the data source
          example: TKGI-1
          type: string
        enabled:
          default: true
          description: Whether or not data collection is enabled
          type: boolean
        notes:
          description: Room for notes or comments about the data source
          example: Located in DC1
          type: string
        manager_id:
          type: string
      required:
      - nickname
      - proxy_id
      type: object
    KubernetesSourceRequest:
      properties:
        proxy_id:
          description: ID of Collector VM which should register this vcenter
          example: 1000:104:12313412
          type: string
        nickname:
          description: A friendly nickname for the data source
          example: vc1
          type: string
        enabled:
          default: true
          description: Whether or not data collection is enabled
          type: boolean
        notes:
          description: Room for notes or comments about the data source
          example: Located in DC1
          type: string
      required:
      - nickname
      - proxy_id
      type: object
    ServiceNowSourceRequest:
      properties:
        proxy_id:
          description: ID of Collector VM which should register this vcenter
          example: 1000:104:12313412
          type: string
        nickname:
          description: A friendly nickname for the data source
          example: snow1
          type: string
        enabled:
          default: true
          description: Whether or not data collection is enabled
          type: boolean
        notes:
          description: Room for notes or comments about the data source
          example: Located in DC1
          type: string
      required:
      - nickname
      - proxy_id
      type: object
    VCenterDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/VCenterDataSource_allOf'
    PasswordCredentials:
      properties:
        username:
          description: Username to authenticate with
          example: readonly
          type: string
        password:
          description: Password to authenticate with
          example: VMware1!
          type: string
      required:
      - username
      type: object
    AzureCredentials:
      properties:
        azure_client:
          description: Azure Application Client ID to authenticate with
          example: 53ba6f2b-6d52-4f5c-8ae0-7adc20808854
          type: string
        azure_key:
          description: Azure Application Secret Key to authenticate with
          example: NMubGVcDqkwwGnCs6fa01tqlkTisfUd4pBBYgcxxx=
          type: string
        azure_tenant:
          description: Azure Application Tenant ID to authenticate against
          example: b98531cb-75cc-4b4a-1ba6-fe87q98662f0
          type: string
        azure_subscription:
          description: Azure Application Subscription ID to authenticate against
          example: b98531cb-75cc-4b4a-1ba6-fe87q98662f0
          type: string
      required:
      - azure_client
      - azure_subscription
      - azure_tenant
      type: object
    AWSCredentials:
      properties:
        access_key:
          description: AWS Access Key to authenticate with
          example: AKIAIOSFODNN7EXAMPLE
          type: string
        secret_key:
          description: AWS Secret Key to authenticate with
          example: wJalrXUtnFEMI/K7MDENG/bPxRfiCYEXAMPLEKEY
          type: string
      required:
      - access_key
      type: object
    K8SCredentials:
      properties:
        kubeconfig:
          description: Configuration used to connect to Kubernetes. Can be found in
            ~/.kube/config
          example: ""
          type: string
      required:
      - kubeconfig
      type: object
    AristaSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    JuniperSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    GDDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    F5BIGIPDataSource:
      allOf:
      - $ref: '#/components/schemas/GDDataSource'
    NSXALBDataSource:
      allOf:
      - $ref: '#/components/schemas/GDDataSource'
    HuaweiSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/GDDataSource'
    HPESwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/GDDataSource'
    MellanoxSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/GDDataSource'
    CiscoASRXRSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/GDDataSource'
    GenericSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
    CiscoSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
      - $ref: '#/components/schemas/CiscoSwitchDataSource_allOf'
    DellSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
      - $ref: '#/components/schemas/DellSwitchDataSource_allOf'
    BrocadeSwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    UCSManagerDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    CiscoACIDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    HPVCManagerDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    HPOneViewManagerDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    UCSManagerDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    CiscoACIDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    HPVCManagerDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    HPOneViewManagerDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    SwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/SwitchDataSourceRequest_allOf'
    SwitchDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/SwitchDataSourceRequest_allOf'
    CiscoSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
      - $ref: '#/components/schemas/CiscoSwitchDataSource_allOf'
    JuniperSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
    GDDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
    F5BIGIPDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/GDDataSourceRequest'
    NSXALBDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/GDDataSourceRequest'
    HuaweiSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/GDDataSourceRequest'
    HPESwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/GDDataSourceRequest'
    MellanoxSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/GDDataSourceRequest'
    CiscoASRXRSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/GDDataSourceRequest'
    GenericSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
    AristaSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
    BrocadeSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
    DellSwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
      - $ref: '#/components/schemas/DellSwitchDataSource_allOf'
    DellOs10SwitchDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
    CiscoSwitchType:
      description: The Cisco switch model type
      enum:
      - CATALYST_3000
      - CATALYST_4500
      - CATALYST_6500
      - NEXUS_5K
      - NEXUS_6K
      - NEXUS_7K
      - NEXUS_9K
      - CISCOASRISR
      example: NEXUS_6K
      type: string
    DellSwitchType:
      description: The Dell switch model type
      enum:
      - FORCE_10_MXL_10
      - POWERCONNECT_8024
      - S4048
      - Z9100
      - S6000
      example: S4048
      type: string
    CheckpointFirewallDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    PanFirewallDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    CheckpointFirewallDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
    PanFirewallDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
    NSXVManagerDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/NSXVManagerDataSource_allOf'
    FortinetFirewallDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    FortinetFirewallDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSourceRequest'
    NSXTManagerDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
      - $ref: '#/components/schemas/NSXTManagerDataSource_allOf'
    PKSDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/PKSDataSource_allOf'
    KubernetesDataSource:
      allOf:
      - $ref: '#/components/schemas/ContainerBaseDataSource'
    AzureDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/AzureDataSource_allOf'
    ServiceNowDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
      - $ref: '#/components/schemas/ServiceNowDataSource_allOf'
    InfobloxManagerDataSource:
      allOf:
      - $ref: '#/components/schemas/SwitchDataSource'
    PolicyManagerDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/PolicyManagerDataSource_allOf'
    VeloCloudDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/VeloCloudDataSource_allOf'
    AWSDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/AWSDataSource_allOf'
    NSXControllerDataCollection:
      example:
        enabled: false
        controller_password: controller_password
      properties:
        enabled:
          default: false
          description: Whether or not to collect data from the NSX-v Controller Cluster
          type: boolean
        controller_password:
          description: Controller Password
          type: string
      type: object
    NSXVManagerDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/NSXVManagerDataSourceRequest_allOf'
    PKSDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/PKSDataSourceRequest_allOf'
    NSXTManagerDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/NSXTManagerDataSourceRequest_allOf'
    KubernetesDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/KubernetesSourceRequest'
      - $ref: '#/components/schemas/KubernetesDataSourceRequest_allOf'
    AzureDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/AzureDataSourceRequest_allOf'
    VeloCloudDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/VeloCloudDataSourceRequest_allOf'
    ServiceNowDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/ServiceNowSourceRequest'
      - $ref: '#/components/schemas/ServiceNowDataSourceRequest_allOf'
    InfobloxManagerDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/InfobloxManagerDataSourceRequest_allOf'
    PolicyManagerDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/PolicyManagerDataSourceRequest_allOf'
    DatasourceHealth:
      description: Datasource Health state
      properties:
        health_status:
          description: Is the data source healthy and data is being collected?
          enum:
          - HEALTHY
          - HEALTHY_WITH_WARNINGS
          - UNHEALTHY
          example: HEALTH
          type: string
        health_message:
          description: Message for when the data source is not healthy
          example: Invalid credentials
          type: string
        health_error_code:
          type: string
      type: object
    SNMPConfig:
      example:
        config_snmp_2c:
          community_string: public
        snmp_enabled: true
        snmp_version: v2c
        config_snmp_3:
          authentication_password: VMware1!
          privacy_type: AES256
          context_name: default
          privacy_password: VMware1!
          authentication_type: MD5
          username: readonly
      properties:
        snmp_enabled:
          default: false
          description: Enable SNMP stats collection?
          example: true
          type: boolean
        snmp_version:
          description: SNMP version to use
          enum:
          - v2c
          - v3
          example: v2c
          type: string
        config_snmp_2c:
          $ref: '#/components/schemas/SNMP2cConfig'
        config_snmp_3:
          $ref: '#/components/schemas/SNMP3Config'
      type: object
    SNMP3Config:
      example:
        authentication_password: VMware1!
        privacy_type: AES256
        context_name: default
        privacy_password: VMware1!
        authentication_type: MD5
        username: readonly
      properties:
        username:
          description: SNMPv3 Username
          example: readonly
          type: string
        context_name:
          description: SNMPv3 Context name
          example: default
          type: string
        authentication_type:
          description: SNMPv3 Authentication type
          enum:
          - NO_AUTH
          - MD5
          - SHA
          example: MD5
          type: string
        authentication_password:
          description: SNMPv3 Authentication password
          example: VMware1!
          type: string
        privacy_type:
          description: SNMPv3 Privacy password type
          enum:
          - AES
          - DES
          - AES128
          - AES192
          - AES256
          - 3DES
          - NO_PRIV
          example: AES256
          type: string
        privacy_password:
          description: SNMPv3 Pricacy password
          example: VMware1!
          type: string
      type: object
    SNMP2cConfig:
      example:
        community_string: public
      properties:
        community_string:
          description: SNMPv2 Community string
          example: public
          type: string
      type: object
    EntityId:
      example:
        entity_type: VirtualMachine
        entity_id: 1000:104:12213212
      properties:
        entity_id:
          description: Entity Identifier
          example: 1000:104:12213212
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
      type: object
    EntityPair:
      example:
        dst_entity_id: 1000:104:56789
        src_entity_id: 1000:104:12213212
        src_entity_type: VirtualMachine
        dst_entity_type: VirtualMachine
      properties:
        src_entity_id:
          description: Source Entity Identifier
          example: 1000:104:12213212
          type: string
        src_entity_type:
          $ref: '#/components/schemas/EntityType'
        dst_entity_id:
          description: Destination Entity Identifier
          example: 1000:104:56789
          type: string
        dst_entity_type:
          $ref: '#/components/schemas/EntityType'
      type: object
    DataSourceEntityId:
      example:
        entity_id: 1000:104:12213212
      properties:
        entity_id:
          description: Entity Identifier
          example: 1000:104:12213212
          type: string
        entity_type:
          $ref: '#/components/schemas/DataSourceType'
      type: object
    FetchRequest:
      example:
        entity_ids:
        - entity_type: VirtualMachine
          time: 0
          entity_id: entity_id
        - entity_type: VirtualMachine
          time: 0
          entity_id: entity_id
      properties:
        entity_ids:
          items:
            $ref: '#/components/schemas/FetchRequest_entity_ids'
          type: array
      type: object
    EntityIdWithTime:
      example:
        entity_type: VirtualMachine
        time: 0
        entity_id: entity_id
      properties:
        entity_id:
          description: Entity Identifier
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        time:
          format: int64
          type: integer
      type: object
    EC2Instance:
      allOf:
      - $ref: '#/components/schemas/BaseVirtualMachine'
      - $ref: '#/components/schemas/EC2Instance_allOf'
    AzureVM:
      allOf:
      - $ref: '#/components/schemas/BaseVirtualMachine'
      - $ref: '#/components/schemas/AzureVM_allOf'
    VirtualMachine:
      allOf:
      - $ref: '#/components/schemas/BaseVirtualMachine'
      - $ref: '#/components/schemas/VirtualMachine_allOf'
    BaseVirtualMachine:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/BaseVirtualMachine_allOf'
    Cluster:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/Cluster_allOf'
    SecurityTag:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/SecurityTag_allOf'
    ResourcePool:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/ResourcePool_allOf'
    Host:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/Host_allOf'
    DistributedVirtualPortgroup:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/DistributedVirtualPortgroup_allOf'
    DistributedVirtualSwitch:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/DistributedVirtualSwitch_allOf'
    VCDatacenter:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/VCDatacenter_allOf'
    Datastore:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/VCDatacenter_allOf'
    KubernetesService:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/KubernetesService_allOf'
    Folder:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/VCDatacenter_allOf'
    Reference:
      example:
        entity_type: VirtualMachine
        entity_id: entity_id
      properties:
        entity_id:
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
      type: object
    IpV4Address:
      properties:
        ip_address:
          type: string
        netmask:
          type: string
        network_address:
          type: string
      type: object
    Vmknic:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/Vmknic_allOf'
    EC2NetworkInterface:
      allOf:
      - $ref: '#/components/schemas/BaseVnic'
    Vnic:
      allOf:
      - $ref: '#/components/schemas/BaseVnic'
    BaseVnic:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/BaseVnic_allOf'
    VxlanLayer2Network:
      allOf:
      - $ref: '#/components/schemas/BaseL2Network'
      - $ref: '#/components/schemas/VxlanLayer2Network_allOf'
    VlanL2Network:
      allOf:
      - $ref: '#/components/schemas/BaseL2Network'
      - $ref: '#/components/schemas/VlanL2Network_allOf'
    BaseL2Network:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/BaseL2Network_allOf'
    Vlan:
      properties:
        begin:
          type: integer
          x-searchable: true
        end:
          type: integer
      type: object
    NSXTIPSet:
      allOf:
      - $ref: '#/components/schemas/BaseIPSet'
      - $ref: '#/components/schemas/NSXTIPSet_allOf'
    NSXIPSet:
      allOf:
      - $ref: '#/components/schemas/BaseIPSet'
      - $ref: '#/components/schemas/NSXIPSet_allOf'
    EC2IPSet:
      allOf:
      - $ref: '#/components/schemas/BaseIPSet'
    BaseIPSet:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/BaseIPSet_allOf'
    IpAddressRange:
      example:
        start_ip: start_ip
        end_ip: end_ip
      properties:
        start_ip:
          type: string
        end_ip:
          type: string
      type: object
    IpNumericRange:
      properties:
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
      type: object
    SddcType:
      enum:
      - ONPREM
      - VMC
      type: string
    NSXPolicyGroup:
      allOf:
      - $ref: '#/components/schemas/BaseSecurityGroup'
      - $ref: '#/components/schemas/NSXPolicyGroup_allOf'
    NSGroup:
      allOf:
      - $ref: '#/components/schemas/BaseSecurityGroup'
      - $ref: '#/components/schemas/NSGroup_allOf'
    NSXSecurityGroup:
      allOf:
      - $ref: '#/components/schemas/BaseSecurityGroup'
      - $ref: '#/components/schemas/NSXSecurityGroup_allOf'
    EC2SecurityGroup:
      allOf:
      - $ref: '#/components/schemas/BaseSecurityGroup'
      - $ref: '#/components/schemas/EC2SecurityGroup_allOf'
    AzureASG:
      allOf:
      - $ref: '#/components/schemas/BaseSecurityGroup'
      - $ref: '#/components/schemas/AzureASG_allOf'
    BaseSecurityGroup:
      allOf:
      - $ref: '#/components/schemas/Group'
      - $ref: '#/components/schemas/BaseSecurityGroup_allOf'
    RuleSet:
      properties:
        rules:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        firewall:
          $ref: '#/components/schemas/Reference'
        rule_set_type:
          enum:
          - NSX_STANDARD
          - NSX_REDIRECT
          - AWS_STANDARD
          - NSXT_EDGE_FIREWALL
          - ACCESS_RULE
          - POLICYMANAGER_EMERGENCY_TYPE
          - POLICYMANAGER_INFRASTRUCTURE_TYPE
          - POLICYMANAGER_ENVIRONMENT_TYPE
          - POLICYMANAGER_APPLICATION_TYPE
          - POLICYMANAGER_ETHERNET_TYPE
          type: string
      type: object
    AppliedTo:
      properties:
        referred_entity:
          $ref: '#/components/schemas/EntityId'
        name:
          type: string
        value:
          type: string
        vendor_type:
          type: string
      type: object
    BaseFirewallRule:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/BaseFirewallRule_allOf'
    NSXFirewallRule:
      allOf:
      - $ref: '#/components/schemas/BaseFirewallRule'
      - $ref: '#/components/schemas/NSXFirewallRule_allOf'
    NSXTFirewallRule:
      allOf:
      - $ref: '#/components/schemas/NSXFirewallRule'
      - $ref: '#/components/schemas/NSXTFirewallRule_allOf'
    PolicyManagerFirewallRule:
      allOf:
      - $ref: '#/components/schemas/BaseFirewallRule'
      - $ref: '#/components/schemas/NSXPolicyGroup_allOf'
    NSXRedirectRule:
      allOf:
      - $ref: '#/components/schemas/BaseFirewallRule'
      - $ref: '#/components/schemas/NSXRedirectRule_allOf'
    CheckpointFirewallRule:
      allOf:
      - $ref: '#/components/schemas/BaseGenericFirewallRule'
    BaseGenericFirewallRule:
      allOf:
      - $ref: '#/components/schemas/BaseFirewallRule'
      - $ref: '#/components/schemas/BaseGenericFirewallRule_allOf'
    EC2SGFirewallRule:
      allOf:
      - $ref: '#/components/schemas/BaseFirewallRule'
      - $ref: '#/components/schemas/EC2SGFirewallRule_allOf'
    AzureNSGRule:
      allOf:
      - $ref: '#/components/schemas/BaseFirewallRule'
      - $ref: '#/components/schemas/AzureNSGRule_allOf'
    EC2FirewallDirection:
      enum:
      - INBOUND
      - OUTBOUND
      type: string
    FirewallDirection:
      enum:
      - IN
      - OUT
      - INOUT
      type: string
    FirewallAction:
      enum:
      - ALLOW
      - ACCEPT
      - DENY
      - DROP
      - REJECT
      - REDIRECT
      - DO_NOT_REDIRECT
      type: string
    TopTalkerSortEnum:
      enum:
      - FLOW_VOLUME
      - FLOW_COUNT
      - TRAFFIC_RATE
      - SESSION_COUNT
      type: string
    AppFlowPropEnum:
      enum:
      - FLOW_COUNT
      - UNPROTECTED_FLOWS
      - DROPPED_FLOWS
      - INTERNET_FLOWS
      type: string
    AppFlowMetricEnum:
      enum:
      - INCOMING_VOLUME
      - OUTGOING_VOLUME
      type: string
    Group:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/Group_allOf'
    VCenterManager:
      allOf:
      - $ref: '#/components/schemas/BaseManager'
      - $ref: '#/components/schemas/VCenterManager_allOf'
    NSXPolicyManager:
      allOf:
      - $ref: '#/components/schemas/BaseNSXManager'
      - $ref: '#/components/schemas/NSXPolicyManager_allOf'
    NSXTManager:
      allOf:
      - $ref: '#/components/schemas/BaseNSXManager'
      - $ref: '#/components/schemas/NSXTManager_allOf'
    NSXVManager:
      allOf:
      - $ref: '#/components/schemas/BaseNSXManager'
      - $ref: '#/components/schemas/NSXVManager_allOf'
    BaseNSXManager:
      allOf:
      - $ref: '#/components/schemas/BaseManager'
    CheckpointMDSManager:
      allOf:
      - $ref: '#/components/schemas/BaseFirewallManager'
    CheckpointManager:
      allOf:
      - $ref: '#/components/schemas/BaseFirewallManager'
    BaseFirewallManager:
      allOf:
      - $ref: '#/components/schemas/BaseManager'
      - $ref: '#/components/schemas/BaseFirewallManager_allOf'
    BaseManager:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
    Flow:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/Flow_allOf'
    FlowTag:
      enum:
      - TAG_TRAFFIC_TYPE_UNKNOWN
      - TAG_INTERNET_TRAFFIC
      - TAG_EAST_WEST_TRAFFIC
      - TAG_VM_VM_TRAFFIC
      - TAG_VM_PHY_TRAFFIC
      - TAG_PHY_PHY_TRAFFIC
      - TAG_SRC_IP_VMKNIC
      - TAG_DST_IP_VMKNIC
      - TAG_SRC_IP_VM
      - TAG_DST_IP_VM
      - TAG_SRC_IP_INTERNET
      - TAG_DST_IP_INTERNET
      - TAG_SRC_IP_PHYSICAL
      - TAG_DST_IP_PHYSICAL
      - TAG_SAME_HOST
      - TAG_DIFF_HOST
      - TAG_SHARED_SERVICE
      - TAG_NOT_SHARED_SERVICE
      - TAG_NETWORK_SWITCHED
      - TAG_NETWORK_ROUTED
      - TAG_NETWORK_UNKNOWN
      - TAG_SRC_IP_VTEP
      - TAG_DST_IP_VTEP
      - TAG_UNICAST
      - TAG_BROADCAST
      - TAG_MULTICAST
      - TAG_SRC_IP_LINK_LOCAL
      - TAG_DST_IP_LINK_LOCAL
      - TAG_SRC_IP_CLASS_E
      - TAG_DST_IP_CLASS_E
      - TAG_SRC_IP_CLASS_A_RESERVED
      - TAG_DST_IP_CLASS_A_RESERVED
      - TAG_INVALID_IP_PACKETS
      - TAG_NOT_ANALYZED
      - TAG_GENERIC_INTERNET_SRC_IP
      - TAG_SNAT_DNAT_FLOW
      - TAG_MULTINICS
      - TAG_SRC_VC
      - TAG_DST_VC
      - TAG_SRC_AWS
      - TAG_DST_AWS
      - TAG_WITHIN_DC
      - TAG_DIFF_DC
      - TAG_WITHIN_VPC
      - TAG_DIFF_VPC
      - TAG_WITHIN_VNET
      - TAG_DIFF_VNET
      - TAG_SRC_AZURE
      - TAG_DST_AZURE
      type: string
    Protocol:
      enum:
      - TCP
      - UDP
      - OTHER
      type: string
    FlowTrafficType:
      enum:
      - INTERNET_TRAFFIC
      - EAST_WEST_TRAFFIC
      type: string
    ScopeEnum:
      enum:
      - UNIVERSAL
      - GLOBAL
      - LOCAL
      type: string
    PortRange:
      properties:
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
        display:
          type: string
        iana_name:
          type: string
        iana_port_display:
          type: string
      type: object
    SimplePortRange:
      example:
        start: 0
        end: 6
      properties:
        start:
          format: int32
          type: integer
        end:
          format: int32
          type: integer
      type: object
    NSService:
      allOf:
      - $ref: '#/components/schemas/BaseService'
      - $ref: '#/components/schemas/NSService_allOf'
    NSXService:
      allOf:
      - $ref: '#/components/schemas/BaseService'
      - $ref: '#/components/schemas/NSXService_allOf'
    BaseService:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/BaseService_allOf'
    EC2Service:
      allOf:
      - $ref: '#/components/schemas/BaseService'
    NSServiceGroup:
      allOf:
      - $ref: '#/components/schemas/BaseServiceGroup'
      - $ref: '#/components/schemas/NSService_allOf'
    NSXServiceGroup:
      allOf:
      - $ref: '#/components/schemas/BaseServiceGroup'
      - $ref: '#/components/schemas/NSXServiceGroup_allOf'
    BaseServiceGroup:
      allOf:
      - $ref: '#/components/schemas/Group'
    VPC:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/VPC_allOf'
    CloudNetwork:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/CloudNetwork_allOf'
    NSXDistributedFirewall:
      allOf:
      - $ref: '#/components/schemas/BaseFirewall'
      - $ref: '#/components/schemas/NSXDistributedFirewall_allOf'
    EC2Firewall:
      allOf:
      - $ref: '#/components/schemas/BaseFirewall'
    AzureNSG:
      allOf:
      - $ref: '#/components/schemas/BaseFirewall'
      - $ref: '#/components/schemas/NSXDistributedFirewall_allOf'
    NSXTFirewall:
      allOf:
      - $ref: '#/components/schemas/BaseFirewall'
      - $ref: '#/components/schemas/NSXDistributedFirewall_allOf'
    PolicyManagerFirewall:
      allOf:
      - $ref: '#/components/schemas/BaseFirewall'
      - $ref: '#/components/schemas/PolicyManagerFirewall_allOf'
    CheckpointFirewall:
      allOf:
      - $ref: '#/components/schemas/BaseGenericFirewall'
    BaseGenericFirewall:
      allOf:
      - $ref: '#/components/schemas/BaseFirewall'
    BaseFirewall:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/BaseFirewall_allOf'
    SearchRequest:
      example:
        filter: filter
        cursor: cursor
        size: 0
        time_range:
          start_time: 1597247025
          end_time: 1597247999
        sort_by:
          field: field
          order: ASC
      properties:
        entity_type:
          $ref: '#/components/schemas/AllEntityType'
        filter:
          description: query filter
          type: string
        sort_by:
          $ref: '#/components/schemas/SortByClause'
        size:
          format: int32
          type: integer
        cursor:
          type: string
        time_range:
          $ref: '#/components/schemas/TimeRange'
      type: object
    SortByClause:
      example:
        field: field
        order: ASC
      properties:
        field:
          type: string
        order:
          enum:
          - ASC
          - DESC
          type: string
      type: object
    TimeRange:
      example:
        start_time: 1597247025
        end_time: 1597247999
      properties:
        start_time:
          description: Start timestamp of the window of the objects returned
          example: 1597247025
          format: int64
          type: integer
        end_time:
          description: End timestamp of the window of the objects returned
          example: 1597247999
          format: int64
          type: integer
      type: object
    IncludeExternal:
      default: false
      type: boolean
    AggregateOrderByClause:
      properties:
        field:
          type: string
        aggregation_type:
          enum:
          - SUM
          - MIN
          - MAX
          - AVG
          type: string
        order:
          enum:
          - ASC
          - DESC
          type: string
      type: object
    SearchGroupByRequest:
      example:
        entity_type: Flow
        filter: destination_ip.ip_address = '1.1.1.1'
        aggregations:
        - field: flow.totalBytes.delta.summation.bytes
          aggregation_type: SUM
        time_range:
          start_time: 1534410000
          end_time: 1534410559
        group_by:
        - source_ip
        - destination_ip
        size: 2
        sort_by:
        - field: flow.totalBytes.delta.summation.bytes
          aggregation_type: SUM
          order: DESC
      properties:
        entity_type:
          $ref: '#/components/schemas/AllEntityType'
        filter:
          description: query filter
          type: string
        aggregations:
          items:
            $ref: '#/components/schemas/Aggregation'
          type: array
        group_by:
          items:
            type: string
          type: array
        sort_by:
          items:
            $ref: '#/components/schemas/AggregateOrderByClause'
          type: array
        time_range:
          $ref: '#/components/schemas/TimeRange'
        size:
          format: int32
          type: integer
        cursor:
          type: string
      type: object
    AggregationRequest:
      example:
        entity_type: Flow
        filter: destination_ip.ip_address = '1.1.1.1'
        aggregations:
        - field: flow.totalBytes.delta.summation.bytes
          aggregation_type: SUM
        time_range:
          start_time: 1534410000
          end_time: 1534410559
      properties:
        entity_type:
          $ref: '#/components/schemas/AllEntityType'
        filter:
          description: query filter
          type: string
        aggregations:
          items:
            $ref: '#/components/schemas/Aggregation'
          type: array
        time_range:
          $ref: '#/components/schemas/TimeRange'
      type: object
    Aggregation:
      properties:
        field:
          example: flow.totalBytes.delta.summation.bytes
          type: string
        aggregation_type:
          enum:
          - SUM
          - MIN
          - MAX
          - AVG
          type: string
      type: object
    AggregationWithValue:
      example:
        aggregation_type: SUM
        field: field
        value: 0.8008281904610115
      properties:
        field:
          type: string
        aggregation_type:
          enum:
          - SUM
          - MIN
          - MAX
          - AVG
          type: string
        value:
          format: double
          type: number
      type: object
    AggregationResponse:
      example:
        start_time: 1597247025
        total_count: 100
        end_time: 1597247999
        aggregations:
        - aggregation_type: SUM
          field: field
          value: 0.8008281904610115
        - aggregation_type: SUM
          field: field
          value: 0.8008281904610115
      properties:
        aggregations:
          items:
            $ref: '#/components/schemas/AggregationWithValue'
          type: array
        total_count:
          description: Total count of objects returned
          example: 100
          format: int32
          type: integer
        start_time:
          description: Start timestamp of the window of the objects returned
          example: 1597247025
          format: int64
          type: integer
        end_time:
          description: End timestamp of the window of the objects returned
          example: 1597247999
          format: int64
          type: integer
      type: object
    Cardinality:
      example:
        is_approx: true
        value: 6
      properties:
        value:
          format: int64
          type: integer
        is_approx:
          type: boolean
      type: object
    SearchGroupByResponse:
      example:
        cursor: MTA=
        total_bucket:
          is_approx: true
          value: 6
        size: 0
        time_range:
          start_time: 1597247025
          end_time: 1597247999
        total_count: 1000
        results:
        - bucket:
          - field: field
            value: value
          - field: field
            value: value
          count: 100
          aggregations:
          - aggregation_type: SUM
            field: field
            value: 0.8008281904610115
          - aggregation_type: SUM
            field: field
            value: 0.8008281904610115
        - bucket:
          - field: field
            value: value
          - field: field
            value: value
          count: 100
          aggregations:
          - aggregation_type: SUM
            field: field
            value: 0.8008281904610115
          - aggregation_type: SUM
            field: field
            value: 0.8008281904610115
      properties:
        results:
          items:
            $ref: '#/components/schemas/GroupWithValue'
          type: array
        size:
          format: int32
          type: integer
        total_bucket:
          $ref: '#/components/schemas/Cardinality'
        total_count:
          description: Total count of objects returned
          example: 1000
          format: int32
          type: integer
        time_range:
          $ref: '#/components/schemas/TimeRange'
        cursor:
          description: Cursor for the next page
          example: MTA=
          type: string
      type: object
    GroupWithValue:
      example:
        bucket:
        - field: field
          value: value
        - field: field
          value: value
        count: 100
        aggregations:
        - aggregation_type: SUM
          field: field
          value: 0.8008281904610115
        - aggregation_type: SUM
          field: field
          value: 0.8008281904610115
      properties:
        bucket:
          items:
            $ref: '#/components/schemas/BucketValue'
          type: array
        count:
          description: count of entity in group
          example: 100
          format: int64
          type: integer
        aggregations:
          items:
            $ref: '#/components/schemas/AggregationWithValue'
          type: array
      type: object
    BucketValue:
      example:
        field: field
        value: value
      properties:
        field:
          type: string
        value:
          type: string
      type: object
    ProblemEvent:
      allOf:
      - $ref: '#/components/schemas/BaseEvent'
      - $ref: '#/components/schemas/ProblemEvent_allOf'
    FirewallRuleMaskEvent:
      allOf:
      - $ref: '#/components/schemas/ProblemEvent'
      - $ref: '#/components/schemas/FirewallRuleMaskEvent_allOf'
    BaseEvent:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/BaseEvent_allOf'
    PagedListResponse:
      example:
        cursor: MTA=
        start_time: 1597247025
        total_count: 1102
        end_time: 1597247999
        results:
        - entity_type: VirtualMachine
          entity_id: 1000:104:12213212
        - entity_type: VirtualMachine
          entity_id: 1000:104:12213212
      properties:
        results:
          description: Array with resulting objects and their information
          items:
            $ref: '#/components/schemas/EntityId'
          type: array
        cursor:
          description: Cursor for the next page
          example: MTA=
          type: string
        total_count:
          description: Total number of objects
          example: 1102
          type: integer
        start_time:
          description: Start timestamp of the window of the objects returned
          example: 1597247025
          format: int64
          type: integer
        end_time:
          description: End timestamp of the window of the objects returned
          example: 1597247999
          format: int64
          type: integer
      type: object
    PagedEntityPairListResponse:
      example:
        cursor: MTA=
        start_time: 1597247025
        total_count: 1102
        end_time: 1597247999
        results:
        - dst_entity_id: 1000:104:56789
          src_entity_id: 1000:104:12213212
          src_entity_type: VirtualMachine
          dst_entity_type: VirtualMachine
        - dst_entity_id: 1000:104:56789
          src_entity_id: 1000:104:12213212
          src_entity_type: VirtualMachine
          dst_entity_type: VirtualMachine
      properties:
        results:
          description: Array of a source and destination pair
          items:
            $ref: '#/components/schemas/EntityPair'
          type: array
        cursor:
          description: Cursor for the next page
          example: MTA=
          type: string
        total_count:
          description: Total number of objects in the system, despite the page limit
          example: 1102
          type: integer
        start_time:
          description: Start timestamp of the window of the objects returned
          example: 1597247025
          format: int64
          type: integer
        end_time:
          description: End timestamp of the window of the objects returned
          example: 1597247999
          format: int64
          type: integer
      type: object
    PagedApplicationListResponse:
      example:
        cursor: MTA=
        total_count: 1102
        results:
        - null
        - null
      properties:
        results:
          description: Array of returned applications
          items:
            $ref: '#/components/schemas/Application'
          type: array
        cursor:
          description: Cursor for the next page
          example: MTA=
          type: string
        total_count:
          description: Total number of objects in the system, despite the page limit
          example: 1102
          type: integer
      type: object
    SimpleListResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/EntityId'
          type: array
        total_count:
          type: integer
      type: object
    TierListResponse:
      example:
        results:
        - null
        - null
      properties:
        results:
          items:
            $ref: '#/components/schemas/Tier'
          type: array
      type: object
    DataSourceListResponse:
      example:
        total_count: 1
        results:
        - entity_id: 1000:104:12213212
        - entity_id: 1000:104:12213212
      properties:
        results:
          items:
            $ref: '#/components/schemas/DataSourceEntityId'
          type: array
        total_count:
          example: 1
          type: integer
      type: object
    NodeListResult:
      example:
        total_count: 1
        results:
        - id: 1000:104:12213212
        - id: 1000:104:12213212
      properties:
        results:
          items:
            $ref: '#/components/schemas/NodeId'
          type: array
        total_count:
          example: 1
          type: integer
      type: object
    PagedListResponseWithTime:
      example:
        cursor: ML12eu02==
        start_time: 1504739809
        total_count: 100
        end_time: 1504739809
        results:
        - entity_type: VirtualMachine
          time: 0
          entity_id: entity_id
        - entity_type: VirtualMachine
          time: 0
          entity_id: entity_id
      properties:
        results:
          items:
            $ref: '#/components/schemas/EntityIdWithTime'
          type: array
        cursor:
          description: Cursor for the next page
          example: ML12eu02==
          type: string
        total_count:
          description: Total number of objects returned
          example: 100
          type: integer
        start_time:
          description: Start timestamp of the window of the objects returned
          example: 1504739809
          format: int64
          type: integer
        end_time:
          description: End timestamp of the window of the objects returned
          example: 1504739809
          format: int64
          type: integer
      type: object
    BaseEntity:
      discriminator:
        propertyName: entity_type
      example:
        entity_type: VirtualMachine
        name: My Name
        entity_id: 1000:104:12213212
      properties:
        entity_id:
          description: Entity ID that can be references in detail API calls
          example: 1000:104:12213212
          type: string
        name:
          description: Name of the object
          example: My Name
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
      type: object
    DataSourceType:
      enum:
      - CiscoSwitchDataSource
      - DellSwitchDataSource
      - AristaSwitchDataSource
      - BrocadeSwitchDataSource
      - JuniperSwitchDataSource
      - GDDataSource
      - F5BIGIPDataSource
      - NSXALBDataSource
      - HuaweiSwitchDataSource
      - MellanoxSwitchDataSource
      - HPESwitchDataSource
      - CiscoASRXRDataSource
      - UANIDataSource
      - VCenterDataSource
      - NSXVManagerDataSource
      - UCSManagerDataSource
      - HPVCManagerDataSource
      - HPOneViewDataSource
      - PanFirewallDataSource
      - CheckpointFirewallDataSource
      - FortinetFirewallDataSource
      - NSXTManagerDataSource
      - KubernetesDataSource
      - PKSDataSource
      - InfobloxManagerDataSource
      - CiscoACIDataSource
      - ServiceNowDataSource
      - PolicyManagerDataSource
      - AzureDataSource
      - VeloCloudDataSource
      - AWSDataSource
      - HcxDataSource
      type: string
    NodeId:
      example:
        id: 1000:104:12213212
      properties:
        id:
          description: Entity Identifier
          example: 1000:104:12213212
          type: string
        entity_type:
          $ref: '#/components/schemas/NodeType'
      type: object
    NodeType:
      enum:
      - Node
      type: string
    EntityType:
      description: The entity type of an object. This is how vRNI identifies different
        objects like VMs, Hosts, Switches, etc.
      enum:
      - VirtualMachine
      - EC2Instance
      - Host
      - Vnic
      - Vmknic
      - VxlanLayer2Network
      - VlanL2Network
      - Cluster
      - SecurityTag
      - ResourcePool
      - NSXIPSet
      - NSXTIPSet
      - EC2IPSet
      - NSXSecurityGroup
      - NSGroup
      - NSXPolicyGroup
      - EC2SecurityGroup
      - Flow
      - ProblemEvent
      - Application
      - Tier
      - IPEndpoint
      - NSXFirewallRule
      - EC2SGFirewallRule
      - NSXRedirectRule
      - VCenterManager
      - NSXVManager
      - NSXTManager
      - NSXPolicyManager
      - CheckpointManager
      - CheckpointMDSManager
      - NSXService
      - EC2Service
      - NSService
      - VPC
      - CloudNetwork
      - AzureVM
      - AzureNSG
      - AzureASG
      - AzureNSGRule
      - NSXDistributedFirewall
      - EC2Firewall
      - NSXServiceGroup
      - NSServiceGroup
      - DistributedVirtualSwitch
      - DistributedVirtualPortgroup
      - VCDatacenter
      - Datastore
      - Folder
      - NSXTFirewallRule
      - NSXTFirewall
      - PolicyManagerFirewallRule
      - PolicyManagerFirewall
      - KubernetesService
      - CheckpointFirewall
      - CheckpointFirewallRule
      - UserDefinedSubnet
      - UserDefinedProblemEvent
      - FirewallRuleMaskEvent
      - EdgeDevice
      - RouterDevice
      - NSXController
      - LogicalRouter
      - NSXTManagementNode
      - NSXTController
      - NSXTTransportNode
      - NSXTTransportZone
      - NSXTLoadBalancer
      - NSXTVirtualServer
      - NSXTServerPool
      - NSXTLogicalSwitch
      - NSXTRouterDevice
      - NSXTEdgeCluster
      - NSXControllerCluster
      - AzureSubscription
      - AWSAccountManager
      - HcxDataSource
      example: VirtualMachine
      type: string
    MetaEntityType:
      enum:
      - Group
      - BaseSecurityGroup
      - BaseEvent
      - BaseVirtualMachine
      - BaseFirewallRule
      - BaseIPSet
      - BaseL2Network
      - BaseManager
      - BaseFirewallManager
      - BaseGenericFirewall
      - BaseGenericFirewallRule
      - BaseNSXManager
      - BaseFirewall
      - BaseService
      - BaseServiceGroup
      - BaseVnic
      type: string
    AllEntityType:
      enum:
      - Group
      - BaseSecurityGroup
      - BaseEvent
      - BaseVirtualMachine
      - BaseFirewallRule
      - BaseIPSet
      - BaseL2Network
      - BaseFirewall
      - BaseService
      - BaseServiceGroup
      - BaseVnic
      - VirtualMachine
      - EC2Instance
      - Host
      - Vnic
      - Vmknic
      - VxlanLayer2Network
      - VlanL2Network
      - Cluster
      - SecurityTag
      - ResourcePool
      - NSXIPSet
      - NSXTIPSet
      - EC2IPSet
      - NSXSecurityGroup
      - NSGroup
      - NSXPolicyGroup
      - EC2SecurityGroup
      - Flow
      - ProblemEvent
      - Application
      - Tier
      - IPEndpoint
      - NSXFirewallRule
      - EC2SGFirewallRule
      - NSXRedirectRule
      - VCenterManager
      - NSXVManager
      - NSXTManager
      - NSXPolicyManager
      - CheckpointManager
      - CheckpointMDSManager
      - BaseManager
      - BaseFirewallManager
      - BaseNSXManager
      - NSXService
      - EC2Service
      - NSService
      - VPC
      - CloudNetwork
      - AzureVM
      - AzureNSG
      - AzureASG
      - AzureNSGRule
      - NSXDistributedFirewall
      - EC2Firewall
      - NSXServiceGroup
      - NSServiceGroup
      - DistributedVirtualSwitch
      - DistributedVirtualPortgroup
      - VCDatacenter
      - Datastore
      - Folder
      - NSXTFirewallRule
      - NSXTFirewall
      - PolicyManagerFirewallRule
      - PolicyManagerFirewall
      - BaseGenericFirewall
      - BaseGenericFirewallRule
      - CheckpointFirewall
      - CheckpointFirewallRule
      - UserDefinedSubnet
      - KubernetesService
      - UserDefinedProblemEvent
      - FirewallRuleMaskEvent
      - EdgeDevice
      - RouterDevice
      - NSXController
      - LogicalRouter
      - NSXTManagementNode
      - NSXTController
      - NSXTTransportNode
      - NSXTTransportZone
      - NSXTLoadBalancer
      - NSXTVirtualServer
      - NSXTServerPool
      - NSXTLogicalSwitch
      - NSXTRouterDevice
      - NSXTEdgeCluster
      - NSXControllerCluster
      - AzureSubscription
      - AWSAccountManager
      - HcxDataSource
      type: string
    Node:
      example:
        node_type: PROXY_VM
        name: name
        id: id
        ip_address: ip_address
        node_id: node_id
      properties:
        id:
          type: string
        entity_type:
          $ref: '#/components/schemas/NodeType'
        node_type:
          enum:
          - PROXY_VM
          - PLATFORM_VM
          type: string
        node_id:
          type: string
        ip_address:
          type: string
        name:
          type: string
      type: object
    Application:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/Application_allOf'
    ApplicationRequest:
      example:
        name: My-3Tier-App
      properties:
        name:
          description: The name of the application
          example: My-3Tier-App
          type: string
      required:
      - name
      type: object
    GroupsMembersRequest:
      example:
        entity_ids:
        - 10000:561:123456789
        - 10000:561:987654321
        cursor: CKWP==
      properties:
        entity_ids:
          items:
            type: string
          type: array
        cursor:
          type: string
      type: object
    TierRequest:
      example:
        name: tier-1
        group_membership_criteria:
        - membership_type: SearchMembershipCriteria
          search_membership_criteria:
            entity_type: VirtualMachine
            filter: security_groups.entity_id = '18230:82:604573173'
      properties:
        name:
          type: string
        group_membership_criteria:
          items:
            $ref: '#/components/schemas/GroupMembershipCriteria'
          type: array
      type: object
    Tier:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/Tier_allOf'
    GroupMembershipCriteria:
      description: EntityType currently restricted to VirtualMachine
      properties:
        membership_type:
          enum:
          - SearchMembershipCriteria
          - IPAddressMembershipCriteria
          type: string
        ip_address_membership_criteria:
          $ref: '#/components/schemas/IpAddressMembershipCriteria'
        search_membership_criteria:
          $ref: '#/components/schemas/SearchMembershipCriteria'
      type: object
    SearchMembershipCriteria:
      properties:
        entity_type:
          $ref: '#/components/schemas/AllEntityType'
        filter:
          description: As defined in search end point
          type: string
      type: object
    IpAddressMembershipCriteria:
      description: Ip Address membership definition
      properties:
        ip_addresses:
          items:
            type: string
          type: array
      type: object
    IPEndpoint:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/IPEndpoint_allOf'
    RecommendedRules:
      example:
        time_range:
          start_time: 1597247025
          end_time: 1597247999
        results:
        - sources:
          - entity_type: VirtualMachine
            entity_id: entity_id
          - entity_type: VirtualMachine
            entity_id: entity_id
          destinations:
          - entity_type: VirtualMachine
            entity_id: entity_id
          - entity_type: VirtualMachine
            entity_id: entity_id
          action: ALLOW
          protocols:
          - protocols
          - protocols
          port_ranges:
          - start: 0
            end: 6
          - start: 0
            end: 6
        - sources:
          - entity_type: VirtualMachine
            entity_id: entity_id
          - entity_type: VirtualMachine
            entity_id: entity_id
          destinations:
          - entity_type: VirtualMachine
            entity_id: entity_id
          - entity_type: VirtualMachine
            entity_id: entity_id
          action: ALLOW
          protocols:
          - protocols
          - protocols
          port_ranges:
          - start: 0
            end: 6
          - start: 0
            end: 6
      properties:
        results:
          items:
            $ref: '#/components/schemas/RecommendedRule'
          type: array
        time_range:
          $ref: '#/components/schemas/TimeRange'
      type: object
    RecommendedRule:
      example:
        sources:
        - entity_type: VirtualMachine
          entity_id: entity_id
        - entity_type: VirtualMachine
          entity_id: entity_id
        destinations:
        - entity_type: VirtualMachine
          entity_id: entity_id
        - entity_type: VirtualMachine
          entity_id: entity_id
        action: ALLOW
        protocols:
        - protocols
        - protocols
        port_ranges:
        - start: 0
          end: 6
        - start: 0
          end: 6
      properties:
        sources:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        destinations:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        protocols:
          items:
            type: string
          type: array
        port_ranges:
          items:
            $ref: '#/components/schemas/SimplePortRange'
          type: array
        action:
          enum:
          - ALLOW
          - DROP
          type: string
      type: object
    RecommendedRulesRequest:
      example:
        group_1:
          entity:
            entity_type: Tier
            entity_id: 10000:562:1904698621
        group_2:
          entity:
            entity_type: Tier
            entity_id: 10000:562:1780351215
      properties:
        group_1:
          $ref: '#/components/schemas/MicroSecGroup'
        group_2:
          $ref: '#/components/schemas/MicroSecGroup'
        time_range:
          $ref: '#/components/schemas/TimeRange'
        include_external:
          default: false
          description: When True, includes ungrouped endpoints outside defined scope
          type: boolean
      type: object
    MicroSecGroup:
      properties:
        entity:
          $ref: '#/components/schemas/Reference'
      type: object
    NamesRequest:
      example:
        entities:
        - time: 0
          entity_id: entity_id
        - time: 0
          entity_id: entity_id
      properties:
        entities:
          items:
            $ref: '#/components/schemas/NameRequestParam'
          type: array
      type: object
    NameRequestParam:
      example:
        time: 0
        entity_id: entity_id
      properties:
        entity_id:
          type: string
        time:
          format: int64
          type: integer
      type: object
    NamesResponse:
      example:
        entities:
        - null
        - null
      properties:
        entities:
          items:
            $ref: '#/components/schemas/EntityName'
          type: array
      type: object
    EntityName:
      allOf:
      - $ref: '#/components/schemas/EntityIdWithTime'
      - $ref: '#/components/schemas/EntityName_allOf'
    ApiError:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        details:
          items:
            $ref: '#/components/schemas/ErrorDetail'
          type: array
      type: object
    ErrorDetail:
      properties:
        code:
          format: int32
          type: integer
        message:
          type: string
        target:
          items:
            type: string
          type: array
      type: object
    VersionResponse:
      example:
        api_version: api_version
      properties:
        api_version:
          type: string
      type: object
    IpTag:
      example:
        ip_address_ranges:
        - start_ip: start_ip
          end_ip: end_ip
        - start_ip: start_ip
          end_ip: end_ip
        tag_id: tag_id
        subnets:
        - subnets
        - subnets
      properties:
        tag_id:
          type: string
        subnets:
          items:
            type: string
          type: array
        ip_address_ranges:
          items:
            $ref: '#/components/schemas/IpAddressRange'
          type: array
      type: object
    IpTagIdList:
      example:
        tag_ids:
        - tag_ids
        - tag_ids
      properties:
        tag_ids:
          items:
            type: string
          type: array
      type: object
    SubnetMappingRequest:
      example:
        vlan_id: 0
        cidr: cidr
      properties:
        cidr:
          type: string
        vlan_id:
          format: int32
          type: integer
      type: object
    SubnetMapping:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/SubnetMapping_allOf'
    SubnetMappingList:
      example:
        results:
        - null
        - null
      properties:
        results:
          items:
            $ref: '#/components/schemas/SubnetMapping'
          type: array
      type: object
    ApplicationsMembersResponse:
      example:
        cursor: cursor
        total_count: 1
        results:
        - creation_time: 0
          tiers:
          - entity_type: entity_type
            members:
            - entity_type: entity_type
              vendor_infos:
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              entity_id: entity_id
            - entity_type: entity_type
              vendor_infos:
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              entity_id: entity_id
            name: name
            entity_id: entity_id
          - entity_type: entity_type
            members:
            - entity_type: entity_type
              vendor_infos:
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              entity_id: entity_id
            - entity_type: entity_type
              vendor_infos:
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              entity_id: entity_id
            name: name
            entity_id: entity_id
          entity_type: entity_type
          last_modified_time: 6
          name: name
          last_modified_by: last_modified_by
          source: MANUAL
          entity_id: entity_id
          created_by: created_by
        - creation_time: 0
          tiers:
          - entity_type: entity_type
            members:
            - entity_type: entity_type
              vendor_infos:
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              entity_id: entity_id
            - entity_type: entity_type
              vendor_infos:
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              entity_id: entity_id
            name: name
            entity_id: entity_id
          - entity_type: entity_type
            members:
            - entity_type: entity_type
              vendor_infos:
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              entity_id: entity_id
            - entity_type: entity_type
              vendor_infos:
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              - manager:
                  entity_type: VirtualMachine
                  entity_id: entity_id
                vendor_ids:
                - id_type: id_type
                  id_value: id_value
                - id_type: id_type
                  id_value: id_value
              entity_id: entity_id
            name: name
            entity_id: entity_id
          entity_type: entity_type
          last_modified_time: 6
          name: name
          last_modified_by: last_modified_by
          source: MANUAL
          entity_id: entity_id
          created_by: created_by
      properties:
        results:
          items:
            $ref: '#/components/schemas/ApplicationMembersResponse'
          type: array
        cursor:
          type: string
        total_count:
          format: int32
          type: integer
      type: object
    TiersMembersResponse:
      example:
        cursor: cursor
        total_count: 0
        results:
        - entity_type: entity_type
          members:
          - entity_type: entity_type
            vendor_infos:
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            entity_id: entity_id
          - entity_type: entity_type
            vendor_infos:
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            entity_id: entity_id
          name: name
          entity_id: entity_id
        - entity_type: entity_type
          members:
          - entity_type: entity_type
            vendor_infos:
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            entity_id: entity_id
          - entity_type: entity_type
            vendor_infos:
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            entity_id: entity_id
          name: name
          entity_id: entity_id
      properties:
        results:
          items:
            $ref: '#/components/schemas/TierMembersResponse'
          type: array
        cursor:
          type: string
        total_count:
          format: int32
          type: integer
      type: object
    ApplicationMembersResponse:
      example:
        creation_time: 0
        tiers:
        - entity_type: entity_type
          members:
          - entity_type: entity_type
            vendor_infos:
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            entity_id: entity_id
          - entity_type: entity_type
            vendor_infos:
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            entity_id: entity_id
          name: name
          entity_id: entity_id
        - entity_type: entity_type
          members:
          - entity_type: entity_type
            vendor_infos:
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            entity_id: entity_id
          - entity_type: entity_type
            vendor_infos:
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            - manager:
                entity_type: VirtualMachine
                entity_id: entity_id
              vendor_ids:
              - id_type: id_type
                id_value: id_value
              - id_type: id_type
                id_value: id_value
            entity_id: entity_id
          name: name
          entity_id: entity_id
        entity_type: entity_type
        last_modified_time: 6
        name: name
        last_modified_by: last_modified_by
        source: MANUAL
        entity_id: entity_id
        created_by: created_by
      properties:
        entity_id:
          type: string
        entity_type:
          type: string
        name:
          type: string
        created_by:
          type: string
        creation_time:
          format: int64
          type: integer
        last_modified_by:
          type: string
        last_modified_time:
          format: int64
          type: integer
        source:
          enum:
          - MANUAL
          - PATTERN_BASED
          - SERVICE_NOW
          - FLOW_BASED_DISCOVERY
          type: string
        tiers:
          items:
            $ref: '#/components/schemas/TierMembersResponse'
          type: array
      type: object
    TierMembersResponse:
      example:
        entity_type: entity_type
        members:
        - entity_type: entity_type
          vendor_infos:
          - manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
          - manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
          entity_id: entity_id
        - entity_type: entity_type
          vendor_infos:
          - manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
          - manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
          entity_id: entity_id
        name: name
        entity_id: entity_id
      properties:
        entity_id:
          type: string
        entity_type:
          type: string
        name:
          type: string
        members:
          items:
            $ref: '#/components/schemas/ApplicationMember'
          type: array
      type: object
    ApplicationMembers:
      example:
        cursor: cursor
        results:
        - entity_type: entity_type
          vendor_infos:
          - manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
          - manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
          entity_id: entity_id
        - entity_type: entity_type
          vendor_infos:
          - manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
          - manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
          entity_id: entity_id
      properties:
        results:
          items:
            $ref: '#/components/schemas/ApplicationMember'
          type: array
        cursor:
          type: string
      type: object
    ApplicationMember:
      example:
        entity_type: entity_type
        vendor_infos:
        - manager:
            entity_type: VirtualMachine
            entity_id: entity_id
          vendor_ids:
          - id_type: id_type
            id_value: id_value
          - id_type: id_type
            id_value: id_value
        - manager:
            entity_type: VirtualMachine
            entity_id: entity_id
          vendor_ids:
          - id_type: id_type
            id_value: id_value
          - id_type: id_type
            id_value: id_value
        entity_id: entity_id
      properties:
        entity_id:
          type: string
        entity_type:
          type: string
        vendor_infos:
          items:
            $ref: '#/components/schemas/VendorInfo'
          type: array
      type: object
    VendorInfo:
      example:
        manager:
          entity_type: VirtualMachine
          entity_id: entity_id
        vendor_ids:
        - id_type: id_type
          id_value: id_value
        - id_type: id_type
          id_value: id_value
      properties:
        vendor_ids:
          items:
            $ref: '#/components/schemas/VendorId'
          type: array
        manager:
          $ref: '#/components/schemas/Reference'
      type: object
    VendorId:
      example:
        id_type: id_type
        id_value: id_value
      properties:
        id_type:
          type: string
        id_value:
          type: string
      type: object
    Manager:
      properties:
        entity_id:
          type: string
        entity_type:
          type: string
      type: object
    ApplicationFlowData:
      example:
        flow_data:
        - name: name
          value: 0.8008281904610115
        - name: name
          value: 0.8008281904610115
        application_id: 18230:3:187309184
      properties:
        application_id:
          description: The entity ID of the application this flow is attached
          example: 18230:3:187309184
          type: string
        flow_data:
          description: The flow data
          items:
            $ref: '#/components/schemas/FlowData'
          type: array
      type: object
    FlowData:
      example:
        name: name
        value: 0.8008281904610115
      properties:
        name:
          type: string
        value:
          type: number
      type: object
    ApplicationTopTalkingMemberData:
      example:
        application_id: 18230:3:187309184
        top_talker_member:
        - sorted_list:
            cursor: MTA=
            start_time: 1597247025
            total_count: 1102
            end_time: 1597247999
            results:
            - entity_type: VirtualMachine
              entity_id: 1000:104:12213212
            - entity_type: VirtualMachine
              entity_id: 1000:104:12213212
        - sorted_list:
            cursor: MTA=
            start_time: 1597247025
            total_count: 1102
            end_time: 1597247999
            results:
            - entity_type: VirtualMachine
              entity_id: 1000:104:12213212
            - entity_type: VirtualMachine
              entity_id: 1000:104:12213212
      properties:
        application_id:
          description: The entity ID of the application this flow is attached
          example: 18230:3:187309184
          type: string
        top_talker_member:
          description: List of objects that are the top talkers
          items:
            $ref: '#/components/schemas/TopTalkingMemberData'
          type: array
      type: object
    TopTalkingMemberData:
      example:
        sorted_list:
          cursor: MTA=
          start_time: 1597247025
          total_count: 1102
          end_time: 1597247999
          results:
          - entity_type: VirtualMachine
            entity_id: 1000:104:12213212
          - entity_type: VirtualMachine
            entity_id: 1000:104:12213212
      properties:
        sort_criteria:
          $ref: '#/components/schemas/TopTalkerSortEnum'
        sorted_list:
          $ref: '#/components/schemas/PagedListResponse'
      type: object
    ApplicationTopTalkingPairData:
      example:
        application_id: 18230:3:187309184
        top_talker_member:
        - sorted_list:
            cursor: MTA=
            start_time: 1597247025
            total_count: 1102
            end_time: 1597247999
            results:
            - dst_entity_id: 1000:104:56789
              src_entity_id: 1000:104:12213212
              src_entity_type: VirtualMachine
              dst_entity_type: VirtualMachine
            - dst_entity_id: 1000:104:56789
              src_entity_id: 1000:104:12213212
              src_entity_type: VirtualMachine
              dst_entity_type: VirtualMachine
        - sorted_list:
            cursor: MTA=
            start_time: 1597247025
            total_count: 1102
            end_time: 1597247999
            results:
            - dst_entity_id: 1000:104:56789
              src_entity_id: 1000:104:12213212
              src_entity_type: VirtualMachine
              dst_entity_type: VirtualMachine
            - dst_entity_id: 1000:104:56789
              src_entity_id: 1000:104:12213212
              src_entity_type: VirtualMachine
              dst_entity_type: VirtualMachine
      properties:
        application_id:
          description: The entity ID of the application this flow is attached
          example: 18230:3:187309184
          type: string
        top_talker_member:
          description: List of objects that are the top talkers
          items:
            $ref: '#/components/schemas/TopTalkingPairData'
          type: array
      type: object
    TopTalkingPairData:
      example:
        sorted_list:
          cursor: MTA=
          start_time: 1597247025
          total_count: 1102
          end_time: 1597247999
          results:
          - dst_entity_id: 1000:104:56789
            src_entity_id: 1000:104:12213212
            src_entity_type: VirtualMachine
            dst_entity_type: VirtualMachine
          - dst_entity_id: 1000:104:56789
            src_entity_id: 1000:104:12213212
            src_entity_type: VirtualMachine
            dst_entity_type: VirtualMachine
      properties:
        sort_criteria:
          $ref: '#/components/schemas/TopTalkerSortEnum'
        sorted_list:
          $ref: '#/components/schemas/PagedEntityPairListResponse'
      type: object
    ApplicationFlowSummary:
      example:
        start_time: 1597247025
        service_endpoint_count: 0
        end_time: 1597247999
        groups:
        - entity_type: entity_type
          flow_summary:
            ingress_bytes: 6
            egress_bytes: 1
          group_id: group_id
          entity_id: entity_id
        - entity_type: entity_type
          flow_summary:
            ingress_bytes: 6
            egress_bytes: 1
          group_id: group_id
          entity_id: entity_id
      properties:
        service_endpoint_count:
          type: integer
        groups:
          items:
            $ref: '#/components/schemas/GroupEntry'
          type: array
        start_time:
          description: Start timestamp of the window of the objects returned
          example: 1597247025
          format: int64
          type: integer
        end_time:
          description: End timestamp of the window of the objects returned
          example: 1597247999
          format: int64
          type: integer
      type: object
    GroupEntry:
      example:
        entity_type: entity_type
        flow_summary:
          ingress_bytes: 6
          egress_bytes: 1
        group_id: group_id
        entity_id: entity_id
      properties:
        group_id:
          type: string
        entity_id:
          type: string
        entity_type:
          type: string
        flow_summary:
          $ref: '#/components/schemas/FlowSummary'
      type: object
    FlowSummary:
      example:
        ingress_bytes: 6
        egress_bytes: 1
      properties:
        ingress_bytes:
          default: 0
          description: Incoming traffic in bytes
          format: int64
          type: integer
        egress_bytes:
          default: 0
          description: Outgoing traffic in bytes
          format: int64
          type: integer
      type: object
    EntityWithTime:
      example:
        entity_type: VirtualMachine
        time: 0
        entity_id: 18230:3:187309184
        entity:
          entity_type: VirtualMachine
          name: My Name
          entity_id: 1000:104:12213212
      properties:
        entity_id:
          description: Entity Identifier
          example: 18230:3:187309184
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        entity:
          $ref: '#/components/schemas/BaseEntity'
        time:
          description: The timestamp of this object
          format: int64
          type: integer
      type: object
    BulkFetchResponse:
      example:
        results:
        - entity_type: VirtualMachine
          time: 0
          entity_id: 18230:3:187309184
          entity:
            entity_type: VirtualMachine
            name: My Name
            entity_id: 1000:104:12213212
        - entity_type: VirtualMachine
          time: 0
          entity_id: 18230:3:187309184
          entity:
            entity_type: VirtualMachine
            name: My Name
            entity_id: 1000:104:12213212
      properties:
        results:
          items:
            $ref: '#/components/schemas/EntityWithTime'
          type: array
      type: object
    EntityMetricsSchema:
      example:
        results:
        - intervals:
          - 0
          - 0
          unit: unit
          metric: metric
          description: description
          display_name: display_name
        - intervals:
          - 0
          - 0
          unit: unit
          metric: metric
          description: description
          display_name: display_name
      properties:
        results:
          items:
            $ref: '#/components/schemas/MetricSchema'
          type: array
      type: object
    MetricSchema:
      example:
        intervals:
        - 0
        - 0
        unit: unit
        metric: metric
        description: description
        display_name: display_name
      properties:
        metric:
          type: string
        display_name:
          type: string
        intervals:
          items:
            type: integer
          type: array
        description:
          type: string
        unit:
          type: string
      type: object
    MetricResponse:
      example:
        unit: unit
        metric: metric
        pointlist:
        - - 6.027456183070403
          - 6.027456183070403
        - - 6.027456183070403
          - 6.027456183070403
        start: 1
        interval: 0
        end: 5
        display_name: display_name
      properties:
        metric:
          type: string
        display_name:
          type: string
        interval:
          type: integer
        unit:
          type: string
        pointlist:
          items:
            items:
              format: double
              type: number
            type: array
          type: array
        start:
          format: int64
          type: integer
        end:
          format: int64
          type: integer
      type: object
    PathFirewallRules:
      example:
        firewalls:
        - firewall_entity_id:
            entity_type: VirtualMachine
            entity_id: entity_id
          manager:
            entity_type: VirtualMachine
            entity_id: entity_id
          rules:
          - null
          - null
          vendor_info:
            manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
        - firewall_entity_id:
            entity_type: VirtualMachine
            entity_id: entity_id
          manager:
            entity_type: VirtualMachine
            entity_id: entity_id
          rules:
          - null
          - null
          vendor_info:
            manager:
              entity_type: VirtualMachine
              entity_id: entity_id
            vendor_ids:
            - id_type: id_type
              id_value: id_value
            - id_type: id_type
              id_value: id_value
      properties:
        firewalls:
          items:
            $ref: '#/components/schemas/FirewallRuleSet'
          type: array
      type: object
    FirewallRuleSet:
      example:
        firewall_entity_id:
          entity_type: VirtualMachine
          entity_id: entity_id
        manager:
          entity_type: VirtualMachine
          entity_id: entity_id
        rules:
        - null
        - null
        vendor_info:
          manager:
            entity_type: VirtualMachine
            entity_id: entity_id
          vendor_ids:
          - id_type: id_type
            id_value: id_value
          - id_type: id_type
            id_value: id_value
      properties:
        firewall_entity_id:
          $ref: '#/components/schemas/Reference'
        vendor_info:
          $ref: '#/components/schemas/VendorInfo'
        manager:
          $ref: '#/components/schemas/Reference'
        rules:
          items:
            $ref: '#/components/schemas/BaseFirewallRule'
          type: array
      type: object
    PathFirewallRulesRequest:
      example:
        source_ip_address: 2.2.2.2
        protocol: TCP
        port: 80
        time: 0
        destination_ip_address: 1.1.1.1
      properties:
        source_ip_address:
          description: Source IP configured in firewall rule
          example: 2.2.2.2
          type: string
        destination_ip_address:
          description: Destination IP configured in firewall rule
          example: 1.1.1.1
          type: string
        port:
          description: Port number configured in firewall rule
          example: 80
          format: int32
          type: integer
        protocol:
          description: Protocol configured in firewall rule
          example: TCP
          type: string
        time:
          description: Timestamp of object
          format: int64
          type: integer
      type: object
    AuditRequest:
      example:
        username: admin@local
        operation: LOGIN
        time_range:
          start_time: 1534410000
          end_time: 1534410559
        size: 10
        cursor: string
      properties:
        user_name:
          description: Username making the change
          example: admin@local
          type: string
        ip_address:
          description: Client IP that is making the change
          example: 192.168.0.1
          type: string
        entity_type:
          description: Entity Type of object being changed
          example: VCenterDataSource
          type: string
        entity_id:
          description: Entity ID of object being changed
          example: 18230:3:187309184
          type: string
        operation:
          description: Operation on object being changed
          example: UPDATE
          type: string
        response:
          description: Response from vRNI, whether it's successfull or not
          type: string
        size:
          format: int32
          type: integer
        cursor:
          description: Cursor for the next page of logs
          example: MTA=
          type: string
        time_range:
          $ref: '#/components/schemas/TimeRange'
      type: object
    AuditListResponse:
      example:
        cursor: ML12eu02==
        start_time: 1504739809
        end_time: 1504739809
        results:
        - entity_type: entity_type
          user_name: user_name
          response: response
          ip_address: ip_address
          entity_id: entity_id
          operation: operation
          value: value
          timestamp: 0
        - entity_type: entity_type
          user_name: user_name
          response: response
          ip_address: ip_address
          entity_id: entity_id
          operation: operation
          value: value
          timestamp: 0
      properties:
        results:
          items:
            $ref: '#/components/schemas/AuditResponse'
          type: array
        cursor:
          description: Cursor for the next page of logs
          example: ML12eu02==
          type: string
        start_time:
          description: Start timestamp of the window of the objects returned
          example: 1504739809
          format: int64
          type: integer
        end_time:
          description: End timestamp of the window of the objects returned
          example: 1504739809
          format: int64
          type: integer
      type: object
    AuditResponse:
      example:
        entity_type: entity_type
        user_name: user_name
        response: response
        ip_address: ip_address
        entity_id: entity_id
        operation: operation
        value: value
        timestamp: 0
      properties:
        ip_address:
          type: string
        user_name:
          type: string
        entity_type:
          type: string
        entity_id:
          type: string
        operation:
          type: string
        response:
          type: string
        value:
          type: string
        timestamp:
          format: int64
          type: integer
      type: object
    UserUpdateRequest:
      example:
        new_password: password
        username: admin@local
      properties:
        username:
          example: admin@local
          type: string
        new_password:
          example: password
          type: string
      type: object
    InterfaceWANConfig:
      example:
        name: name
        id: id
        type: MPLS
      properties:
        id:
          type: string
        name:
          type: string
        type:
          enum:
          - MPLS
          - INTERNET
          - OTHER
          type: string
      type: object
    WANConfig:
      example:
        site: Washington DC
        interfaces:
        - name: name
          id: id
          type: MPLS
        - name: name
          id: id
          type: MPLS
        region: US East
      properties:
        site:
          description: Site name of the WAN router
          example: Washington DC
          type: string
        region:
          description: Region name of the WAN router
          example: US East
          type: string
        interfaces:
          description: Interface mappings for MPLS, INTERNET, or OTHER connections
          items:
            $ref: '#/components/schemas/InterfaceWANConfig'
          type: array
      type: object
    SubscriptionRequest:
      example:
        severity: severity
        daily_at_utc: daily_at_utc
        email_ids:
        - email_ids
        - email_ids
        is_problem: true
        snmp_trap_entity_ids:
        - snmp_trap_entity_ids
        - snmp_trap_entity_ids
        event_name: event_name
        search_criteria: search_criteria
      properties:
        event_name:
          type: string
        is_problem:
          type: boolean
        severity:
          type: string
        search_criteria:
          type: string
        generate_event_criteria:
          $ref: '#/components/schemas/GenerateEventCritera'
        email_frequency:
          $ref: '#/components/schemas/EmailFrequency'
        daily_at_utc:
          type: string
        email_ids:
          items:
            type: string
          type: array
        snmp_trap_entity_ids:
          items:
            type: string
          type: array
      type: object
    Severity:
      enum:
      - Critical
      - Moderate
      - Warning
      - Info
      type: string
    GenerateEventCritera:
      enum:
      - SEARCH_RESULT_CHANGE
      - ZERO_SEARCH_RESULTS
      type: string
    EmailFrequency:
      enum:
      - IMMEDIATELY
      - DAILY_DIGEST
      type: string
    SubscriptionResponse:
      example:
        daily_at_utc: daily_at_utc
        email_ids:
        - email_ids
        - email_ids
        is_problem: true
        snmp_trap_entity_ids:
        - snmp_trap_entity_ids
        - snmp_trap_entity_ids
        active: true
        event_name: event_name
        entity_id: entity_id
        search_criteria: search_criteria
      properties:
        entity_id:
          type: string
        active:
          type: boolean
        event_name:
          type: string
        is_problem:
          type: boolean
        severity:
          $ref: '#/components/schemas/Severity'
        search_criteria:
          type: string
        generate_event_criteria:
          $ref: '#/components/schemas/GenerateEventCritera'
        email_frequency:
          $ref: '#/components/schemas/EmailFrequency'
        daily_at_utc:
          type: string
        email_ids:
          items:
            type: string
          type: array
        snmp_trap_entity_ids:
          items:
            type: string
          type: array
      type: object
    SubscriptionListResponse:
      example:
        total_count: 0
        results:
        - daily_at_utc: daily_at_utc
          email_ids:
          - email_ids
          - email_ids
          is_problem: true
          snmp_trap_entity_ids:
          - snmp_trap_entity_ids
          - snmp_trap_entity_ids
          active: true
          event_name: event_name
          entity_id: entity_id
          search_criteria: search_criteria
        - daily_at_utc: daily_at_utc
          email_ids:
          - email_ids
          - email_ids
          is_problem: true
          snmp_trap_entity_ids:
          - snmp_trap_entity_ids
          - snmp_trap_entity_ids
          active: true
          event_name: event_name
          entity_id: entity_id
          search_criteria: search_criteria
      properties:
        results:
          items:
            $ref: '#/components/schemas/SubscriptionResponse'
          type: array
        total_count:
          type: integer
      type: object
    EventMetaInfoResponse:
      example:
        results:
        - severity: Critical
          entity_type: entity_type
          supported_entity_types:
          - supported_entity_types
          - supported_entity_types
          impact: Network Disruption Risk
          name: name
          supported_manager_types:
          - supported_manager_types
          - supported_manager_types
          recommendations:
          - recommendations
          - recommendations
          help_text: help_text
          tags:
          - tags
          - tags
        - severity: Critical
          entity_type: entity_type
          supported_entity_types:
          - supported_entity_types
          - supported_entity_types
          impact: Network Disruption Risk
          name: name
          supported_manager_types:
          - supported_manager_types
          - supported_manager_types
          recommendations:
          - recommendations
          - recommendations
          help_text: help_text
          tags:
          - tags
          - tags
      properties:
        results:
          items:
            $ref: '#/components/schemas/EventMetaInfo'
          type: array
      type: object
    EventMetaInfo:
      example:
        severity: Critical
        entity_type: entity_type
        supported_entity_types:
        - supported_entity_types
        - supported_entity_types
        impact: Network Disruption Risk
        name: name
        supported_manager_types:
        - supported_manager_types
        - supported_manager_types
        recommendations:
        - recommendations
        - recommendations
        help_text: help_text
        tags:
        - tags
        - tags
      properties:
        entity_type:
          type: string
        name:
          type: string
        help_text:
          type: string
        severity:
          enum:
          - Critical
          - Warning
          - Moderate
          - Info
          type: string
        tags:
          items:
            type: string
          type: array
        supported_entity_types:
          items:
            type: string
          type: array
        supported_manager_types:
          items:
            type: string
          type: array
        impact:
          enum:
          - Network Disruption Risk
          - Availability Risk
          - Operations
          - Optimization
          - Performance
          - Security Risk
          - Health
          - Wastage
          - Communication Failure
          - Sync
          - NA
          type: string
        recommendations:
          items:
            type: string
          type: array
      type: object
    BulkUserDefinedProblemFetchResponse:
      properties:
        results:
          items:
            $ref: '#/components/schemas/UserDefinedProblemWithTime'
          type: array
      type: object
    UserDefinedProblemWithTime:
      properties:
        entity_id:
          description: Entity Identifier
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        entity:
          $ref: '#/components/schemas/UserDefinedProblemEvent'
        time:
          format: int64
          type: integer
      type: object
    UserDefinedProblemEvent:
      allOf:
      - $ref: '#/components/schemas/ProblemEvent'
      - $ref: '#/components/schemas/UserDefinedProblemEvent_allOf'
    VendorInfoWithMk:
      properties:
        entity_id:
          type: string
        entity_type:
          type: string
        entity_name:
          type: string
        vendor_ids:
          items:
            $ref: '#/components/schemas/VendorId'
          type: array
      type: object
    DetailedVendorInfo:
      allOf:
      - $ref: '#/components/schemas/VendorInfoWithMk'
      - $ref: '#/components/schemas/DetailedVendorInfo_allOf'
    DetailedVendorInfoResponse:
      example:
        results:
        - null
        - null
      properties:
        results:
          items:
            $ref: '#/components/schemas/DetailedVendorInfo'
          type: array
      type: object
    BulkProblemFetchResponse:
      example:
        results:
        - entity_type: VirtualMachine
          time: 0
          entity_id: entity_id
        - entity_type: VirtualMachine
          time: 0
          entity_id: entity_id
      properties:
        results:
          items:
            $ref: '#/components/schemas/ProblemWithTime'
          type: array
      type: object
    ProblemWithTime:
      example:
        entity_type: VirtualMachine
        time: 0
        entity_id: entity_id
      properties:
        entity_id:
          description: Entity Identifier
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        entity:
          $ref: '#/components/schemas/ProblemEvent'
        time:
          format: int64
          type: integer
      type: object
    EdgeDevice:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    RouterDevice:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/RouterDevice_allOf'
    NSXController:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    LogicalRouter:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/LogicalRouter_allOf'
    NSXTManagementNode:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTController:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTTransportNode:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTTransportZone:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTLoadBalancer:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTVirtualServer:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTServerPool:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTLogicalSwitch:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTRouterDevice:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXTEdgeCluster:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/EdgeDevice_allOf'
    NSXControllerCluster:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/NSXControllerCluster_allOf'
    AzureSubscription:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/AzureSubscription_allOf'
    AWSAccountManager:
      allOf:
      - $ref: '#/components/schemas/BaseEntity'
      - $ref: '#/components/schemas/AWSAccountManager_allOf'
    HcxDataSourceRequest:
      allOf:
      - $ref: '#/components/schemas/BaseDataSourceRequest'
      - $ref: '#/components/schemas/InfobloxManagerDataSourceRequest_allOf'
    HcxDataSource:
      allOf:
      - $ref: '#/components/schemas/BaseDataSource'
      - $ref: '#/components/schemas/SwitchDataSourceRequest_allOf'
    LicenseUsageCapacity:
      description: Capacity types for license usage
      enum:
      - CPUs
      - VMs
      - Edges
      - Devices
      - IPs
      - vCPUs
      - Hosts
      type: string
    LicenseUsageObject:
      description: License usage objects
      enum:
      - VMware vSphere
      - VMware Cloud on AWS
      - AWS
      - Azure
      - Physical IPs
      - SD-WAN
      - Networking Devices
      type: string
    LicenseCapacityType:
      description: License entitlement types
      enum:
      - CPU
      - CCU
      - VM
      - CORE
      - TEN_MBPS
      - THIRTY_MBPS
      - FIFTY_MBPS
      - HUNDRED_MBPS
      - TWO_HUNDRED_MBPS
      - FIVE_HUNDRED_MBPS
      - ONE_GBPS
      - TWO_GBPS
      - FIVE_GBPS
      - TEN_GBPS
      - THREE_FIFTY_MBPS
      - SEVEN_FIFTY_MBPS
      - DEVICE
      type: string
    LicenseEdition:
      description: Types for License Editions
      enum:
      - ADVANCED
      - ENTERPRISE
      - ROBO
      - SDWAN
      - NAV
      type: string
    LicenseUsage:
      items:
        properties:
          type:
            $ref: '#/components/schemas/LicenseUsageObject'
          unit:
            $ref: '#/components/schemas/LicenseUsageCapacity'
          count:
            description: Count for entitlement in use
            example: 132
            format: int32
            type: integer
          socketsUsed:
            description: Count for sockets in use
            example: 132
            format: int32
            type: integer
          coresUsed:
            description: Count for cores in use
            example: 1584
            format: int32
            type: integer
          edgesUsed:
            description: Count for edges in use
            example: 0
            format: int32
            type: integer
          devicesUsed:
            description: Count for edges in use
            example: 0
            format: int32
            type: integer
          query:
            description: Search query used to calculate the usage
            example: Hosts where manager.SDDC Type = 'ONPREM' and model != 'VMware
              Mobility Platform' and Witness = False group by manager order by sum(CPU
              Sockets)
            type: string
        type: object
      type: array
    VRNILicense:
      example:
        evaluation: true
        entitlements:
        - count: 0
        - count: 0
        licenseKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEE
        deploymentType: onprem
        deleted: true
        serviceTag: CPN0EgdEOFVWNzM0
        invalid: true
        numberOfSockets: 25
        productName: VMware vRealize Network Insight
        suspended: true
      properties:
        productName:
          example: VMware vRealize Network Insight
          type: string
        evaluation:
          description: true if license is evaluation license
          type: boolean
        licenseKey:
          description: license serial key
          example: AAAAA-BBBBB-CCCCC-DDDDD-EEEE
          type: string
        numberOfSockets:
          description: sockets entitlement for this license
          example: 25
          format: int32
          type: integer
        serviceTag:
          description: service tag
          example: CPN0EgdEOFVWNzM0
          type: string
        deploymentType:
          description: environment deployment type
          example: onprem
          type: string
        capacityType:
          $ref: '#/components/schemas/LicenseCapacityType'
        edition:
          $ref: '#/components/schemas/LicenseEdition'
        suspended:
          description: true if customer state is suspended
          type: boolean
        deleted:
          description: true if customer state is deleted
          type: boolean
        invalid:
          description: true for license keys from last version, which are active only
            for grace period
          type: boolean
        entitlements:
          description: list of entitlements supported by the license
          items:
            $ref: '#/components/schemas/VRNILicense_entitlements'
          type: array
      type: object
    LicensingKeyRequest:
      description: license request object
      example:
        licenseKey: licenseKey
      properties:
        licenseKey:
          type: string
      type: object
    LicensingActivate:
      example:
        result:
          evaluation: true
          entitlements:
          - count: 0
          - count: 0
          licenseKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEE
          deploymentType: onprem
          deleted: true
          serviceTag: CPN0EgdEOFVWNzM0
          invalid: true
          numberOfSockets: 25
          productName: VMware vRealize Network Insight
          suspended: true
      properties:
        result:
          $ref: '#/components/schemas/VRNILicense'
      type: object
    LicensingResponse:
      example:
        result:
          numOfEnterpriseLicense: 10
          ccuCapacity: 10
          numOfValidAdvancedLicense: 5
          numOfValidROBOLicense: 1
          numOfActiveSDWANLicense: 1
          enterprise: true
          numOfValidEnterpriseLicense: 10
          numOfActiveAdvancedLicense: 5
          usedDevices: 10
          numOfActiveROBOLicense: 10
          usedSockets: 64
          edgeCapacity: 10
          evaluation: true
          numOfActiveEnterpriseLicense: 2
          serviceTag: CJBOEgdEQVMzWTFI
          numOfValidSDWANLicense: 5
          customerId: 10000
          coreCapacity: 10
          expireDate: 10
          numOfActiveLicense: 1
          numOfActiveNAVLicense: 7
          vmCapacity: 10
          cpuCapacity: 10
          numOfValidNAVLicense: 2
          licenseUsage:
          - null
          - null
          licenses:
          - evaluation: true
            entitlements:
            - count: 0
            - count: 0
            licenseKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEE
            deploymentType: onprem
            deleted: true
            serviceTag: CPN0EgdEOFVWNzM0
            invalid: true
            numberOfSockets: 25
            productName: VMware vRealize Network Insight
            suspended: true
          - evaluation: true
            entitlements:
            - count: 0
            - count: 0
            licenseKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEE
            deploymentType: onprem
            deleted: true
            serviceTag: CPN0EgdEOFVWNzM0
            invalid: true
            numberOfSockets: 25
            productName: VMware vRealize Network Insight
            suspended: true
          numOfValidLicense: 1
          usedEdges: 10
          usedCores: 768
      properties:
        result:
          $ref: '#/components/schemas/LicensingResponse_result'
      type: object
    ValidateConnectionViaWebProxyResponse_allOf:
      properties:
        status:
          description: Validation status of a connected entity with the updated web
            proxy details
          example: PASS
          type: string
        error_code:
          description: Error code in case validation failed
          example: -1
          type: integer
        message:
          description: Error message in case validation failed
          type: string
    VCenterDataSource_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        is_vmc:
          default: false
          description: Whether vCenter is a VMware Cloud operated vCenter (true or
            false).
          type: boolean
    ContainerBaseDataSource_allOf:
      properties:
        manager_id:
          description: Associated NSX-T data source entity ID
          example: 192.168.10.1
          type: string
        credentials:
          $ref: '#/components/schemas/K8SCredentials'
    CiscoSwitchDataSource_allOf:
      properties:
        switch_type:
          $ref: '#/components/schemas/CiscoSwitchType'
    DellSwitchDataSource_allOf:
      properties:
        switch_type:
          $ref: '#/components/schemas/DellSwitchType'
    SwitchDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
    NSXVManagerDataSource_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        vcenter_id:
          description: Associated vCenter data source entity ID
          type: string
        ipfix_enabled:
          default: false
          description: Whether or not to configure NSX-v to send IPFIX to vRNI
          type: boolean
        central_cli_enabled:
          default: false
          description: Whether or not collection via the Central CLI for ESG data
            is enabled
          type: boolean
        latency_enabled:
          default: false
          description: Whether or not to configure NSX-v to send virtual infrastructure
            latency metrics to vRNI
          type: boolean
    NSXTManagerDataSource_allOf:
      properties:
        ipfix_enabled:
          default: false
          description: Whether or not to configure NSX-T to send IPFIX to vRNI
          type: boolean
        latency_enabled:
          default: false
          description: Whether or not to configure NSX-T to send virtual infrastructure
            latency metrics to vRNI
          type: boolean
        nsxi_enabled:
          default: false
          description: Whether or not to configure NSX Intelligence to send additional
            traffic information to vRNI
          type: boolean
    PKSDataSource_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        manager_id:
          description: Associated NSX-T Manager entity ID
          type: string
    AzureDataSource_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/AzureCredentials'
        flows_enabled:
          default: false
          description: Whether or not to collect flow data from the VNET Flow Logs
          type: boolean
        web_proxy_id:
          description: Identifier of web proxy to be used for connection. If not given
            or empty, will clear any web proxy used earlier
          type: string
    ServiceNowDataSource_allOf:
      properties:
        instance_id:
          description: Associated nsxt data source entity Id
          type: string
        graph_configuration:
          description: CMDB configuration for CIs, relationships and graph traversal
            rules
          type: string
        is_graph_config_customized:
          description: Has graph configuration been modified from the default configuration
          type: boolean
        web_proxy_id:
          description: Identifier of web proxy to be used for connection
          type: string
    PolicyManagerDataSource_allOf:
      properties:
        csp_refresh_token:
          description: Cloud Services Portal API Refresh Token. You can generate this
            via the CSP UI under My Account and API Tokens.
          type: string
        vcenter_id:
          description: Associated vcenter data source entity ID
          type: string
        ipfix_enabled:
          default: false
          description: Whether or not to configure NSX-T to send IPFIX to vRNI
          type: boolean
        web_proxy_id:
          description: Identifier of web proxy to be used for connection
          type: string
    VeloCloudDataSource_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        web_proxy_id:
          description: Identifier of web proxy to be used for connection
          type: string
    AWSDataSource_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/AWSCredentials'
        flows_enabled:
          default: false
          description: Whether or not to collect flows from the VPC Flow Logs
          type: boolean
        add_linked_accounts:
          default: false
          description: Automatically add linked accounts
          type: boolean
        role_arn_suffix:
          type: string
        linked_role_arn:
          description: Should not be populated. Will be ignored if populated.
          type: string
        data_source_hierarchy:
          description: Should not be populated. Will be ignored if populated.
          type: string
        enable_aws_geo_restrictions:
          default: false
          description: Limit collection to only regions specified in selected_regions
          type: boolean
        selected_regions:
          items:
            type: string
          type: array
        child_datasource_count:
          description: Should not be populated. Will be ignored if populated.
          type: integer
        child_datasources:
          description: Should not be populated. Will be ignored if populated.
          items:
            $ref: '#/components/schemas/DataSourceEntityId'
          type: array
        web_proxy_id:
          description: Identifier of web proxy to be used for connection. If not given
            or empty, any web proxy used earlier will be cleared
          type: string
    NSXVManagerDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        vcenter_id:
          description: Associated vcenter data source entity ID
          example: 18230:3:187309184
          type: string
        ipfix_enabled:
          default: false
          description: Whether or not to configure NSX-v to send IPFIX to vRNI
          example: true
          type: boolean
        central_cli_enabled:
          default: false
          description: Whether or not collection via the Central CLI for ESG data
            is enabled
          example: true
          type: boolean
        latency_enabled:
          default: false
          description: Whether or not to configure NSX-v to send virtual infrastructure
            latency metrics to vRNI
          example: true
          type: boolean
      required:
      - credentials
      - vcenter_id
    PKSDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        manager_id:
          description: Associated NSX-T Manager data source entity ID
          example: 18230:3:187309184
          type: string
      required:
      - credentials
      - manager_id
    NSXTManagerDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        ipfix_enabled:
          default: false
          description: Whether or not to configure NSX-T to send IPFIX to vRNI
          example: true
          type: boolean
        latency_enabled:
          default: false
          description: Whether or not to configure NSX-T to send virtual infrastructure
            latency metrics to vRNI
          example: true
          type: boolean
        nsxi_enabled:
          default: false
          description: Whether or not to configure NSX Intelligence to send additional
            traffic information to vRNI
          example: true
          type: boolean
      required:
      - credentials
    KubernetesDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/K8SCredentials'
        manager_id:
          description: Associated NSX-T data source entity Id
          example: 18230:3:187309184
          type: string
      required:
      - credentials
      - manager_id
    AzureDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/AzureCredentials'
        flows_enabled:
          default: false
          description: Whether or not to collect flow data from the VNET Flow Logs
          type: boolean
        web_proxy_id:
          description: Identifier of web proxy to be used for connection. If not given
            or empty, any web proxy used earlier will be cleared
          type: string
      required:
      - credentials
    VeloCloudDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        web_proxy_id:
          description: Identifier of web proxy to be used for connection. If not given
            or empty, any web proxy used earlier will be cleared
          type: string
      required:
      - credentials
    ServiceNowDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
        instance_id:
          description: Associated ServiceNow instance
          example: dev36113.service-now.com
          type: string
        graph_configuration:
          description: CMDB configuration for CIs, relationships and graph traversal
            rules
          type: string
        is_graph_config_customized:
          description: Has graph configuration been modified from the default configuration
          type: boolean
        web_proxy_id:
          description: Identifier of web proxy to be used for connection. If not given
            or empty, any web proxy used earlier will be cleared
          type: string
      required:
      - credentials
      - instance_id
      - is_graph_config_customized
    InfobloxManagerDataSourceRequest_allOf:
      properties:
        credentials:
          $ref: '#/components/schemas/PasswordCredentials'
      required:
      - credentials
    PolicyManagerDataSourceRequest_allOf:
      properties:
        csp_refresh_token:
          description: Cloud Services Portal API Refresh Token. You can generate this
            via the CSP UI under My Account and API Tokens.
          example: e9fb6352-03cb-4d98-8f03-b82226c17507
          type: string
        vcenter_id:
          description: Associated vcenter data source entity ID
          example: 18230:3:187309184
          type: string
        ipfix_enabled:
          default: false
          description: Whether or not to configure NSX-T to send IPFIX to vRNI
          type: boolean
        web_proxy_id:
          description: Identifier of web proxy to be used for connection. If not given
            or empty, any web proxy used earlier will be cleared
          type: string
      required:
      - vcenter_id
    FetchRequest_entity_ids:
      example:
        entity_type: VirtualMachine
        time: 0
        entity_id: entity_id
      properties:
        entity_id:
          description: Entity Identifier
          type: string
        entity_type:
          $ref: '#/components/schemas/EntityType'
        time:
          format: int64
          type: integer
    EC2Instance_allOf:
      properties:
        vpc:
          $ref: '#/components/schemas/Reference'
        region:
          type: string
        account:
          $ref: '#/components/schemas/Reference'
    AzureVM_allOf:
      properties:
        vnet:
          $ref: '#/components/schemas/Reference'
        region:
          description: The Azure region this VM is hosted
          example: westus-1
          type: string
        subscription:
          $ref: '#/components/schemas/Reference'
    VirtualMachine_allOf:
      properties:
        cluster:
          $ref: '#/components/schemas/Reference'
        resource_pool:
          $ref: '#/components/schemas/Reference'
        security_tags:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        layer2_networks:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        host:
          $ref: '#/components/schemas/Reference'
        vlans:
          items:
            $ref: '#/components/schemas/Vlan'
          type: array
        vendor_id:
          type: string
        vcenter_manager:
          $ref: '#/components/schemas/Reference'
        folders:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        datastores:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        datacenter:
          $ref: '#/components/schemas/Reference'
        nsx_manager:
          $ref: '#/components/schemas/Reference'
        source_inversion_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        destination_inversion_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        cpu_count:
          description: Number of vCPUs this VM has
          example: 4
          format: int32
          type: integer
        memory:
          description: Amount of memory this VM has
          example: 1024
          format: int32
          type: integer
    BaseVirtualMachine_allOf:
      properties:
        ip_addresses:
          items:
            $ref: '#/components/schemas/IpV4Address'
          type: array
        default_gateway:
          description: Default gateway IP of the VM
          type: string
        vnics:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        security_groups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        source_firewall_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        destination_firewall_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        ip_sets:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    Cluster_allOf:
      properties:
        total_cpus:
          description: Total CPUs inside the cluster
          example: 32
          format: int32
          type: integer
        total_memory:
          description: Total memory inside the cluster
          example: 102400
          format: int64
          type: integer
        num_cpu_cores:
          description: Total CPU Cores inside the cluster
          example: 320
          format: int32
          type: integer
        vendor_id:
          description: Internal vCenter ID of the cluster
          example: c-13
          type: string
        num_hosts:
          description: Number of ESXi hosts in the cluster
          example: 4
          format: int32
          type: integer
        num_datastores:
          description: Number of datastores in the cluster
          example: 4
          format: int32
          type: integer
        nsx_manager:
          $ref: '#/components/schemas/Reference'
        vcenter_manager:
          $ref: '#/components/schemas/Reference'
    SecurityTag_allOf:
      properties:
        description:
          type: string
        direct_security_groups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        security_groups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        vendor_id:
          type: string
        nsx_manager:
          $ref: '#/components/schemas/Reference'
    ResourcePool_allOf:
      properties:
        vcenter_manager:
          $ref: '#/components/schemas/Reference'
        vendor_id:
          type: string
    Host_allOf:
      properties:
        vmknics:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        cluster:
          $ref: '#/components/schemas/Reference'
        vcenter_manager:
          $ref: '#/components/schemas/Reference'
        vm_count:
          description: Number of VMs running on the host
          example: 100
          format: int32
          type: integer
        datastores:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        service_tag:
          description: Hardware service tag of the host
          example: CT1342
          type: string
        vendor_id:
          description: Internal vCenter ID of the host
          example: host-12
          type: string
        nsx_manager:
          $ref: '#/components/schemas/Reference'
        maintenance_mode:
          description: Is the host in maintenance mode?
          example: "false"
          type: string
        connection_state:
          description: Connection state of the host
          example: DISCONNECTED
          type: string
    DistributedVirtualPortgroup_allOf:
      properties:
        vendor_id:
          type: string
        vcenter_manager:
          $ref: '#/components/schemas/Reference'
        distributed_virtual_switch:
          $ref: '#/components/schemas/Reference'
    DistributedVirtualSwitch_allOf:
      properties:
        vendor_id:
          type: string
        vcenter_manager:
          $ref: '#/components/schemas/Reference'
        hosts:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    VCDatacenter_allOf:
      properties:
        vendor_id:
          type: string
        vcenter_manager:
          $ref: '#/components/schemas/Reference'
    KubernetesService_allOf:
      properties:
        vendor_id:
          type: string
        kubernetes_cluster:
          $ref: '#/components/schemas/Reference'
        manager:
          $ref: '#/components/schemas/Reference'
        annotations:
          items:
            type: string
          type: array
        labels:
          items:
            type: string
          type: array
        creation_timestamp:
          type: string
        namespace:
          $ref: '#/components/schemas/Reference'
        cluster_ip:
          $ref: '#/components/schemas/IpV4Address'
        loadbalancer_ip:
          $ref: '#/components/schemas/IpV4Address'
        type:
          type: string
        external_ips:
          items:
            $ref: '#/components/schemas/IpV4Address'
          type: array
        selectors:
          items:
            type: string
          type: array
    Vmknic_allOf:
      properties:
        ip_addresses:
          items:
            $ref: '#/components/schemas/IpV4Address'
          type: array
        vlan:
          $ref: '#/components/schemas/Vlan'
        host:
          $ref: '#/components/schemas/Reference'
        layer2_network:
          $ref: '#/components/schemas/Reference'
    BaseVnic_allOf:
      properties:
        ip_addresses:
          items:
            $ref: '#/components/schemas/IpV4Address'
          type: array
        layer2_network:
          $ref: '#/components/schemas/Reference'
        vlan:
          $ref: '#/components/schemas/Vlan'
        vm:
          $ref: '#/components/schemas/Reference'
    VxlanLayer2Network_allOf:
      properties:
        segment_id:
          format: int32
          type: integer
        vteps:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        scope:
          $ref: '#/components/schemas/ScopeEnum'
        nsx_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    VlanL2Network_allOf:
      properties:
        vlan_id:
          type: string
        distributed_virtual_switches:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        distributed_virtual_portgroups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    BaseL2Network_allOf:
      properties:
        network_addresses:
          items:
            type: string
          type: array
        gateways:
          items:
            type: string
          type: array
    NSXTIPSet_allOf:
      properties:
        nsxt_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    NSXIPSet_allOf:
      properties:
        nsx_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        scope:
          $ref: '#/components/schemas/ScopeEnum'
    BaseIPSet_allOf:
      properties:
        ip_addresses:
          items:
            $ref: '#/components/schemas/IpV4Address'
          type: array
        ip_ranges:
          items:
            $ref: '#/components/schemas/IpAddressRange'
          type: array
        ip_numeric_ranges:
          items:
            $ref: '#/components/schemas/IpNumericRange'
          type: array
        parent_security_groups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        direct_source_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        direct_destination_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        indirect_source_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        indirect_destination_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        vendor_id:
          type: string
        vendor:
          type: string
    NSXPolicyGroup_allOf:
      properties:
        realized_entities:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        sddc_type:
          $ref: '#/components/schemas/SddcType'
    NSGroup_allOf:
      properties:
        nsxt_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        ip_sets:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        security_tags:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    NSXSecurityGroup_allOf:
      properties:
        nsx_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        scope:
          $ref: '#/components/schemas/ScopeEnum'
        ip_sets:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        security_tags:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    EC2SecurityGroup_allOf:
      properties:
        vpc:
          $ref: '#/components/schemas/Reference'
        region:
          type: string
    AzureASG_allOf:
      properties:
        vnet:
          $ref: '#/components/schemas/Reference'
        region:
          type: string
        security_tags:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    BaseSecurityGroup_allOf:
      properties:
        direct_source_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        direct_destination_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        indirect_source_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        indirect_destination_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        parents:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        members:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        direct_members:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        vendor_id:
          type: string
        excluded_members:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    BaseFirewallRule_allOf:
      properties:
        rule_id:
          type: string
        section_id:
          type: string
        section_name:
          type: string
        sequence_number:
          type: integer
        source_any:
          type: boolean
        destination_any:
          type: boolean
        service_any:
          type: boolean
        sources:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        destinations:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        services:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        action:
          $ref: '#/components/schemas/FirewallAction'
        disabled:
          type: boolean
        source_inversion:
          type: boolean
        destination_inversion:
          type: boolean
        port_ranges:
          items:
            $ref: '#/components/schemas/PortRange'
          type: array
    NSXFirewallRule_allOf:
      properties:
        logging_enabled:
          type: boolean
        direction:
          $ref: '#/components/schemas/FirewallDirection'
        scope:
          $ref: '#/components/schemas/ScopeEnum'
        nsx_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    NSXTFirewallRule_allOf:
      properties:
        applied_tos:
          items:
            $ref: '#/components/schemas/AppliedTo'
          type: array
    NSXRedirectRule_allOf:
      properties:
        logging_enabled:
          type: boolean
        direction:
          $ref: '#/components/schemas/FirewallDirection'
        service_profile:
          type: string
    BaseGenericFirewallRule_allOf:
      properties:
        direction:
          $ref: '#/components/schemas/FirewallDirection'
    EC2SGFirewallRule_allOf:
      properties:
        vpc:
          $ref: '#/components/schemas/Reference'
        direction:
          $ref: '#/components/schemas/EC2FirewallDirection'
        owner_security_group:
          $ref: '#/components/schemas/Reference'
    AzureNSGRule_allOf:
      properties:
        direction:
          $ref: '#/components/schemas/EC2FirewallDirection'
    Group_allOf:
      properties:
        members:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    VCenterManager_allOf:
      properties:
        ip_address:
          $ref: '#/components/schemas/IpV4Address'
        fqdn:
          type: string
        vm:
          $ref: '#/components/schemas/Reference'
        nsx_manager:
          $ref: '#/components/schemas/Reference'
        vc_uuid:
          type: string
    NSXPolicyManager_allOf:
      properties:
        ip_address:
          $ref: '#/components/schemas/IpV4Address'
        data_source:
          $ref: '#/components/schemas/Reference'
        fqdn:
          type: string
        enforcement_points:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        sddc_type:
          $ref: '#/components/schemas/SddcType'
        sddc:
          $ref: '#/components/schemas/Reference'
    NSXTManager_allOf:
      properties:
        fqdn:
          type: string
        ip_address:
          $ref: '#/components/schemas/IpV4Address'
        version:
          type: string
    NSXVManager_allOf:
      properties:
        fqdn:
          type: string
        ip_address:
          $ref: '#/components/schemas/IpV4Address'
        version:
          type: string
        primary_nsx_manager:
          $ref: '#/components/schemas/Reference'
        vm:
          $ref: '#/components/schemas/Reference'
        role:
          type: string
    BaseFirewallManager_allOf:
      properties:
        nsx_manager:
          $ref: '#/components/schemas/Reference'
        version:
          type: string
        ip_address:
          $ref: '#/components/schemas/IpV4Address'
    Flow_allOf:
      properties:
        source_vm:
          $ref: '#/components/schemas/Reference'
        destination_vm:
          $ref: '#/components/schemas/Reference'
        source_vnic:
          $ref: '#/components/schemas/Reference'
        destination_vnic:
          $ref: '#/components/schemas/Reference'
        source_vpc:
          $ref: '#/components/schemas/Reference'
        destination_vpc:
          $ref: '#/components/schemas/Reference'
        source_cloud_network:
          $ref: '#/components/schemas/Reference'
        destination_cloud_network:
          $ref: '#/components/schemas/Reference'
        source_azure_nsg:
          $ref: '#/components/schemas/Reference'
        destination_azure_nsg:
          $ref: '#/components/schemas/Reference'
        source_datacenter:
          $ref: '#/components/schemas/Reference'
        destination_datacenter:
          $ref: '#/components/schemas/Reference'
        source_ip:
          $ref: '#/components/schemas/IpV4Address'
        destination_ip:
          $ref: '#/components/schemas/IpV4Address'
        source_l2_network:
          $ref: '#/components/schemas/Reference'
        destination_l2_network:
          $ref: '#/components/schemas/Reference'
        port:
          $ref: '#/components/schemas/PortRange'
        source_folders:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        destination_folders:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        source_resource_pool:
          $ref: '#/components/schemas/Reference'
        destination_resource_pool:
          $ref: '#/components/schemas/Reference'
        source_cluster:
          $ref: '#/components/schemas/Reference'
        destination_cluster:
          $ref: '#/components/schemas/Reference'
        protocol:
          $ref: '#/components/schemas/Protocol'
        source_ip_sets:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        destination_ip_sets:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        source_security_groups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        destination_security_groups:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        traffic_type:
          $ref: '#/components/schemas/FlowTrafficType'
        source_security_tags:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        destination_security_tags:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        source_host:
          $ref: '#/components/schemas/Reference'
        destination_host:
          $ref: '#/components/schemas/Reference'
        source_vm_tags:
          items:
            type: string
          type: array
        destination_vm_tags:
          items:
            type: string
          type: array
        within_host:
          type: boolean
        firewall_action:
          $ref: '#/components/schemas/FirewallAction'
        firewall_rule_id:
          type: string
        flow_tag:
          items:
            $ref: '#/components/schemas/FlowTag'
          type: array
    NSService_allOf:
      properties:
        nsxt_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        vendor_id:
          type: string
    NSXService_allOf:
      properties:
        nsx_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        scope:
          $ref: '#/components/schemas/ScopeEnum'
        vendor_id:
          type: string
    BaseService_allOf:
      properties:
        protocol:
          type: string
        port_ranges:
          items:
            $ref: '#/components/schemas/PortRange'
          type: array
    NSXServiceGroup_allOf:
      properties:
        scope:
          $ref: '#/components/schemas/ScopeEnum'
        nsx_managers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        vendor_id:
          type: string
    VPC_allOf:
      properties:
        cidr_block:
          $ref: '#/components/schemas/IpV4Address'
        state:
          type: string
        region:
          type: string
        default_vpc:
          type: boolean
        vendor_id:
          type: string
        last_synched_time:
          format: int64
          type: integer
    CloudNetwork_allOf:
      properties:
        peer_cloud_networks:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        address_spaces:
          items:
            $ref: '#/components/schemas/IpV4Address'
          type: array
        provisioned_state:
          type: string
        regions:
          items:
            type: string
          type: array
        vendor_id:
          type: string
    NSXDistributedFirewall_allOf:
      properties:
        vendor_id:
          type: string
    PolicyManagerFirewall_allOf:
      properties:
        firewall_sections:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        sddc_type:
          $ref: '#/components/schemas/SddcType'
    BaseFirewall_allOf:
      properties:
        firewall_rules:
          items:
            $ref: '#/components/schemas/RuleSet'
          type: array
        exclusions:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    ProblemEvent_allOf:
      properties:
        severity:
          enum:
          - CRITICAL
          - MODERATE
          - WARNING
          - INFO
          type: string
        event_close_time_epoch_ms:
          format: int64
          type: integer
    FirewallRuleMaskEvent_allOf:
      properties:
        maskedRule:
          $ref: '#/components/schemas/Reference'
        maskingRule:
          $ref: '#/components/schemas/Reference'
    BaseEvent_allOf:
      properties:
        anchor_entities:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        related_entities:
          description: The entity IDs of all related objects
          items:
            $ref: '#/components/schemas/Reference'
          type: array
        message:
          description: Event message
          type: string
        event_tags:
          description: Event tags
          items:
            type: string
          type: array
        admin_state:
          description: Administrative state of the event
          enum:
          - ENABLED
          - DISABLED
          type: string
        archived:
          description: Whether of not the event is archived
          example: false
          type: boolean
        event_time_epoch_ms:
          description: Epoc timestamp of when the event was triggered
          format: int64
          type: integer
        event_type:
          description: The type of event
          example: UserDefinedEvent
          type: string
        recommendations:
          description: A list of recommended remedies
          items:
            type: string
          type: array
    Application_allOf:
      properties:
        create_time:
          description: Timestamp of when the object was created
          example: 159724400600
          format: int64
          type: integer
        created_by:
          description: The username of who created the object
          example: admin@local
          type: string
        last_modified_time:
          description: Timestamp of when the object was last modified
          example: 159724400600
          format: int64
          type: integer
        last_modified_by:
          description: The username of who last modified the object
          example: someone@else.com
          type: string
    Tier_allOf:
      properties:
        group_membership_criteria:
          items:
            $ref: '#/components/schemas/GroupMembershipCriteria'
          type: array
        application:
          $ref: '#/components/schemas/Reference'
    IPEndpoint_allOf:
      properties:
        ip_address:
          $ref: '#/components/schemas/IpV4Address'
        fqdns:
          items:
            type: string
          type: array
    EntityName_allOf:
      properties:
        name:
          type: string
    SubnetMapping_allOf:
      properties:
        cidr:
          type: string
        vlan_id:
          format: int32
          type: integer
    UserDefinedProblemEvent_allOf:
      properties:
        total_count:
          format: int64
          type: integer
        refs_added_count:
          format: int64
          type: integer
        refs_deleted_count:
          format: int64
          type: integer
        subscriptions:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    DetailedVendorInfo_allOf:
      properties:
        manager:
          $ref: '#/components/schemas/VendorInfoWithMk'
    EdgeDevice_allOf:
      properties:
        vendor_id:
          type: string
        manager:
          $ref: '#/components/schemas/Reference'
    RouterDevice_allOf:
      properties:
        manager:
          $ref: '#/components/schemas/Reference'
    LogicalRouter_allOf:
      properties:
        sub_types:
          items:
            format: int32
            type: integer
          type: array
        manager:
          $ref: '#/components/schemas/Reference'
    NSXControllerCluster_allOf:
      properties:
        manager:
          $ref: '#/components/schemas/Reference'
        controllers:
          items:
            $ref: '#/components/schemas/Reference'
          type: array
    AzureSubscription_allOf:
      properties:
        vendor_id:
          type: string
        secondary_id:
          type: string
        manager_id:
          type: string
    AWSAccountManager_allOf:
      properties:
        vendor_id:
          type: string
        manager_id:
          type: string
    VRNILicense_entitlements:
      example:
        count: 0
      properties:
        capacityType:
          $ref: '#/components/schemas/LicenseCapacityType'
        count:
          description: capacity count for entitlement
          format: int32
          type: integer
    LicensingResponse_result:
      example:
        numOfEnterpriseLicense: 10
        ccuCapacity: 10
        numOfValidAdvancedLicense: 5
        numOfValidROBOLicense: 1
        numOfActiveSDWANLicense: 1
        enterprise: true
        numOfValidEnterpriseLicense: 10
        numOfActiveAdvancedLicense: 5
        usedDevices: 10
        numOfActiveROBOLicense: 10
        usedSockets: 64
        edgeCapacity: 10
        evaluation: true
        numOfActiveEnterpriseLicense: 2
        serviceTag: CJBOEgdEQVMzWTFI
        numOfValidSDWANLicense: 5
        customerId: 10000
        coreCapacity: 10
        expireDate: 10
        numOfActiveLicense: 1
        numOfActiveNAVLicense: 7
        vmCapacity: 10
        cpuCapacity: 10
        numOfValidNAVLicense: 2
        licenseUsage:
        - null
        - null
        licenses:
        - evaluation: true
          entitlements:
          - count: 0
          - count: 0
          licenseKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEE
          deploymentType: onprem
          deleted: true
          serviceTag: CPN0EgdEOFVWNzM0
          invalid: true
          numberOfSockets: 25
          productName: VMware vRealize Network Insight
          suspended: true
        - evaluation: true
          entitlements:
          - count: 0
          - count: 0
          licenseKey: AAAAA-BBBBB-CCCCC-DDDDD-EEEE
          deploymentType: onprem
          deleted: true
          serviceTag: CPN0EgdEOFVWNzM0
          invalid: true
          numberOfSockets: 25
          productName: VMware vRealize Network Insight
          suspended: true
        numOfValidLicense: 1
        usedEdges: 10
        usedCores: 768
      properties:
        licenses:
          items:
            $ref: '#/components/schemas/VRNILicense'
          type: array
        licenseUsage:
          items:
            $ref: '#/components/schemas/LicenseUsage'
          type: array
        customerId:
          description: customer id
          example: 10000
          format: int32
          type: integer
        cpuCapacity:
          description: cpu capacity of current non-expired (valid licenses) and older
            (invalid) licenses (during grace period)
          example: 10
          format: int32
          type: integer
        ccuCapacity:
          description: ccu capacity of current non-expired (valid licenses) and older
            (invalid) licenses (during grace period)
          example: 10
          format: int32
          type: integer
        vmCapacity:
          description: VM capacity of current non-expired (valid licenses) and older
            (invalid) licenses (during grace period)
          example: 10
          format: int32
          type: integer
        coreCapacity:
          description: core capacity of current non-expired (valid licenses) and older
            (invalid) licenses (during grace period)
          example: 10
          format: int32
          type: integer
        edgeCapacity:
          description: edge capacity of current non-expired (valid licenses) and older
            (invalid) licenses (during grace period)
          example: 10
          format: int32
          type: integer
        serviceTag:
          description: service tag
          example: CJBOEgdEQVMzWTFI
          type: string
        expireDate:
          description: Maximum of expiry date for current licenses, 0 if any non-expiry
            license is present. Invalid/already expired license is not considered
            here.
          example: 10
          format: int32
          type: integer
        enterprise:
          description: true if non-expired ENTERPRISE license is available
          type: boolean
        evaluation:
          description: true if all licenses are evaluation license
          type: boolean
        numOfEnterpriseLicense:
          description: number of total enterprise licenses available
          example: 10
          format: int32
          type: integer
        numOfValidLicense:
          description: Total Number of valid licenses available. Active licenses from
            last major version which are only valid for grace period are not counted
          example: 1
          format: int32
          type: integer
        numOfValidEnterpriseLicense:
          description: Number of valid Enterprise licenses available. Active licenses
            from last major version which are only valid for grace period are not
            counted
          example: 10
          format: int32
          type: integer
        numOfValidSDWANLicense:
          description: Number of valid SDWAN licenses available. Active licenses from
            last major version which are only valid for grace period are not counted
          example: 5
          format: int32
          type: integer
        numOfValidNAVLicense:
          description: Number of valid NAV licenses available. Active licenses from
            last major version which are only valid for grace period are not counted
          example: 2
          format: int32
          type: integer
        numOfValidAdvancedLicense:
          description: Number of valid Advanced licenses available. Active licenses
            from last major version which are only valid for grace period are not
            counted
          example: 5
          format: int32
          type: integer
        numOfValidROBOLicense:
          description: Number of valid ROBO licenses available. Active licenses from
            last major version which are only valid for grace period are not counted
          example: 1
          format: int32
          type: integer
        numOfActiveLicense:
          description: Total Number of active licenses (non-expired and licenses from
            last major version during grace period)
          example: 1
          format: int32
          type: integer
        numOfActiveEnterpriseLicense:
          description: Total Number of active Enterprise licenses (non-expired and
            licenses from last major version during grace period)
          example: 2
          format: int32
          type: integer
        numOfActiveSDWANLicense:
          description: Total Number of active SDWAN licenses (non-expired and licenses
            from last major version during grace period)
          example: 1
          format: int32
          type: integer
        numOfActiveNAVLicense:
          description: Total Number of active NAV licenses (non-expired and licenses
            from last major version during grace period)
          example: 7
          format: int32
          type: integer
        numOfActiveAdvancedLicense:
          description: Total Number of active Advanced licenses (non-expired and licenses
            from last major version during grace period)
          example: 5
          format: int32
          type: integer
        numOfActiveROBOLicense:
          description: Total Number of active ROBO licenses (non-expired and licenses
            from last major version during grace period)
          example: 10
          format: int32
          type: integer
        usedSockets:
          description: Count of used sockets
          example: 64
          format: int32
          type: integer
        usedCores:
          description: Count of used cores
          example: 768
          format: int32
          type: integer
        usedEdges:
          description: Count of used edges
          example: 10
          format: int32
          type: integer
        usedDevices:
          description: Count of used devices
          example: 10
          format: int32
          type: integer
  securitySchemes:
    ApiKeyAuth:
      description: API Key - NetworkInsight {token}
      in: header
      name: Authorization
      type: apiKey
